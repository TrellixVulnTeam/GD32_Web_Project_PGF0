{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","components/Logo.js","components/DashboardNavbar.js","components/NavItem.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainNavbar.js","components/MainLayout.js","components/mypage/MypageProfile.js","ApiService.js","components/mypage/MypageProfileDetails.js","pages/Mypage.js","service/BoardService.js","components/board/ListBoardComponent.js","pages/Board.js","components/home/MyRoom.js","pages/Home.js","icons/Facebook.js","icons/Google.js","pages/Login.js","pages/logout.js","pages/NotFound.js","components/product/ProductListToolbar.js","components/product/ProductCard.js","__mocks__/products.js","pages/ProductList.js","service/ApiService.js","pages/Register.js","components/settings/SettingsNotifications.js","components/settings/SettingsPassword.js","pages/Settings.js","pages/TimeManagement.js","pages/Calendar.js","calendar-data/tasks.js","components/board/ReadBoardComponent.js","components/board/CreateBoardComponent.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","Logo","props","alt","src","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","AppBar","elevation","Toolbar","to","Box","sx","flexGrow","Hidden","lgDown","IconButton","color","Badge","badgeContent","length","variant","onClick","NavItem","href","Icon","icon","title","useLocation","active","matchPath","path","end","pathname","ListItem","disableGutters","display","py","Button","component","RouterLink","justifyContent","textTransform","mr","size","cookies","Cookies","islogin","get","userid","userImage","image","user","avatar","jobTitle","name","decodeURI","items","BarChartIcon","UserIcon","BiBriefcaseAlt","BiChalkboard","BiCalendar","LockIcon","UserPlusIcon","DashboardSidebar","onMobileClose","openMobile","disabled","setDisabled","setdisplay","useEffect","content","flexDirection","m","alignItems","p","Avatar","cursor","Typography","className","id","alert","Divider","List","map","item","pt","Drawer","anchor","onClose","open","PaperProps","defaultProps","DashboardLayoutRoot","experimentalStyled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","MainNavbar","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","city","country","timezone","MypageProfile","Card","CardContent","gutterBottom","moment","format","CardActions","fullWidth","AxiosRequestConfig","headers","addUser","console","log","axios","post","loginUser","userData","username","password","set","logoutUser","UpdateUser","MypageProfileDetails","zipcode","address","addressDetail","phone","emailAddress","birthDay","values","setValues","handleChange","event","target","value","autoComplete","validationschema","Yup","shape","max","required","email","Date","CardHeader","subheader","Grid","container","spacing","md","xs","TextField","label","onChange","inputProps","readOnly","InputLabelProps","shrink","type","preventDefault","address_detail","birthday","ApiService","then","res","data","encodeURIComponent","memberIndex","replace","catch","err","Mypage","Helmet","minHeight","Container","maxWidth","lg","getBoards","pNum","objCnt","pageCnt","createBoard","board","getOneBoard","idx","updateBoard","put","deleteBoard","delete","Category","root","marginTop","PaginationStyle","withStyles","ul","Pagination","ListBoardComponent","history","useNavigate","state","pageNum","setNum","paging","setPage","boards","setBoards","classes","pIdx","BoardService","status","pagingData","currentPageNum","list","getBoardCategory","startIcon","e","style","Table","TableHead","TableRow","TableCell","align","TableBody","category","getAttribute","readBoard","createtDay","Intl","DateTimeFormat","parse","viewCnt","likes","count","pageNumCountTotal","page","BoardList","Materialroom","mt","ml","fontFamily","styles","backContainer","backgroundImage","backgroundSize","Home","URL","MyRoom","Facebook","SvgIcon","d","Google","initialValues","errMassage","hidden","Massage","Login","validationSchema","nullable","onSubmit","statusText","accessToken","tokenType","remove","assign","errors","handleBlur","handleSubmit","isSubmitting","touched","mb","pb","error","helperText","onBlur","Link","logout","removeChangeListener","NotFound","ip","textAlign","ProductListToolbar","mx","InputProps","startAdornment","InputAdornment","position","placeholder","ProductCard","product","media","description","pl","totalDownloads","uuid","createdAt","ProductList","products","policy","Register","navigate","oneOf","Checkbox","checked","underline","FormHelperText","SettingsNotifications","wrap","sm","FormControlLabel","control","defaultChecked","SettingsPassword","confirm","SettingsView","useStyles1","flexShrink","marginLeft","TablePaginationActions","useTheme","rowsPerPage","onChangePage","aria-label","direction","ceil","createData","calories","fat","rows","sort","b","useStyles2","table","minWidth","CustomPaginationActionsTable","React","setRowsPerPage","emptyRows","TableContainer","Paper","slice","row","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","appointments","green","lightBlue","deepOrange","resources","fieldName","instances","getBorder","lighten","fade","divider","darken","DayScaleCell","cell","userSelect","verticalAlign","paddingRight","outline","sun","cloud","rain","sunBack","cloudBack","rainBack","opacity","appointment","borderRadius","apptContent","whiteSpace","lineHeight","flexibleSpace","flexContainer","tooltipContent","tooltipText","body2","fontWeightBold","textOverflow","action","circle","textCenter","dateAndTitle","titleContainer","paddingBottom","Appointment","restProps","AppointmentContent","FlexibleSpace","Demo","commitChanges","bind","added","changed","deleted","setState","startingAddedId","undefined","filter","cTime","onCommitChanges","defaultCurrentDate","dayScaleCellComponent","appointmentComponent","appointmentContentComponent","flexibleSpaceComponent","showCloseButton","showDeleteButton","showOpenButton","ReadBoardComponent","pBoard","deleteView","JSON","stringify","marginBottom","marginRight","categoryNo","returnBoardType","defaultValue","multiline","rowsMax","createdTime","updatedTime","CreateBoardComponent","setIdx","pCategory","setCategory","pTitle","setTitle","pContent","setContent","textFieldStyle","FormControl","InputLabel","htmlFor","Select","MenuItem","Value","maril","routes","element","children","Board","Settings","App","routing","useRoutes","ThemeProvider","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gLAaoBA,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,8CCjBEC,EAAYC,aAAW,kBAAMC,YAAa,CAC9C,UAAW,CACT,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3BC,OAAQ,OACRC,MAAO,QAETC,KAAM,CACJC,gBAAiB,UACjBH,OAAQ,OACRC,MAAO,QAETG,EAAG,CACDC,eAAgB,QAElB,QAAS,CACPL,OAAQ,OACRC,MAAO,cAWEK,EANM,WAGnB,OAFAb,IAEO,M,SC4JTc,QAAMC,QAAQC,OAAOF,QAAMG,SAASC,UAAUC,UAAW,CACvDC,KAzLF,WAAiB,IAKXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXIC,EAAQC,KAAKC,OAAbF,IACFG,EAAKF,KAAKG,MACVC,EAAgBF,EAAhBE,YAaAC,EAAiBL,KAAKC,OAAOK,OAAOC,QAApCF,aA+BN,GA9BIA,EAAe,IACjBA,EAAe,GAGW,qBAAjBA,IACTA,EAAe,GAGZH,EAAGM,YAWNjB,EAAOW,EAAGO,KACVjB,EAAQU,EAAGQ,EACXjB,EAAMS,EAAGS,EAAIT,EAAGzB,OAAS,EACzBiB,EAASQ,EAAGS,EAAIT,EAAGzB,OAAS,EAC5BkB,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBK,EAAGL,eAAiB,SAfpCN,EAAOW,EAAGQ,EAAIR,EAAGxB,MAAQ,EACzBc,EAAQU,EAAGQ,EAAIR,EAAGxB,MAAQ,EAC1Be,EAAMS,EAAGS,EAEThB,EAAQ,EACRC,GAFAF,EAASQ,EAAGO,MAEKhB,EAAM,GAAK,EAC5BI,EAAgBK,EAAGL,eAAiB,UAclCO,EAAa,CAEf,IAAMQ,EAAUC,KAAKC,IAAID,KAAKE,IAAIxB,EAAOC,GAAQqB,KAAKE,IAAItB,EAAMC,IAE1DsB,GADNZ,EAAcA,EAAcQ,EAAUA,EAAUR,GACf,EAE3Ba,EAAa1B,GAA0B,SAAlBM,EAA2BmB,EAAarB,EAAQ,GACrEuB,EAAc1B,GAA2B,UAAlBK,GAA6BmB,EAAarB,EAAQ,GACzEwB,EAAY1B,GAAyB,QAAlBI,EAA0BmB,EAAapB,EAAQ,GAClEwB,EAAe1B,GAA4B,WAAlBG,GAA8BmB,EAAapB,EAAQ,GAE9EqB,IAAeC,IACjBzB,EAAM0B,EACNzB,EAAS0B,GAGPD,IAAcC,IAChB7B,EAAO0B,EACPzB,EAAQ0B,GAIZnB,EAAIsB,YACJtB,EAAIuB,UAAYpB,EAAGtB,gBACnBmB,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAMsB,EAAU,CAAC,CAACnC,EAAMG,GAAS,CAACH,EAAME,GAAM,CAACD,EAAOC,GAAM,CAACD,EAAOE,IAIhEiC,EADY,CAAC,SAAU,OAAQ,MAAO,SAChBC,QAAQ/B,EAAe,GAKjD,SAASgC,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,IALpB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAGjB,IAAMxD,EAAQgD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnCjD,EAASiD,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpChB,EAAIgB,EAAQ,GAAG,GACff,EAAIe,EAAQ,GAAG,GAWrB,IATA5B,EAASO,GAEIQ,KAAKE,IAAItC,GAAU,IAC9BqB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAItC,GAAU,IAErCqB,EAASe,KAAKE,IAAIrC,GAAS,IAC7BoB,EAASe,KAAKsB,MAAMtB,KAAKE,IAAIrC,GAAS,IAGpCD,EAAS,EAAG,CAEd,IAAM2D,EAAM1B,EACN2B,EAAM3B,EAAIhC,EACV4D,EAAM3B,EAAIlC,EACV8D,EAAM5B,EAAIlC,EAEV+D,EAAM9B,EACN+B,EAAM/B,EAAIhC,EACVgE,EAAM/B,EACNgC,EAAMhC,EAGZZ,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QACxC,GAAIhE,EAAQ,EAAG,CAEpB,IAAM0D,EAAM1B,EAAIhC,EACV2D,EAAM3B,EACN4B,EAAM3B,EACN4B,EAAM5B,EAEN6B,EAAM9B,EAAIhC,EACV+D,EAAM/B,EACNgC,EAAM/B,EAAIlC,EACVkE,EAAMhC,EAAIlC,EAGhBsB,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QAG7C3C,EAAIiC,OAAOtB,EAAIZ,EAAQa,GACvBZ,EAAI6C,OAAOlC,EAAIhC,EAAQoB,EAAQa,GAC/BZ,EAAI8C,iBAAiBnC,EAAIhC,EAAOiC,EAAGD,EAAIhC,EAAOiC,EAAIb,GAClDC,EAAI6C,OAAOlC,EAAIhC,EAAOiC,EAAIlC,EAASqB,GACnCC,EAAI8C,iBACFnC,EAAIhC,EACJiC,EAAIlC,EACJiC,EAAIhC,EAAQoB,EACZa,EAAIlC,GAENsB,EAAI6C,OAAOlC,EAAIZ,EAAQa,EAAIlC,GAC3BsB,EAAI8C,iBAAiBnC,EAAGC,EAAIlC,EAAQiC,EAAGC,EAAIlC,EAASqB,GACpDC,EAAI6C,OAAOlC,EAAGC,EAAIb,GAClBC,EAAI8C,iBAAiBnC,EAAGC,EAAGD,EAAIZ,EAAQa,GAI3CZ,EAAI+C,OACA1C,GACFL,EAAIgD,Y,qBClKOC,EAnBDC,YAAe,CAC3BC,QAAS,CACPC,WAAY,CACVC,QAAS,UACTC,MAAOC,IAAOC,OAAOC,OAEvBC,QAAS,CACPC,aAAc,UACdC,KAAM,WAERC,KAAM,CACJH,QAAS,UACTI,UAAW,YAGfC,QCnBa,CACb,OACA,iEACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEDLAC,WEpBa,CACbC,GAAI,CACFC,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBC,GAAI,CACFH,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBE,GAAI,CACFJ,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBG,GAAI,CACFL,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBI,GAAI,CACFN,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBK,GAAI,CACFP,WAAY,IACZC,SAAU,GACVC,cAAe,WAEjBM,SAAU,CACRR,WAAY,Q,iKCvBDS,EATF,SAACC,GAAD,OACX,iCACEC,IAAI,OACJC,IAAI,oBACAF,KCwDOG,EA3CS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,gBAAoBC,EAAW,qCAChCC,mBAAS,IAA1BC,EADiD,oBAGxD,OACE,cAACC,EAAA,EAAD,yBAAQC,UAAW,GAAOJ,GAA1B,aACE,eAACK,EAAA,EAAD,WACE,cAAC,IAAD,CAAYC,GAAG,IAAf,SACE,cAAC,EAAD,MAEF,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,KACrB,cAACC,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAlB,SACE,cAACC,EAAA,EAAD,CACEC,aAAcb,EAAcc,OAC5BH,MAAM,UACNI,QAAQ,MAHV,SAKE,cAAC,IAAD,UAON,cAACP,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAYC,MAAM,UAAlB,SACE,cAAC,IAAD,QAGJ,cAACH,EAAA,EAAD,UACE,cAACE,EAAA,EAAD,CAAYC,MAAM,UAAUK,QAASnB,EAArC,SACE,cAAC,IAAD,e,6HCkBGoB,EA1DC,SAAC,GAKV,IAJLC,EAII,EAJJA,KACMC,EAGF,EAHJC,KACAC,EAEI,EAFJA,MACGvB,EACC,uCACEjH,EAAWyI,cAEXC,IAASL,KAASM,YAAU,CAChCC,KAAMP,EACNQ,KAAK,GACJ7I,EAAS8I,UAEZ,OACE,cAACC,EAAA,EAAD,yBACEC,gBAAc,EACdvB,GAAI,CACFwB,QAAS,OACTC,GAAI,IAEFjC,GANN,aAQE,eAACkC,EAAA,EAAD,CACEC,UAAWC,IACX5B,GAAE,yBACAK,MAAO,iBACP5B,WAAY,SACZoD,eAAgB,aAChBlD,cAAe,EACf8C,GAAI,KACJK,cAAe,OACf5I,MAAO,QACH+H,GAAU,CACZZ,MAAO,iBATT,IAWA,QAAS,CACP0B,GAAI,KAGRjC,GAAIc,EAjBN,UAmBGC,GACC,cAACA,EAAD,CAAMmB,KAAK,OAEb,+BACGjB,WCvBLkB,EAAU,IAAIC,IAEdC,EAAU,CACdvB,KAAM,GACNG,MAAO,IAGyB,MAA9BkB,EAAQG,IAAI,gBACdD,EAAQvB,KAAO,SACfuB,EAAQpB,MAAQ,uBAEhBoB,EAAQvB,KAAO,UACfuB,EAAQpB,MAAQ,4BAElB,IAAMsB,GAASJ,EAAQG,IAAI,MACrBE,GAAY,CAChBC,MAAO,qCAIPD,GAAUC,MADG,OAAXF,GACgB,oCAElB,iCAA4CJ,EAAQG,IAAI,MAAxD,QAGF,IAAMI,GAAO,CACX5B,KAAM,cACN6B,OAAQH,GAAUC,MAClBG,SAAU,GACVC,KAAMC,UAAUX,EAAQG,IAAI,UAGxBS,GAAQ,CACZ,CACEjC,KAAM,YACNE,KAAMgC,IACN/B,MAAO,UAET,CAEEH,KAAM,cACNE,KAAMiC,IACNhC,MAAO,kCAET,CACEH,KAAM,sBACNE,KAAMkC,IACNjC,MAAO,4BAET,CACEH,KAAM,eACNE,KAAMmC,IACNlC,MAAO,sBAET,CACEH,KAAM,gBACNE,KAAMoC,IACNnC,MAAO,sBAET,CACEH,KAAMuB,EAAQvB,KACdE,KAAMqC,IACNpC,MAAOoB,EAAQpB,OAEjB,CACEH,KAAM,YACNE,KAAMsC,IACNrC,MAAO,6BAILsC,GAAmB,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACnChL,EAAWyI,cADyC,EAE1BvB,oBAAS,GAFiB,mBAEnD+D,EAFmD,KAEzCC,EAFyC,OAG5BhE,mBAAS,QAHmB,mBAGnD+B,EAHmD,KAG1CkC,EAH0C,KAK1DC,qBAAU,WACJJ,GAAcD,GAChBA,IAEgC,MAA9BrB,EAAQG,IAAI,gBACdsB,EAAW,UAEZ,CAACnL,EAAS8I,WAEb,IAgBMuC,EACJ,eAAC7D,EAAA,EAAD,CACEC,GAAI,CACFwB,QAAS,OACTqC,cAAe,SACf5K,OAAQ,OACR6K,EAAG,GALP,UAQE,eAAC/D,EAAA,EAAD,CACEC,GAAI,CACF+D,WAAY,SACZvC,QAAS,CAAEA,WACXqC,cAAe,SACfG,EAAG,EACHF,EAAG,GANP,UASE,cAACG,EAAA,EAAD,CACEtC,UAAWC,IACXvC,IAAKmD,GAAKC,OACVzC,GAAI,CACFkE,OAAQ,UACRhL,MAAO,GACPD,OAAQ,IAEV6G,GAAG,gBAEL,cAACqE,EAAA,EAAD,CACE9D,MAAM,cACNI,QAAQ,KACRT,GAAI,CACFkE,OAAQ,UACRF,EAAG,GALP,SAQGxB,GAAKG,OAER,cAACwB,EAAA,EAAD,CAAY9D,MAAM,gBAAgBI,QAAQ,QAA1C,SACG+B,GAAKE,WAER,cAAChB,EAAA,EAAD,CACE0C,UAAU,SACVC,GAAG,SACHrE,GAAI,CACFkE,OAAQ,UACRhL,MAAO,IACPD,OAAQ,GACR6K,EAAG,EACHtC,QAAS,OACTqC,cAAe,UAEjBxD,MAAM,UACNsB,UAAU,IACV6B,SAAUA,EAEV/C,QAAQ,YACRC,QAzEU,WAChB+C,GAAY,GACZa,MAAM,8DAuDF,0BAoBA,cAAC5C,EAAA,EAAD,CACE0C,UAAU,UACVC,GAAG,UACHrE,GAAI,CACFkE,OAAQ,UACRhL,MAAO,IACPD,OAAQ,IAEVoH,MAAM,UACNsB,UAAU,IACV6B,UAAWA,EAEX/C,QAAQ,YACRC,QArFY,WAClB+C,GAAY,GACZa,MAAM,8DAsEF,6BAkBF,cAACC,EAAA,EAAD,IACA,cAACxE,EAAA,EAAD,CAAKC,GAAI,CAAEgE,EAAG,GAAd,SACE,cAACQ,EAAA,EAAD,UACG3B,GAAM4B,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CACE9D,KAAM8D,EAAK9D,KAEXG,MAAO2D,EAAK3D,MACZD,KAAM4D,EAAK5D,MAFN4D,EAAK3D,cAOlB,cAAChB,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,OACjB8K,OAAQ,UACRF,EAAG,EACHW,GAAI,IALR,SAQE,cAACvE,EAAA,EAAD,UACE,cAAC,IAAD,WAMR,OACE,qCACE,cAACF,EAAA,EAAD,UACE,cAAC0E,EAAA,EAAD,CACEC,OAAO,OACPC,QAASxB,EACTyB,KAAMxB,EACN9C,QAAQ,YACRuE,WAAY,CACVhF,GAAI,CACF9G,MAAO,MAPb,SAWG0K,MAGL,cAAC1D,EAAA,EAAD,CAAQC,QAAM,EAAd,SACE,cAACyE,EAAA,EAAD,CACEC,OAAO,OACPE,MAAI,EACJtE,QAAQ,aACRuE,WAAY,CACVhF,GAAI,CACF9G,MAAO,IACPe,IAAK,GACLhB,OAAQ,sBARd,SAYG2K,UAYXP,GAAiB4B,aAAe,CAC9B3B,cAAe,aACfC,YAAY,GAGCF,UCvRT6B,GAAsBC,YAAmB,MAAnBA,EAC1B,kBAAgB,CACd/L,gBADF,EAAGoE,MACsBE,QAAQC,WAAWC,QAC1C4D,QAAS,OACTvI,OAAQ,OACRmM,SAAU,SACVlM,MAAO,WAILmM,GAAyBF,YAAmB,MAAnBA,EAC7B,gBAAG3H,EAAH,EAAGA,MAAH,oBACEgE,QAAS,OACT8D,KAAM,WACNF,SAAU,SACVG,WAAY,IACX/H,EAAMgI,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,SAKbC,GAA2BR,YAAmB,MAAnBA,CAA0B,CACzD3D,QAAS,OACT8D,KAAM,WACNF,SAAU,WAGNQ,GAAyBT,YAAmB,MAAnBA,CAA0B,CACvDG,KAAM,WACNrM,OAAQ,OACRmM,SAAU,SAwBGS,GArBS,WAAO,IAAD,EACgBpG,oBAAS,GADzB,mBACrBqG,EADqB,KACJC,EADI,KAG5B,OACE,eAACb,GAAD,WACE,cAAC,EAAD,CAAiB3F,gBAAiB,kBAAMwG,GAAiB,MACzD,cAAC,GAAD,CACEzC,cAAe,kBAAMyC,GAAiB,IACtCxC,WAAYuC,IAEd,cAACT,GAAD,UACE,cAACM,GAAD,UACE,cAACC,GAAD,UACE,cAAC,IAAD,cCpCGI,GAbI,SAAC7G,GAAD,OACjB,cAACQ,EAAA,EAAD,yBACEC,UAAW,GACPT,GAFN,aAIE,cAACU,EAAA,EAAD,CAASG,GAAI,CAAE/G,OAAQ,IAAvB,SACE,cAAC,IAAD,CAAY6G,GAAG,IAAf,SACE,cAAC,EAAD,YCPFmG,GAAiBd,YAAmB,MAAnBA,EACrB,kBAAgB,CACd/L,gBADF,EAAGoE,MACsBE,QAAQC,WAAWE,MAC1C2D,QAAS,OACTvI,OAAQ,OACRmM,SAAU,SACVlM,MAAO,WAILgN,GAAoBf,YAAmB,MAAnBA,CAA0B,CAClD3D,QAAS,OACT8D,KAAM,WACNF,SAAU,SACVG,WAAY,KAGRY,GAAsBhB,YAAmB,MAAnBA,CAA0B,CACpD3D,QAAS,OACT8D,KAAM,WACNF,SAAU,WAGNgB,GAAoBjB,YAAmB,MAAnBA,CAA0B,CAClDG,KAAM,WACNrM,OAAQ,OACRmM,SAAU,SAgBGiB,GAbI,kBACjB,eAACJ,GAAD,WACE,cAAC,GAAD,IACA,cAACC,GAAD,UACE,cAACC,GAAD,UACE,cAACC,GAAD,UACE,cAAC,IAAD,c,+EC1BJnE,GAAU,IAAIC,IACdG,GAASJ,GAAQG,IAAI,MAErBE,GAAY,CAChBC,MAAO,qCAIPD,GAAUC,MADG,OAAXF,GACgB,oCAElB,iCAA4CJ,GAAQG,IAAI,MAAxD,QAGF,IAAMI,GAAO,CACXC,OAAQH,GAAUC,MAClB+D,KAAM,cACNC,QAAS,MACT7D,SAAU,mBACVC,KAAMC,UAAUX,GAAQG,IAAI,SAC5BoE,SAAU,SA+DGC,GA5DO,SAACtH,GAAD,OACpB,eAACuH,GAAA,EAAD,2BAAUvH,GAAV,cACE,cAACwH,GAAA,EAAD,UACE,eAAC5G,EAAA,EAAD,CACEC,GAAI,CACF+D,WAAY,SACZvC,QAAS,OACTqC,cAAe,UAJnB,UAOE,cAACI,EAAA,EAAD,CACE5E,IAAKmD,GAAKC,OACVzC,GAAI,CACF/G,OAAQ,IACRC,MAAO,OAGX,cAACiL,EAAA,EAAD,CACE9D,MAAM,cACNuG,cAAY,EACZnG,QAAQ,KAHV,SAKG+B,GAAKG,OAER,cAACwB,EAAA,EAAD,CACE9D,MAAM,gBACNI,QAAQ,QAFV,mBAIM+B,GAAK8D,KAJX,YAImB9D,GAAK+D,WAExB,cAACpC,EAAA,EAAD,CACE9D,MAAM,gBACNI,QAAQ,QAFV,mBAIMoG,OAASC,OAAO,WAJtB,YAIoCtE,GAAKgE,iBAI7C,cAACjC,EAAA,EAAD,IACA,cAACwC,GAAA,EAAD,UACE,cAACrF,EAAA,EAAD,CACErB,MAAM,UACN2G,WAAS,EACTvG,QAAQ,OAHV,qDAQF,cAACsG,GAAA,EAAD,UACE,cAACrF,EAAA,EAAD,CACErB,MAAM,UACN2G,WAAS,EACTvG,QAAQ,OAHV,sE,0DChFAwB,GAAU,IAAIC,IAEd+E,GAAqB,CACzBC,QAASjF,GAAQG,IAAI,gBAkER,O,uCA9Db+E,QAAU,SAAC3E,GAGT,OAFA4E,QAAQC,IAAI,cAELC,KAAMC,KAAN,gBAA4B/E,I,KAGrCgF,UAAY,SAAChF,GACX4E,QAAQC,IAAI,iBAEZD,QAAQC,IAAI7E,GAOZ,IAAMiF,EAAW,CACfC,SAAUlF,EAAK6B,GACfsD,SAAUnF,EAAKmF,UAOjB,OAJAP,QAAQC,IAAII,GACZxF,GAAQ2F,IAAI,SAAUH,EAASC,UAGxBJ,KAAMC,KAAN,QAAoBE,I,KAQ7BI,WAAa,SAACrF,GACZ4E,QAAQC,IAAI,iBAEZD,QAAQC,IAAI7E,GAOZ,IAAMiF,EAAW,CACfC,SAAUlF,EAAK6B,GACfsD,SAAUnF,EAAKmF,UAOjB,OAJAP,QAAQC,IAAII,GACZxF,GAAQ2F,IAAI,SAAUH,EAASC,UAGxBJ,KAAMC,KAAN,UAAsBE,EAAUR,K,KAGzCa,WAAa,SAACtF,GAGZ,OAFA4E,QAAQC,IAAI,cAELC,KAAMC,KAAN,oBAAgC/E,KCtDrCP,GAAU,IAAIC,IAwPL6F,GAvOc,SAAC5I,GAAW,IAAD,EACVM,mBAAS,CACnC4E,GAAIzB,UAAUX,GAAQG,IAAI,OAC1BO,KAAMC,UAAUX,GAAQG,IAAI,SAC5B4F,QAAU/F,GAAQG,IAAI,WACtB6F,QAASrF,UAAUX,GAAQG,IAAI,YAC/B8F,cAAetF,UAAUX,GAAQG,IAAI,kBACrC+F,MAAOlG,GAAQG,IAAI,SACnBgG,aAAenG,GAAQG,IAAI,SAC3BiG,SAAUpG,GAAQG,IAAI,cATc,mBAC/BkG,EAD+B,KACvBC,EADuB,KAYhCC,EAAe,SAACC,GACpBF,EAAU,2BACLD,GADI,kBAENG,EAAMC,OAAO/F,KAAO8F,EAAMC,OAAOC,UAwCtC,OACE,8CACEC,aAAa,MACbC,iBACEC,OAAaC,MAAM,CACjB1E,GAAIyE,OAAaE,IAAI,KAAKC,SAAS,kBACnCtG,KAAMmG,OAAaE,IAAI,KAAKC,SAAS,oBACrCjB,QAASc,OAAaE,IAAI,KAAKC,SAAS,sBACxChB,QAASa,OAAaE,IAAI,KAAKC,SAAS,uBACxCf,cAAeY,OAAaE,IAAI,KAAKC,SAAS,8BAC9Cd,MAAOW,OAAaE,IAAI,KAAKC,SAAS,qBACtCb,aAAcU,OAAaI,MAAM,yBAAyBF,IAAI,KAAKC,SAAS,qBAC5EZ,SAAUS,OAAWlL,SAAQ,kBAAM,IAAIuL,WAGvChK,GAdN,aAgBE,eAACuH,GAAA,EAAD,WACE,cAAC0C,GAAA,EAAD,CACEC,UAAU,gCACVtI,MAAM,YAER,cAACwD,EAAA,EAAD,IACA,cAACoC,GAAA,EAAD,UACE,eAAC2C,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,cAACF,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,qBACNjH,KAAK,KACLkH,SAAUrB,EACVS,UAAQ,EACRN,MAAOL,EAAOjE,GACd5D,QAAQ,WACRqJ,WAAY,CACVC,UAAU,OAIhB,cAACT,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,eACNjH,KAAK,OACLkH,SAAUrB,EACVS,UAAQ,EACRN,MAAOL,EAAO3F,KACdlC,QAAQ,eAGZ,cAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,4BACNjH,KAAK,UACLkH,SAAUrB,EACVS,UAAQ,EACRN,MAAOL,EAAON,QACdvH,QAAQ,eAGZ,cAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,4BACNjH,KAAK,UACLkH,SAAUrB,EACVS,UAAQ,EACRN,MAAOL,EAAOL,QACdxH,QAAQ,eAGZ,cAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,4BACNjH,KAAK,gBACLkH,SAAUrB,EACVS,UAAQ,EACRN,MAAOL,EAAOJ,cACdzH,QAAQ,eAGZ,cAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,4BACNjH,KAAK,QACLkH,SAAUrB,EACVS,UAAQ,EACRN,MAAOL,EAAOH,MACd1H,QAAQ,eAGZ,cAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,kCACNjH,KAAK,eACLkH,SAAUrB,EACVS,UAAQ,EACRN,MAAOL,EAAOF,aACd3H,QAAQ,eAGZ,cAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJC,GAAI,GAHN,SAKE,cAACC,GAAA,EAAD,CACEK,gBAAiB,CAAEC,QAAQ,GAC3BjD,WAAS,EACT4C,MAAM,eACNjH,KAAK,WACLkH,SAAUrB,EACVS,UAAQ,EACRiB,KAAK,OACLvB,MAAOL,EAAOD,SACd5H,QAAQ,oBAKhB,cAAC8D,EAAA,EAAD,IACA,cAACxE,EAAA,EAAD,CACEC,GAAI,CACFwB,QAAS,OACTK,eAAgB,WAChBmC,EAAG,GAJP,SAOE,cAACtC,EAAA,EAAD,CACErB,MAAM,UACNI,QAAQ,YACRC,QA1Ma,SAAC+H,GACtBA,EAAM0B,iBACN,IAAM3H,EAAO,CACX6B,GAAIiE,EAAOjE,GACX1B,KAAM2F,EAAO3F,KACbqF,QAASM,EAAON,QAChBC,QAASK,EAAOL,QAChBmC,eAAgB9B,EAAOJ,cACvBC,MAAOG,EAAOH,MACde,MAAOZ,EAAOF,aACdiC,SAAU/B,EAAOD,UAEnBjB,QAAQC,IAAI7E,GACZ8H,GAAWxC,WAAWtF,GACnB+H,MAAK,SAAAC,GACJpD,QAAQC,IAAI,uBACZD,QAAQC,IAAImD,EAAIC,MAChBxI,GAAQ2F,IAAI,cAAe8C,mBAAmBF,EAAIC,KAAKE,cACvD1I,GAAQ2F,IAAI,KAAM8C,mBAAmBF,EAAIC,KAAKpG,KAC9CpC,GAAQ2F,IAAI,OAAQ8C,mBAAmBF,EAAIC,KAAK9H,OAChDV,GAAQ2F,IAAI,QAAS8C,mBAAmBF,EAAIC,KAAKtC,QACjDlG,GAAQ2F,IAAI,UAAW8C,mBAAmBF,EAAIC,KAAKzC,UACnD/F,GAAQ2F,IAAI,UAAW8C,mBAAmBF,EAAIC,KAAKxC,UACnDhG,GAAQ2F,IAAI,gBAAiB8C,mBAAmBF,EAAIC,KAAKL,iBACzDnI,GAAQ2F,IAAI,WAAY8C,mBAAmBF,EAAIC,KAAKJ,WACpDpI,GAAQ2F,IAAI,QAAU4C,EAAIC,KAAKvB,MAAQ,SAEvC5E,MAAM,qFACNhM,OAAOC,SAASqS,QAAQ,kBAEzBC,OAAM,SAAAC,GACL1D,QAAQC,IAAI,mCACZD,QAAQC,IAAIyD,OAuKV,+CC1MKC,GAvCA,kBACb,qCACE,cAACC,GAAA,EAAD,UACE,qEAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjB6R,UAAW,OACXxJ,GAAI,GAJR,SAOE,cAACyJ,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,eAAC7B,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,cAACF,GAAA,EAAD,CACE5E,MAAI,EACJ0G,GAAI,EACJ3B,GAAI,EACJC,GAAI,GAJN,SAME,cAAC,GAAD,MAEF,cAACJ,GAAA,EAAD,CACE5E,MAAI,EACJ0G,GAAI,EACJ3B,GAAI,EACJC,GAAI,GAJN,SAME,cAAC,GAAD,iB,0FCUG,O,uCA7Cb2B,UAAY,SAACC,EAAMC,EAAQC,GAMzB,OALApE,QAAQC,IAAI,aACZD,QAAQC,IAAI,UAAWiE,GACvBlE,QAAQC,IAAI,YAAakE,GACzBnE,QAAQC,IAAI,aAAcmE,GAEnBlE,KAAMlF,IAAN,2BACekJ,EADf,mBAC8BC,EAD9B,oBACgDC,K,KAIzDC,YAAc,SAACC,GAEb,OADAtE,QAAQC,IAAI,gBACLC,KAAMC,KAAK,aAAcmE,I,KAQlCC,YAAc,SAACC,GAEb,OADAxE,QAAQC,IAAR,sBAA2BuE,IACpBtE,KAAMlF,IAAN,qBAAwBwJ,K,KAOjCC,YAAc,SAACD,EAAKF,GAElB,OADAtE,QAAQC,IAAIuE,GACLtE,KAAMwE,IAAN,qBAAwBF,GAAOF,I,KAOxCK,YAAc,SAACH,GAEb,OADAxE,QAAQC,IAAIuE,GACLtE,KAAM0E,OAAN,qBAA2BJ,MC/BhCK,GACI,CAAEtD,MAAO,EAAGhG,KAAM,4BADtBsJ,GAEO,CAAEtD,MAAO,EAAGhG,KAAM,kCAFzBsJ,GAGK,CAAEtD,MAAO,EAAGhG,KAAM,sBAHvBsJ,GAIK,CAAEtD,MAAO,EAAGhG,KAAM,4BAGvBjK,GAAYC,aAAW,SAAC6E,GAAD,MAAY,CACvC0O,KAAM,CACJ,YAAa,CACXC,UAAW3O,EAAMgM,QAAQ,IAE3B,QAAS,CACP1Q,OAAQ0E,EAAMgM,QAAQ,SAKtB4C,GAAkBC,aAAW,CACjCC,GAAI,CACFzK,eAAgB,WAFIwK,CAIrBE,MAkNYC,GAhNY,WACzB,IAAMC,EAAUC,cACRC,EAAU3L,cAAV2L,MACJrB,EAAO,EAHoB,EAIL7L,mBAAS,GAJJ,mBAIxBmN,EAJwB,KAIfC,EAJe,OASLpN,mBAAS,IATJ,mBASxBqN,EATwB,KAShBC,EATgB,OAUHtN,mBAAS,IAVN,mBAUxBuN,EAVwB,KAUhBC,EAVgB,KAWzBC,EAAUxU,KAGhBiL,qBAAU,WACM,OAAVgJ,IAAgBrB,EAAOqB,EAAMQ,MAEjCC,GAAa/B,UAAUC,EAAM,GAAI,IAC9Bf,MAAK,SAACC,GAEL,OADApD,QAAQC,IAAI,cAAemD,GACpBA,KAERD,MAAK,SAACE,GACe,MAAhBA,EAAK4C,SACPjG,QAAQC,IAAI,UAAWoD,GACvBrD,QAAQC,IAAI,eAAgBoD,EAAKA,MACjCoC,EAAOpC,EAAKA,KAAK6C,WAAWC,gBAC5BjC,EAAOb,EAAKA,KAAK6C,WAAWC,eAC5BR,EAAQtC,EAAKA,KAAK6C,YAClBL,EAAUxC,EAAKA,KAAK+C,MACpBpG,QAAQC,IAAIoD,EAAKA,KAAK+C,MACtBpG,QAAQC,IAAI,UAAWiE,SAG5B,CAACqB,IAcJ,IAcMc,EAAmB,SAAC9E,GACxBvB,QAAQC,IAAI,oBACZ,IAAI1E,EAAO,cAEX,OAAQgG,GACN,KAAKsD,GAAgBtD,MACnBhG,EAAOsJ,GAAgBtJ,KACvB,MACF,KAAKsJ,GAAmBtD,MACtBhG,EAAOsJ,GAAmBtJ,KAC1B,MACF,KAAKsJ,GAAiBtD,MACpBhG,EAAOsJ,GAAiBtJ,KACxB,MACF,KAAKsJ,GAAiBtD,MACpBhG,EAAOsJ,GAAiBtJ,KACxB,MACF,QACEA,EAAO,cAGX,OAAOA,GA6CT,OACE,eAAC5C,EAAA,EAAD,WACE,oBAAIqE,UAAU,cAAd,6CACA,uBACA,cAACrE,EAAA,EAAD,CAAKqE,UAAU,MAAf,SACE,eAAC1C,EAAA,EAAD,CACEjB,QAAQ,YACRJ,MAAM,UACN+D,UAAU,kBACVsJ,UAAW,cAAC,KAAD,IACXhN,QAAS,SAACiN,GAAD,OAAmBA,EAjB5BxD,sBAENsC,EAAQ,4BAA6B,CACnC7B,SAAS,EACT+B,MAAO,CAAEf,IAHE,cAWT,UAOG,IAPH,2BAWF,cAAC7L,EAAA,EAAD,CAAKqE,UAAU,QAAQwJ,MAAO,CAAE7U,QAAS,UAAzC,SACE,eAAC8U,GAAA,EAAD,CAAOzJ,UAAU,qCAAjB,UACE,qCACE,qBAAKlL,MAAM,MACX,qBAAKA,MAAM,MACX,qBAAKA,MAAM,QACX,qBAAKA,MAAM,MACX,qBAAKA,MAAM,MACX,qBAAKA,MAAM,MACX,qBAAKA,MAAM,SAEb,cAAC4U,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,uCACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,0BACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,iCACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,iCACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,gCACA,cAACD,GAAA,EAAD,CAAWC,MAAM,SAAjB,2CAGJ,cAACC,GAAA,EAAD,UACGlB,EAAOvI,KAAI,SAACiH,GAAD,OACV,eAACqC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAWC,MAAM,SAAjB,cAA4BvC,EAAME,IAAlC,OACA,eAACoC,GAAA,EAAD,CAAWC,MAAM,SAAjB,UACG,IACAR,EAAiB/B,EAAMyC,UAAW,OAErC,cAACH,GAAA,EAAD,UACE,mBAAGpN,KAAK,IAAI+H,MAAO+C,EAAME,IAAKlL,QAAS,SAACiN,GAAD,OAjFrC,SAAClF,GAEjBA,EAAM0B,iBACN/C,QAAQC,IAAI,sBAAuBoB,EAAMC,OAAO0F,aAAa,UAC7D,IAAMxC,EAAMnD,EAAMC,OAAO0F,aAAa,SACtChB,GAAazB,YAAYlD,EAAMC,OAAO0F,aAAa,UAChD7D,MAAK,SAACC,GACLpD,QAAQC,IAAImD,GACZpD,QAAQC,IAAR,sBAA2BmD,EAAIC,KAAKmB,MACpCa,EAAQ,mBAAD,OAAoBb,GAAO,CAChChB,SAAS,EACT+B,MAAO,CACLf,IAAKpB,EAAIC,KAAKmB,IACdF,MAAOlB,EAAIC,WAIhBI,OAAM,SAACC,GACN1D,QAAQC,IAAIyD,MA+D4CuD,CAAUV,IAAxD,SACGjC,EAAM3K,UAIX,eAACiN,GAAA,EAAD,CAAWC,MAAM,SAAjB,cAA4BvC,EAAMrH,GAAlC,OACA,eAAC2J,GAAA,EAAD,CAAWC,MAAM,SAAjB,UACG,KAhGUtF,EAiGQ+C,EAAM4C,WAhGrB,IAAIC,KAAKC,eAAe,SAAS1H,OACjDqC,KAAKsF,MAAM9F,KA+FuC,OAExC,eAACqF,GAAA,EAAD,CAAWC,MAAM,SAAjB,cAA4BvC,EAAMgD,QAAlC,OACA,eAACV,GAAA,EAAD,CAAWC,MAAM,SAAjB,cAA4BvC,EAAMiD,MAAlC,SAlBajD,EAAME,KAlFP,IAACjD,YA0GvB,cAAC5I,EAAA,EAAD,CAAKqE,UAAW8I,EAAQhB,KAAxB,SACE,eAAC/H,EAAA,EAAD,oBACSyI,EACP,cAACR,GAAD,CACEwC,MAAO9B,EAAO+B,kBACdC,KAAMlC,EACN/C,SAtJW,SAACpB,EAAOE,GAE3B2C,EAAO3C,EACPvB,QAAQC,IAAI,WAAYsB,GACxBvB,QAAQC,IAAIyF,GACZL,EAAQ,cAAD,OAAe9D,GAAS,CAC7BiC,SAAS,EACT+B,MAAO,CACLQ,KAAM7B,MA+IF3C,MAAOiE,EACPjK,KAAK,qBCxNFoM,GAnBG,kBAChB,qCACE,cAAC/D,GAAA,EAAD,UACE,yDAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjB6R,UAAW,OACXxJ,GAAI,GAJR,SAOE,cAACyJ,GAAA,EAAD,CAAWC,UAAU,EAArB,SACE,cAAC,GAAD,YC0DO6D,GAzEM,WAGnB,OAFA5H,QAAQC,IAAI,UAGV,qCACE,eAACtH,EAAA,EAAD,WACE,cAACoE,EAAA,EAAD,CACE1D,QAAQ,KACRJ,MAAM,UACNL,GAAI,CACF8D,EAAG,EACHmL,GAAI,EACJC,GAAI,EACJ1N,QAAS,QAPb,kBAaA,cAAC2C,EAAA,EAAD,CACE1D,QAAQ,KACRJ,MAAM,UACNL,GAAI,CACFiP,GAAI,EACJC,GAAI,EACJ1N,QAAS,QANb,4DAaF,cAACzB,EAAA,EAAD,UACE,eAACoE,EAAA,EAAD,CACE1D,QAAQ,KACRJ,MAAM,UACN8O,WAAW,KACXnP,GAAI,CACF8D,EAAG,EACHmL,GAAI,EACJC,GAAI,EACJ1N,QAAS,QARb,mKAYE,uBAZF,iNAgBF,cAACzB,EAAA,EAAD,UACE,cAAC2B,EAAA,EAAD,CACE1B,GAAI,CACFkE,OAAQ,UACRhL,MAAO,IACPD,OAAQ,GACR6K,EAAG,EACHmL,GAAI,GACJC,GAAI,GACJ1N,QAAS,OACTqC,cAAe,UAEjBxD,MAAM,UACNsB,UAAU,IACVf,KAAK,YACLH,QAAQ,YAdV,4CChDF2O,GAAS,CACbC,cAAe,CACbC,gBACE,oHACFC,eAAgB,UA6BLC,GAzBF,kBACX,qCACE,cAACxE,GAAA,EAAD,UACE,6CAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjB6R,UAAW,OACXxJ,GAAI,EAEJ6N,gBAAiB,IAAIG,IAEnB,iHAGJ7B,MAAOwB,GAAOC,cAXhB,SAaE,cAACnE,GAAA,EAAD,CAAWC,UAAU,EAArB,SACE,cAACuE,GAAD,Y,8BCvBOC,GANE,SAACxQ,GAAD,OACf,cAACyQ,GAAA,EAAD,2BAAazQ,GAAb,aACE,sBAAM0Q,EAAE,6mBCIGC,GANA,SAAC3Q,GAAD,OACb,cAACyQ,GAAA,EAAD,2BAAazQ,GAAb,aACE,sBAAM0Q,EAAE,21CCcN5N,GAAU,IAAIC,IAEd6N,GAAgB,CACpB1L,GAAI,GACJsD,SAAU,IAGNqI,GAAa,CACjBC,QAAQ,EACRC,QAAS,+IA2MIC,GAxMD,WAwCZ,OACE,qCACE,cAACnF,GAAA,EAAD,UACE,2DAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjBoI,QAAS,OACTqC,cAAe,SACf5K,OAAQ,OACR4I,eAAgB,UANpB,SASE,cAACqJ,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,KAAD,CACE4E,cAAe,CAAEA,kBACjBK,iBAAkBtH,OAAaC,MAAM,CACnC1E,GAAIyE,OAAaE,IAAI,KAAKqH,SAAS,SAASpH,SAAS,kEACrDtB,SAAUmB,OAAauH,SAAS,SAASrH,IAAI,KAAKC,SAAS,0EAE7DqH,SAAU,SAAChI,GA1DrB,IAAmB9F,EA4DP4E,QAAQC,IAAIiB,GA5DL9F,EA6DG8F,EA5DpBgC,GAAW9C,UAAUhF,GAClB+H,MAAK,SAAAC,GACJpD,QAAQC,IAAI,OACZD,QAAQC,IAAImD,EAAI+F,YAChBnJ,QAAQC,IAAImD,EAAIC,KAAK+F,aACrBvO,GAAQ2F,IAAI,cAAe4C,EAAIC,KAAK+F,aACpCvO,GAAQ2F,IAAI,YAAa4C,EAAIC,KAAKgG,WAClCrJ,QAAQC,IAAImD,EAAIC,MAChBrD,QAAQC,IAAIpF,GAAQG,IAAI,gBACxBgF,QAAQC,IAAImD,EAAIC,KAAK9H,MACrBV,GAAQ2F,IAAI,cAAe8C,mBAAmBF,EAAIC,KAAKE,cACvD1I,GAAQ2F,IAAI,KAAM8C,mBAAmBF,EAAIC,KAAKpG,KAC9CpC,GAAQ2F,IAAI,OAAQ8C,mBAAmBF,EAAIC,KAAK9H,OAChDV,GAAQ2F,IAAI,QAAS8C,mBAAmBF,EAAIC,KAAKtC,QACjDlG,GAAQ2F,IAAI,UAAW8C,mBAAmBF,EAAIC,KAAKzC,UACnD/F,GAAQ2F,IAAI,UAAW8C,mBAAmBF,EAAIC,KAAKxC,UACnDhG,GAAQ2F,IAAI,gBAAiB8C,mBAAmBF,EAAIC,KAAKL,iBACzDnI,GAAQ2F,IAAI,WAAY8C,mBAAmBF,EAAIC,KAAKJ,WACpDpI,GAAQ2F,IAAI,QAAU4C,EAAIC,KAAKvB,MAAQ,SACvC9B,QAAQC,IAAKpF,GAAQG,IAAI,UAEzBkC,MAAM,kEACNhM,OAAOC,SAASqS,QAAQ,QAIzBC,OAAM,SAAAC,GACL1D,QAAQC,IAAI,eAAgByD,GAC5BxG,MAAM,8EACN0L,GAAWC,QAAS,EACpBhO,GAAQyO,OAAO,UACfpY,OAAOC,SAASoY,OAAO,cAoBrB,SAYG,gBACCC,EADD,EACCA,OACAC,EAFD,EAECA,WACArI,EAHD,EAGCA,aACAsI,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACA1I,EAPD,EAOCA,OAPD,OASC,uBAAMgI,SAAUQ,EAAhB,UACE,cAAC/Q,EAAA,EAAD,CAAKC,GAAI,CAAEiR,GAAI,GAAf,SACE,cAAC9M,EAAA,EAAD,CACE9D,MAAM,cACNI,QAAQ,KAFV,kCAOF,eAAC6I,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,UAIE,cAACF,GAAA,EAAD,CACE5E,MAAI,EACJgF,GAAI,GACJD,GAAI,EAHN,SAKE,cAAC/H,EAAA,EAAD,CACErB,MAAM,UACN2G,WAAS,EACT0G,UAAW,cAAC,GAAD,IACXhN,QAASoQ,EACT9O,KAAK,QACLvB,QAAQ,YANV,oFAWF,cAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJgF,GAAI,GACJD,GAAI,EAHN,SAKE,cAAC/H,EAAA,EAAD,CACEsF,WAAS,EACT0G,UAAW,cAAC,GAAD,IACXhN,QAASoQ,EACT9O,KAAK,QACLvB,QAAQ,YALV,2EAWJ,cAACV,EAAA,EAAD,CACEC,GAAI,CACFkR,GAAI,EACJvM,GAAI,GAHR,SAME,cAACR,EAAA,EAAD,CACE8J,MAAM,SACN5N,MAAM,gBACNI,QAAQ,QAHV,qFAQF,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQ3M,IAAMuM,EAAOvM,IACpC2C,WAAS,EACToK,WAAYJ,EAAQ3M,IAAMuM,EAAOvM,GACjCuF,MAAM,qBACN9Q,OAAO,SACP6J,KAAK,KACL0O,OAAQR,EACRhH,SAAUrB,EACV0B,KAAK,OACLvB,MAAOL,EAAOjE,GACd5D,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQrJ,UAAYiJ,EAAOjJ,UAC1CX,WAAS,EACToK,WAAYJ,EAAQrJ,UAAYiJ,EAAOjJ,SACvCiC,MAAM,2BACN9Q,OAAO,SACP6J,KAAK,WACL0O,OAAQR,EACRhH,SAAUrB,EACV0B,KAAK,WACLvB,MAAOL,EAAOX,SACdlH,QAAQ,aAEV,cAACV,EAAA,EAAD,CAAKC,GAAI,CAAEyB,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACErB,MAAM,UACNmD,SAAUuN,EACV/J,WAAS,EACThF,KAAK,QACLkI,KAAK,SACLzJ,QAAQ,YANV,kCAWF,cAAC0D,EAAA,EAAD,CACE8L,OAAQD,GAAWC,OACnB5P,MAAM,MACNsI,MAAOqH,GAAWE,UACpB,eAAC/L,EAAA,EAAD,CACE9D,MAAM,gBACNI,QAAQ,QAFV,sEAKG,IACD,cAAC6Q,GAAA,EAAD,CACE3P,UAAWC,IACX9B,GAAG,YACHW,QAAQ,KAHV,wDCnNZwB,GAAU,IAAIC,IAsBLqP,GApBA,WACXtP,GAAQyO,OAAO,eACfzO,GAAQyO,OAAO,UACfzO,GAAQyO,OAAO,eACfzO,GAAQyO,OAAO,MACfzO,GAAQyO,OAAO,QACfzO,GAAQyO,OAAO,SACfzO,GAAQyO,OAAO,WACfzO,GAAQyO,OAAO,WACfzO,GAAQyO,OAAO,iBACfzO,GAAQyO,OAAO,YACfzO,GAAQyO,OAAO,SACfzO,GAAQuP,uBAGRlN,MAAM,wEACNhM,OAAOC,SAASqS,QAAQ,MC2Cb6G,GAvDE,WAAO,IAAD,EACRhS,mBAAS,IAAfiS,EADc,oBAMrB,OAFAtK,QAAQC,IAAIqK,GAGV,qCACE,cAAC1G,GAAA,EAAD,UACE,yDAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjBoI,QAAS,OACTqC,cAAe,SACf5K,OAAQ,OACR4I,eAAgB,UANpB,SASE,eAACqJ,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAChH,EAAA,EAAD,CACE8J,MAAM,SACN5N,MAAM,cACNI,QAAQ,KAHV,+DAOA,cAAC0D,EAAA,EAAD,CACE8J,MAAM,SACN5N,MAAM,cACNI,QAAQ,YAHV,sHASA,cAACV,EAAA,EAAD,CAAKC,GAAI,CAAE2R,UAAW,UAAtB,SACE,qBACEvS,IAAI,oBACJC,IAAI,gDACJuO,MAAO,CACLzB,UAAW,GACX3K,QAAS,eACT2J,SAAU,OACVjS,MAAO,kB,8BCOR0Y,GAjDY,SAACzS,GAAD,OACzB,eAACY,EAAA,EAAD,2BAASZ,GAAT,cACE,eAACY,EAAA,EAAD,CACEC,GAAI,CACFwB,QAAS,OACTK,eAAgB,YAHpB,UAME,cAACH,EAAA,EAAD,qBAGA,cAACA,EAAA,EAAD,CAAQ1B,GAAI,CAAE6R,GAAI,GAAlB,oBAGA,cAACnQ,EAAA,EAAD,CACErB,MAAM,UACNI,QAAQ,YAFV,4BAOF,cAACV,EAAA,EAAD,CAAKC,GAAI,CAAEiP,GAAI,GAAf,SACE,cAACvI,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UACE,cAAC5G,EAAA,EAAD,CAAKC,GAAI,CAAEmL,SAAU,KAArB,SACE,cAACxB,GAAA,EAAD,CACE3C,WAAS,EACT8K,WAAY,CACVC,eACE,cAACC,GAAA,EAAD,CAAgBC,SAAS,QAAzB,SACE,cAACrC,GAAA,EAAD,CACElR,SAAS,QACT2B,MAAM,SAFR,SAIE,cAAC,KAAD,SAKR6R,YAAY,iBACZzR,QAAQ,0B,0CCsDP0R,GA5FK,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAY5S,EAAf,kCAClB,eAACkH,GAAA,EAAD,yBACE1G,GAAI,CACFwB,QAAS,OACTqC,cAAe,SACf5K,OAAQ,SAENuG,GANN,cAQE,eAACmH,GAAA,EAAD,WACE,cAAC5G,EAAA,EAAD,CACEC,GAAI,CACFwB,QAAS,OACTK,eAAgB,SAChBqP,GAAI,GAJR,SAOE,cAACjN,EAAA,EAAD,CACE7E,IAAI,UACJC,IAAK+S,EAAQC,MACb5R,QAAQ,aAGZ,cAAC0D,EAAA,EAAD,CACE8J,MAAM,SACN5N,MAAM,cACNuG,cAAY,EACZnG,QAAQ,KAJV,SAMG2R,EAAQrR,QAEX,cAACoD,EAAA,EAAD,CACE8J,MAAM,SACN5N,MAAM,cACNI,QAAQ,QAHV,SAKG2R,EAAQE,iBAGb,cAACvS,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,KACrB,cAACsE,EAAA,EAAD,IACA,cAACxE,EAAA,EAAD,CAAKC,GAAI,CAAEgE,EAAG,GAAd,SACE,eAACsF,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACTxJ,GAAI,CAAE6B,eAAgB,iBAHxB,UAKE,eAACyH,GAAA,EAAD,CACE5E,MAAI,EACJ1E,GAAI,CACF+D,WAAY,SACZvC,QAAS,QAJb,UAOE,cAAC,KAAD,CAAgBnB,MAAM,WACtB,cAAC8D,EAAA,EAAD,CACE9D,MAAM,gBACNmB,QAAQ,SACRxB,GAAI,CAAEuS,GAAI,GACV9R,QAAQ,QAJV,gCASF,eAAC6I,GAAA,EAAD,CACE5E,MAAI,EACJ1E,GAAI,CACF+D,WAAY,SACZvC,QAAS,QAJb,UAOE,cAAC,KAAD,CAAYnB,MAAM,WAClB,eAAC8D,EAAA,EAAD,CACE9D,MAAM,gBACNmB,QAAQ,SACRxB,GAAI,CAAEuS,GAAI,GACV9R,QAAQ,QAJV,UAMG2R,EAAQI,eACR,IAPH,4B,UCjFK,IACb,CACEnO,GAAIoO,eACJC,UAAW,aACXJ,YAAa,uGACbD,MAAO,wCACPtR,MAAO,UACPyR,eAAgB,OAElB,CACEnO,GAAIoO,eACJC,UAAW,aACXJ,YAAa,mGACbD,MAAO,wCACPtR,MAAO,qBACPyR,eAAgB,OAElB,CACEnO,GAAIoO,eACJC,UAAW,aACXJ,YAAa,uGACbD,MAAO,wCACPtR,MAAO,QACPyR,eAAgB,OAElB,CACEnO,GAAIoO,eACJC,UAAW,aACXJ,YAAa,kFACbD,MAAO,wCACPtR,MAAO,OACPyR,eAAgB,OAElB,CACEnO,GAAIoO,eACJC,UAAW,aACXJ,YAAa,+EACbD,MAAO,wCACPtR,MAAO,SACPyR,eAAgB,OAElB,CACEnO,GAAIoO,eACJC,UAAW,aACXJ,YAAa,qGACbD,MAAO,wCACPtR,MAAO,cACPyR,eAAgB,QCULG,GAlDK,kBAClB,qCACE,cAAC3H,GAAA,EAAD,UACE,8DAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjB6R,UAAW,OACXxJ,GAAI,GAJR,SAOE,eAACyJ,GAAA,EAAD,CAAWC,UAAU,EAArB,UACE,cAAC,GAAD,IACA,cAACpL,EAAA,EAAD,CAAKC,GAAI,CAAE2E,GAAI,GAAf,SACE,cAAC2E,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EAFX,SAIGoJ,GAASnO,KAAI,SAAC2N,GAAD,OACZ,cAAC9I,GAAA,EAAD,CACE5E,MAAI,EAEJ0G,GAAI,EACJ3B,GAAI,EACJC,GAAI,GALN,SAOE,cAAC,GAAD,CAAa0I,QAASA,KALjBA,EAAQ/N,WAUrB,cAACtE,EAAA,EAAD,CACEC,GAAI,CACFwB,QAAS,OACTK,eAAgB,SAChB8C,GAAI,GAJR,SAOE,cAAC,KAAD,CACEtE,MAAM,UACNuO,MAAO,EACP5M,KAAK,qB,oBCxBF,O,uCAXbmF,QAAU,SAAC3E,GAET,OADA4E,QAAQC,IAAI,cACLC,KAAMC,KAAK,QAAS/E,KCCzBuN,GAAgB,CACpB1L,GAAI,GACJsD,SAAU,GACVhF,KAAM,GACNqF,QAAS,GACTC,QAAS,GACTmC,eAAgB,GAChBjC,MAAO,GACPe,MAAO,GACPmB,SAAU,GACVwI,QAAQ,GA+PKC,GA5PE,WAEf,IAAMC,EAAWrG,cAajB,OACE,qCACE,cAAC1B,GAAA,EAAD,UACE,8DAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjBoI,QAAS,OACTqC,cAAe,SACf5K,OAAQ,OACR4I,eAAgB,UANpB,SASE,cAACqJ,GAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAAC,KAAD,CACE4E,cAAeA,GACfK,iBACEtH,OAAaC,MAAM,CACjB1E,GAAIyE,OAAaE,IAAI,KAAKC,SAAS,kEACnCtB,SAAUmB,OAAaE,IAAI,KAAKC,SAAS,wEACzCtG,KAAMmG,OAAaE,IAAI,KAAKC,SAAS,4DACrCjB,QAASc,OAAaE,IAAI,KAAKC,SAAS,wEACxChB,QAASa,OAAaE,IAAI,KAAKC,SAAS,4DACxCmB,eAAgBtB,OAAaE,IAAI,KAAKC,SAAS,yEAC/Cd,MAAOW,OAAaE,IAAI,KAAKC,SAAS,wEACtCC,MAAOJ,OAAaI,MAAM,wEAAiBF,IAAI,KAAKC,SAAS,kEAC7DoB,SAAUvB,OAAWlL,SAAQ,kBAAM,IAAIuL,QACvC0J,OAAQ/J,OAAckK,MAAM,EAAC,GAAO,0CAGxC1C,SAAU,SAAChI,GA1CrB,IAAkB9F,EA4CN4E,QAAQC,IAAIiB,GA5CN9F,EA6CG8F,EA5CnBgC,GAAWnD,QAAQ3E,GAChB+H,MAAK,SAAAC,GACJpD,QAAQC,IAAImD,EAAI+F,YAEhBwC,EAAS,YAAa,CAAEnI,SAAS,OAElCC,OAAM,SAAAC,GACL1D,QAAQC,IAAI,0BAAiByD,OAkB3B,SAsBG,gBACC8F,EADD,EACCA,OACAC,EAFD,EAECA,WACArI,EAHD,EAGCA,aACAsI,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACA1I,EAPD,EAOCA,OAPD,OASC,uBAAMgI,SAAUQ,EAAhB,UACE,cAAC/Q,EAAA,EAAD,CAAKC,GAAI,CAAEiR,GAAI,EAAGhC,GAAI,GAAtB,SACE,cAAC9K,EAAA,EAAD,CACE9D,MAAM,cACNI,QAAQ,KAFV,yCAOF,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQ3M,IAAMuM,EAAOvM,IACpC2C,WAAS,EACToK,WAAYJ,EAAQ3M,IAAMuM,EAAOvM,GACjCuF,MAAM,qBACN9Q,OAAO,SACP6J,KAAK,KACL0O,OAAQR,EACRhH,SAAUrB,EACVG,MAAOL,EAAOjE,GACd5D,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQrJ,UAAYiJ,EAAOjJ,UAC1CX,WAAS,EACToK,WAAYJ,EAAQrJ,UAAYiJ,EAAOjJ,SACvCiC,MAAM,2BACN9Q,OAAO,SACP6J,KAAK,WACL0O,OAAQR,EACRhH,SAAUrB,EACV0B,KAAK,WACLvB,MAAOL,EAAOX,SACdlH,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQrO,MAAQiO,EAAOjO,MACtCqE,WAAS,EACToK,WAAYJ,EAAQrO,MAAQiO,EAAOjO,KACnCiH,MAAM,eACN9Q,OAAO,SACP6J,KAAK,OACL0O,OAAQR,EACRhH,SAAUrB,EACVG,MAAOL,EAAO3F,KACdlC,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQhJ,SAAW4I,EAAO5I,SACzChB,WAAS,EACToK,WAAYJ,EAAQhJ,SAAW4I,EAAO5I,QACtC4B,MAAM,2BACN9Q,OAAO,SACP6J,KAAK,UACL0O,OAAQR,EACRhH,SAAUrB,EACVG,MAAOL,EAAON,QACdvH,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQ/I,SAAW2I,EAAO3I,SACzCjB,WAAS,EACToK,WAAYJ,EAAQ/I,SAAW2I,EAAO3I,QACtC2B,MAAM,eACN9Q,OAAO,SACP6J,KAAK,UACL0O,OAAQR,EACRhH,SAAUrB,EACVG,MAAOL,EAAOL,QACdxH,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQ5G,gBAAkBwG,EAAOxG,gBAChDpD,WAAS,EACToK,WAAYJ,EAAQ5G,gBAAkBwG,EAAOxG,eAC7CR,MAAM,4BACN9Q,OAAO,SACP6J,KAAK,iBACL0O,OAAQR,EACRhH,SAAUrB,EACVG,MAAOL,EAAO8B,eACd3J,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEwH,MAAO9Y,QAAQ2Y,EAAQ7I,OAASyI,EAAOzI,OACvCnB,WAAS,EACToK,WAAYJ,EAAQ7I,OAASyI,EAAOzI,MACpCyB,MAAM,2BACN9Q,OAAO,SACP6J,KAAK,QACL0O,OAAQR,EACRhH,SAAUrB,EACVG,MAAOL,EAAOH,MACd1H,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CAEEwH,MAAO9Y,QAAQ2Y,EAAQ9H,OAAS0H,EAAO1H,OACvClC,WAAS,EACToK,WAAYJ,EAAQ9H,OAAS0H,EAAO1H,MACpCU,MAAM,qBACN9Q,OAAO,SACP6J,KAAK,QACL0O,OAAQR,EACRhH,SAAUrB,EACV0B,KAAK,QACLvB,MAAOL,EAAOY,MACdzI,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACEK,gBAAiB,CAAEC,QAAQ,GAC3BkH,MAAO9Y,QAAQ2Y,EAAQ3G,UAAYuG,EAAOvG,UAC1CrD,WAAS,EACToK,WAAYJ,EAAQ3G,UAAYuG,EAAOvG,SACvCT,MAAM,2BACN9Q,OAAO,SACP6J,KAAK,WACL0O,OAAQR,EACRhH,SAAUrB,EACV0B,KAAK,OACLvB,MAAOL,EAAO+B,SACd5J,QAAQ,aAEV,eAACV,EAAA,EAAD,CACEC,GAAI,CACF+D,WAAY,SACZvC,QAAS,OACT0N,IAAK,GAJT,UAOE,cAAC+D,GAAA,EAAD,CACEC,QAAS5K,EAAOuK,OAChBlQ,KAAK,SACLkH,SAAUrB,IAEZ,eAACrE,EAAA,EAAD,CACE9D,MAAM,gBACNI,QAAQ,QAFV,kDAKG,IACD,cAAC6Q,GAAA,EAAD,CACEjR,MAAM,UACNsB,UAAWC,IACX9B,GAAG,IACHqT,UAAU,SACV1S,QAAQ,KALV,4CAWHpI,QAAQ2Y,EAAQ6B,QAAUjC,EAAOiC,SAChC,cAACO,GAAA,EAAD,CAAgBjC,OAAK,EAArB,SACGP,EAAOiC,SAGZ,cAAC9S,EAAA,EAAD,CAAKC,GAAI,CAAEyB,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACErB,MAAM,UACNmD,SAAUuN,EACV/J,WAAS,EACThF,KAAK,QACLkI,KAAK,SACLzJ,QAAQ,YANV,wCAWF,eAAC0D,EAAA,EAAD,CACE9D,MAAM,gBACNI,QAAQ,QAFV,sEAKG,IACD,cAAC6Q,GAAA,EAAD,CACE3P,UAAWC,IACX9B,GAAG,SACHW,QAAQ,KAHV,iD,UCpIH4S,GA5He,SAAClU,GAAD,OAC5B,gDAAUA,GAAV,aACE,eAACuH,GAAA,EAAD,WACE,cAAC0C,GAAA,EAAD,CACEC,UAAU,2BACVtI,MAAM,kBAER,cAACwD,EAAA,EAAD,IACA,cAACoC,GAAA,EAAD,UACE,eAAC2C,GAAA,EAAD,CACEC,WAAS,EACTC,QAAS,EACT8J,KAAK,OAHP,UAKE,eAAChK,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJ8J,GAAI,EACJvT,GAAI,CACFwB,QAAS,OACTqC,cAAe,UAEjB6F,GAAI,GARN,UAUE,cAACvF,EAAA,EAAD,CACE9D,MAAM,cACNuG,cAAY,EACZnG,QAAQ,KAHV,2BAOA,cAAC+S,GAAA,EAAD,CACEC,QACE,cAACR,GAAA,EAAD,CACE5S,MAAM,UACNqT,gBAAc,IAGlB9J,MAAM,UAER,cAAC4J,GAAA,EAAD,CACEC,QACE,cAACR,GAAA,EAAD,CACE5S,MAAM,UACNqT,gBAAc,IAGlB9J,MAAM,uBAER,cAAC4J,GAAA,EAAD,CACEC,QAAS,cAACR,GAAA,EAAD,IACTrJ,MAAM,kBAER,cAAC4J,GAAA,EAAD,CACEC,QACE,cAACR,GAAA,EAAD,CACE5S,MAAM,UACNqT,gBAAc,IAGlB9J,MAAM,mBAGV,eAACN,GAAA,EAAD,CACE5E,MAAI,EACJ+E,GAAI,EACJ8J,GAAI,EACJvT,GAAI,CACFwB,QAAS,OACTqC,cAAe,UAEjB6F,GAAI,GARN,UAUE,cAACvF,EAAA,EAAD,CACE9D,MAAM,cACNuG,cAAY,EACZnG,QAAQ,KAHV,sBAOA,cAAC+S,GAAA,EAAD,CACEC,QACE,cAACR,GAAA,EAAD,CACE5S,MAAM,UACNqT,gBAAc,IAGlB9J,MAAM,UAER,cAAC4J,GAAA,EAAD,CACEC,QAAS,cAACR,GAAA,EAAD,IACTrJ,MAAM,uBAER,cAAC4J,GAAA,EAAD,CACEC,QACE,cAACR,GAAA,EAAD,CACE5S,MAAM,UACNqT,gBAAc,IAGlB9J,MAAM,wBAKd,cAACrF,EAAA,EAAD,IACA,cAACxE,EAAA,EAAD,CACEC,GAAI,CACFwB,QAAS,OACTK,eAAgB,WAChBmC,EAAG,GAJP,SAOE,cAACtC,EAAA,EAAD,CACErB,MAAM,UACNI,QAAQ,YAFV,2BCpDOkT,GA/DU,SAACxU,GAAW,IAAD,EACNM,mBAAS,CACnCkI,SAAU,GACViM,QAAS,KAHuB,mBAC3BtL,EAD2B,KACnBC,EADmB,KAM5BC,EAAe,SAACC,GACpBF,EAAU,2BACLD,GADI,kBAENG,EAAMC,OAAO/F,KAAO8F,EAAMC,OAAOC,UAItC,OACE,gDAAUxJ,GAAV,aACE,eAACuH,GAAA,EAAD,WACE,cAAC0C,GAAA,EAAD,CACEC,UAAU,kBACVtI,MAAM,aAER,cAACwD,EAAA,EAAD,IACA,eAACoC,GAAA,EAAD,WACE,cAACgD,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,WACN9Q,OAAO,SACP6J,KAAK,WACLkH,SAAUrB,EACV0B,KAAK,WACLvB,MAAOL,EAAOX,SACdlH,QAAQ,aAEV,cAACkJ,GAAA,EAAD,CACE3C,WAAS,EACT4C,MAAM,mBACN9Q,OAAO,SACP6J,KAAK,UACLkH,SAAUrB,EACV0B,KAAK,WACLvB,MAAOL,EAAOsL,QACdnT,QAAQ,gBAGZ,cAAC8D,EAAA,EAAD,IACA,cAACxE,EAAA,EAAD,CACEC,GAAI,CACFwB,QAAS,OACTK,eAAgB,WAChBmC,EAAG,GAJP,SAOE,cAACtC,EAAA,EAAD,CACErB,MAAM,UACNI,QAAQ,YAFV,6BCnCKoT,GAtBM,kBACnB,qCACE,cAAC7I,GAAA,EAAD,UACE,8DAEF,cAACjL,EAAA,EAAD,CACEC,GAAI,CACF5G,gBAAiB,qBACjB6R,UAAW,OACXxJ,GAAI,GAJR,SAOE,eAACyJ,GAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAAC,GAAD,IACA,cAACpL,EAAA,EAAD,CAAKC,GAAI,CAAE2E,GAAI,GAAf,SACE,cAAC,GAAD,e,qICMJmP,GAAanb,aAAW,SAAC6E,GAAD,MAAY,CACxC0O,KAAM,CACJ6H,WAAY,EACZC,WAAYxW,EAAMgM,QAAQ,UAI9B,SAASyK,GAAuB9U,GAC9B,IAAM+N,EAAU4G,KACVtW,EAAQ0W,eACNtF,EAA2CzP,EAA3CyP,MAAOE,EAAoC3P,EAApC2P,KAAMqF,EAA8BhV,EAA9BgV,YAAaC,EAAiBjV,EAAjBiV,aAkBlC,OACE,sBAAKhQ,UAAW8I,EAAQhB,KAAxB,UACE,cAAC9L,EAAA,EAAD,CACEM,QAnB6B,SAAC+H,GAClC2L,EAAa3L,EAAO,IAmBhBjF,SAAmB,IAATsL,EACVuF,aAAW,aAHb,SAKuB,QAApB7W,EAAM8W,UAAsB,cAAC,KAAD,IAAmB,cAAC,KAAD,MAElD,cAAClU,EAAA,EAAD,CAAYM,QArBc,SAAC+H,GAC7B2L,EAAa3L,EAAOqG,EAAO,IAoBmBtL,SAAmB,IAATsL,EAAYuF,aAAW,gBAA7E,SACuB,QAApB7W,EAAM8W,UAAsB,cAAC,KAAD,IAAyB,cAAC,KAAD,MAExD,cAAClU,EAAA,EAAD,CACEM,QArBwB,SAAC+H,GAC7B2L,EAAa3L,EAAOqG,EAAO,IAqBvBtL,SAAUsL,GAAQzT,KAAKkZ,KAAK3F,EAAQuF,GAAe,EACnDE,aAAW,YAHb,SAKuB,QAApB7W,EAAM8W,UAAsB,cAAC,KAAD,IAAwB,cAAC,KAAD,MAEvD,cAAClU,EAAA,EAAD,CACEM,QAxB4B,SAAC+H,GACjC2L,EAAa3L,EAAOpN,KAAK2N,IAAI,EAAG3N,KAAKkZ,KAAK3F,EAAQuF,GAAe,KAwB7D3Q,SAAUsL,GAAQzT,KAAKkZ,KAAK3F,EAAQuF,GAAe,EACnDE,aAAW,YAHb,SAKuB,QAApB7W,EAAM8W,UAAsB,cAAC,KAAD,IAAoB,cAAC,KAAD,SAazD,SAASE,GAAW7R,EAAM8R,EAAUC,GAClC,MAAO,CAAE/R,OAAM8R,WAAUC,OAG3B,IAAMC,GAAO,CACXH,GAAW,UAAW,IAAK,KAC3BA,GAAW,QAAS,IAAK,IACzBA,GAAW,SAAU,IAAK,IAC1BA,GAAW,iBAAkB,IAAK,GAClCA,GAAW,cAAe,IAAK,IAC/BA,GAAW,YAAa,IAAK,KAC7BA,GAAW,qBAAsB,IAAK,GACtCA,GAAW,aAAc,IAAK,GAC9BA,GAAW,SAAU,IAAK,IAC1BA,GAAW,WAAY,IAAK,IAC5BA,GAAW,cAAe,IAAK,GAC/BA,GAAW,SAAU,IAAK,IAC1BA,GAAW,OAAQ,IAAK,KACxBI,MAAK,SAACvb,EAAGwb,GAAJ,OAAWxb,EAAEob,SAAWI,EAAEJ,UAAY,EAAI,KAE3CK,GAAanc,YAAW,CAC5Boc,MAAO,CACLC,SAAU,OAIC,SAASC,KACtB,IAAM/H,EAAU4H,KADqC,EAE7BI,IAAMzV,SAAS,GAFc,mBAE9CqP,EAF8C,KAExC/B,EAFwC,OAGfmI,IAAMzV,SAAS,GAHA,mBAG9C0U,EAH8C,KAGjCgB,EAHiC,KAK/CC,EAAYjB,EAAc9Y,KAAKC,IAAI6Y,EAAaQ,GAAKnU,OAASsO,EAAOqF,GAW3E,OACE,cAACkB,GAAA,EAAD,CAAgB1T,UAAW2T,KAA3B,SACE,eAACzH,GAAA,EAAD,CAAOzJ,UAAW8I,EAAQ6H,MAAOV,aAAW,0BAA5C,UACE,eAACnG,GAAA,EAAD,YACIiG,EAAc,EACZQ,GAAKY,MAAMzG,EAAOqF,EAAarF,EAAOqF,EAAcA,GACpDQ,IACFlQ,KAAI,SAAC+Q,GAAD,OACJ,eAACzH,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAWrM,UAAU,KAAK8T,MAAM,MAAhC,SACGD,EAAI7S,OAEP,cAACqL,GAAA,EAAD,CAAWJ,MAAO,CAAE1U,MAAO,KAAO+U,MAAM,QAAxC,SACGuH,EAAIf,WAEP,cAACzG,GAAA,EAAD,CAAWJ,MAAO,CAAE1U,MAAO,KAAO+U,MAAM,QAAxC,SACGuH,EAAId,QARMc,EAAI7S,SAapByS,EAAY,GACX,cAACrH,GAAA,EAAD,CAAUH,MAAO,CAAE3U,OAAQ,GAAKmc,GAAhC,SACE,cAACpH,GAAA,EAAD,CAAW0H,QAAS,SAI1B,cAACC,GAAA,EAAD,UACE,cAAC5H,GAAA,EAAD,UACE,cAAC6H,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,CAAEjM,MAAO,MAAOjB,OAAQ,IACxD+M,QAAS,EACT9G,MAAO+F,GAAKnU,OACZ2T,YAAaA,EACbrF,KAAMA,EACNgH,YAAa,CACXhM,WAAY,CAAE,aAAc,iBAC5BiM,QAAQ,GAEV3B,aAhDa,SAAC3L,EAAOuN,GAC/BjJ,EAAQiJ,IAgDEC,oBA7CoB,SAACxN,GAC/B0M,EAAee,SAASzN,EAAMC,OAAOC,MAAO,KAC5CoE,EAAQ,IA4CEoJ,iBAAkBlC,c,8GCpI1BmC,IC0KkCC,KACGC,KACFC,KD5KpB,IAiEfC,GAAY,CAAC,CACjBC,UAAW,UACX1V,MAAO,eACP2V,UC4GmB,CAEnB,CACEtY,KAAM,eACNiG,GAAI,EACJhE,MAAO,WACN,CACDjC,KAAM,eACNiG,GAAI,EACJhE,MAAO,WACN,CACDjC,KAAM,eACNiG,GAAI,EACJhE,MAAO,WACN,CACDjC,KAAM,eACNiG,GAAI,EACJhE,MAAO,WACN,CACDjC,KAAM,eACNiG,GAAI,EACJhE,MAAO,WACN,CACDjC,KAAM,eACNiG,GAAI,EACJhE,MAAO,cDjILsW,GAAY,SAAAnZ,GAAK,0BAAyC,UAAvBA,EAAME,QAAQwM,KACjD0M,aAAQC,aAAKrZ,EAAME,QAAQoZ,QAAS,GAAI,KACxCC,aAAOF,aAAKrZ,EAAME,QAAQoZ,QAAS,GAAI,OAGvCE,GAAe,SAAA7X,GAAK,OACxB,cAAC,KAAU6X,aAAX,2BAA4B7X,GAA5B,IAAmCyO,MAAO,CAAE+D,UAAW,SAAUlT,WAAY,YAGzE2Q,GAAS,SAAA5R,GAAK,MAAK,CACvByZ,KAAM,CACJ5W,MAAO,oBACP4R,SAAU,WACViF,WAAY,OACZC,cAAe,MACfpe,QAAS,EACTE,OAAQ,IACRwC,WAAYkb,GAAUnZ,GACtB,gBAAiB,CACf/B,WAAY,QAEd,eAAgB,CACd2b,aAAc,GAEhB,kBAAmB,CACjBxb,aAAc,QAEhB,UAAW,CACTxC,gBAAiB,SAEnB,UAAW,CACTA,gBAAiByd,aAAKrZ,EAAME,QAAQO,QAAQE,KAAM,KAClDkZ,QAAS,IAGbzT,QAAS,CACPpC,QAAS,OACTK,eAAgB,SAChB3I,MAAO,OACPD,OAAQ,OACRgZ,SAAU,WACVlO,WAAY,UAEd3F,KAAM,CACJrF,QAAS,QACT4Y,UAAW,UAEb2F,IAAK,CACHjX,MAAO,WAETkX,MAAO,CACLlX,MAAO,WAETmX,KAAM,CACJnX,MAAO,WAEToX,QAAS,CACPre,gBAAiB,WAEnBse,UAAW,CACTte,gBAAiB,WAEnBue,SAAU,CACRve,gBAAiB,WAEnBwe,QAAS,CACPA,QAAS,OAEXC,YAAa,CACXC,aAAc,OACd,UAAW,CACTF,QAAS,KAGbG,YAAa,CACX,YAAa,CACXC,WAAY,oBACZC,WAAY,MAGhBC,cAAe,CACb5S,KAAM,QAER6S,cAAe,CACb3W,QAAS,OACTuC,WAAY,UAEdqU,eAAgB,CACdrf,QAASyE,EAAMgM,QAAQ,EAAG,GAC1BjE,WAAY,EACZnM,gBAAiBoE,EAAME,QAAQC,WAAWE,MAC1ChF,UAAW,aACXK,MAAO,SAETmf,YAAY,2BACP7a,EAAMe,WAAW+Z,OADX,IAET9W,QAAS,iBAEXT,MAAM,2BACDvD,EAAMe,WAAWS,IADjB,IAEHqB,MAAO7C,EAAME,QAAQU,KAAKC,UAC1BI,WAAYjB,EAAMe,WAAWga,eAC7BnT,SAAU,SACVoT,aAAc,WACdR,WAAY,WAEdlX,KAAM,CACJT,MAAO7C,EAAME,QAAQ+a,OAAOxX,OAC5BkW,cAAe,UAEjBuB,OAAQ,CACNxf,MAAOsE,EAAMgM,QAAQ,KACrBvQ,OAAQuE,EAAMgM,QAAQ,KACtB2N,cAAe,SAEjBwB,WAAY,CACVhH,UAAW,UAEbiH,aAAc,CACZX,WAAY,KAEdY,eAAgB,CACdC,cAAetb,EAAMgM,QAAQ,IAE/BD,UAAW,CACTuP,cAAetb,EAAMgM,QAAQ,QAqD3BuP,GAAc1M,aAAW+C,GAAQ,CAAEzM,KAAM,eAA3B0J,EAA4C,gBAAGa,EAAH,EAAGA,QAAY8L,EAAf,kCAC9D,cAAC,KAAaD,YAAd,2BACMC,GADN,IAEE5U,UAAW8I,EAAQ2K,kBAIjBoB,GAAqB5M,aAAW+C,GAAQ,CAAEzM,KAAM,sBAA3B0J,EAAmD,gBAAGa,EAAH,EAAGA,QAAY8L,EAAf,kCAC5E,cAAC,KAAaC,mBAAd,2BAAqCD,GAArC,IAAgD5U,UAAW8I,EAAQ6K,kBAG/DmB,GAAgB7M,aAAW+C,GAAQ,CAAEzM,KAAM,eAA3B0J,EAA4C,gBAAGa,EAAH,EAAGA,QAAY8L,EAAf,kCAChE,cAAC,KAAQE,cAAT,2BAA2BF,GAA3B,IAAsC5U,UAAW8I,EAAQgL,oBAQtCiB,G,oDAEnB,WAAYha,GAAQ,IAAD,+BACjB,cAAMA,IAEDwN,MAAQ,CACXlC,KAAM2L,IAGR,EAAKgD,cAAgB,EAAKA,cAAcC,KAAnB,iBAPJ,E,kDAWnB,YAA4C,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,QAC9Bhf,KAAKif,UAAS,SAAC9M,GAAW,IAClBlC,EAASkC,EAATlC,KACN,GAAI6O,EAAO,CACT,IAAMI,EAAkBjP,EAAKjK,OAAS,EAAIiK,EAAKA,EAAKjK,OAAS,GAAG6D,GAAK,EAAI,EACzEoG,EAAI,uBAAOA,GAAP,cAAepG,GAAIqV,GAAoBJ,KAS7C,OAPIC,IACF9O,EAAOA,EAAKhG,KAAI,SAAAoT,GAAW,OACzB0B,EAAQ1B,EAAYxT,IAApB,2BAA+BwT,GAAgB0B,EAAQ1B,EAAYxT,KAAQwT,WAE/D8B,IAAZH,IACF/O,EAAOA,EAAKmP,QAAO,SAAA/B,GAAW,OAAIA,EAAYxT,KAAOmV,MAEhD,CAAE/O,a,oBAIb,WAAU,IApTQoP,EAqTRpP,EAASjQ,KAAKmS,MAAdlC,KAER,OACE,cAAC6K,GAAA,EAAD,UACE,eAAC,KAAD,CACE7K,KAAMA,EADR,UAGE,cAAC,KAAD,CACEqP,gBAAiBtf,KAAK4e,gBAGxB,cAAC,KAAD,CACEW,oBAjUQF,EAkUK,IAAI1Q,KAjU3B/B,QAAQC,IAAIwS,GACK,IAAItL,KAAKC,eAAe,SAAS1H,OAAO+S,MAoUjD,cAAC,KAAD,CAEEG,sBAAuBhD,KAGzB,cAAC,KAAD,CACEiD,qBAAsBlB,GACtBmB,4BAA6BjB,KAE/B,cAAC,KAAD,CACExO,KAAM+L,KAGR,cAAC,KAAD,CACE2D,uBAAwBjB,KAE1B,cAAC,KAAD,IAEA,cAAC,KAAD,IACA,cAAC,KAAD,CACEkB,iBAAe,EACfC,kBAAgB,EAChBC,gBAAc,IAEhB,cAAC,KAAD,IACA,cAAC,KAAD,a,GA1EwBpF,iB,+BEvHnBqF,GAhLY,WACvB,IA0CoBV,EA1CdpN,EAAUC,cACRC,EAAU3L,cAAV2L,MAEFQ,EAAOR,EAAMf,IACb4O,EAAS7N,EAAMjB,MAkEf+O,EAAU,yCAAG,uBAAAphB,EAAA,sDACXf,OAAOsb,QAAQ,sFAEfxG,GAAarB,YAAYoB,GAAM5C,MAAK,SAAAC,GAChCpD,QAAQC,IAAI,oBAAqBqT,KAAKC,UAAUnQ,IAC7B,MAAfA,EAAI6C,OACJZ,EAAQ,gBAERnI,MAAM,sEARH,2CAAH,qDAsBhB,OACI,cAACvE,EAAA,EAAD,UACI,eAAC2G,GAAA,EAAD,WACI,cAAC0C,GAAA,EAAD,CACI3I,QAAQ,KACR4I,UAAU,kCACVtI,MAAM,uBAEV,cAACwD,EAAA,EAAD,IACA,eAACoC,GAAA,EAAD,WACI,cAAC2C,GAAA,EAAD,UACI,eAACnF,EAAA,EAAD,CACI1D,QAAQ,KACRma,aAAa,OAFjB,4BAIUJ,EAAOzZ,WAGrB,eAACuI,GAAA,EAAD,CACIsR,aAAa,OADjB,UAEI,cAACzW,EAAA,EAAD,CACIyW,aAAa,OACbC,YAAY,QACZ5M,MAAM,QAHV,SA9FI,SAAC6M,GACrB,IAAI3M,EAAW,KAcf,OAZIA,EADe,IAAf2M,EACW,2BAEW,IAAfA,EACI,iCAEW,IAAfA,EACI,qBAGA,iCAIX,eAAC3W,EAAA,EAAD,CACI1D,QAAQ,KACRmG,cAAY,EAFhB,wCAGYuH,KA+EK4M,CAAgBP,EAAOrM,YAE5B,cAACxE,GAAA,EAAD,CACIqR,aAAcR,EAAO5W,QACrBgG,MAAM,eACNkI,WAAY,CACR/H,UAAU,GAEd/H,KAAK,SACLlJ,OAAO,SACPmiB,UAAU,OACVtG,KAAK,KACLuG,QAAQ,KACRtN,MA7CD,CACnBzB,UAAW,EACXjT,MAAO,MACPD,OAAQ,gBA6CI,cAACqQ,GAAA,EAAD,CACIuR,YAAY,QACZD,aAAa,OAFjB,SAGI,cAACzW,EAAA,EAAD,CACI8J,MAAM,QADV,UA7FA4L,EA+FgBW,EAAOW,YAAaX,EAAOY,YA9F3DhU,QAAQC,IAAI,wBAAU,CAAEwS,UAExBzS,QAAQC,IAAI,IAAIkH,KAAKC,eAAe,SAAS1H,OAAO+S,IAEhD,qBAAKzV,UAAU,MAAf,SACI,yDAAa,IAAImK,KAAKC,eAAe,SAAS1H,OAAO+S,GAArD,gBA6FI,eAACvQ,GAAA,EAAD,CACIuR,YAAY,QACZ5M,MAAM,QAFV,UAGI,cAACvM,EAAA,EAAD,CACIhB,QA3FP,WACb+L,EAAQ,eAAgB,CAAE7B,SAAS,KA2FfgD,MAAO,CAAEoG,WAAY,QACrBvT,QAAQ,YACRJ,MAAM,UAJV,0DAQA,cAACqB,EAAA,EAAD,CACIhB,QA/FL,SAAC+H,GAChBA,EAAM0B,iBAENsC,EAAQ,qBAAD,OAAsBU,GAAQ,CACjCvC,SAAS,EACT+B,MAAO,CACHf,IAAKuB,EACLzB,MAAO8O,MAyFK5M,MAAO,CAAEoG,WAAY,QACrBvT,QAAQ,YACRJ,MAAM,UAJV,iCAQA,cAACqB,EAAA,EAAD,CACIhB,QAAS,kBAAM+Z,KACf7M,MAAO,CAAEoG,WAAY,QACrBvT,QAAQ,YACRJ,MAAM,UAJV,6C,wCCoCTgb,GAnMc,WACzB,IAAM5O,EAAUC,cADe,EAETjN,qBAFS,mBAExBmM,EAFwB,KAEnB0P,EAFmB,OAGE7b,mBAAS,GAHX,mBAGxB8b,EAHwB,KAGbC,EAHa,OAIJ/b,mBAAS,IAJL,mBAIxBgc,EAJwB,KAIhBC,EAJgB,OAKAjc,mBAAS,IALT,mBAKxBkc,EALwB,KAKdC,EALc,KAOzBzO,EADYnM,cAAV2L,MACWf,IAEnBjI,qBAAU,WACN2X,EAAOnO,GACM,YAATA,GAEAC,GAAazB,YAAYwB,GAAM5C,MAAK,SAACC,GACjC,IAAMkB,EAAQlB,EAAIC,KAClBrD,QAAQC,IAAR,mBAAwBqT,KAAKC,UAAUjP,KACvC4P,EAAO5P,EAAME,KACb4P,EAAY9P,EAAMyC,UAClBuN,EAAShQ,EAAM3K,OACf6a,EAAWlQ,EAAM9H,cAG1B,IAEH,IA2DMiY,EAAiB,CACnB1P,UAAW,EACXjT,MAAO,OAGX,OACI,eAACwN,GAAA,EAAD,WACI,cAAC0C,GAAA,EAAD,CACI3I,QAAQ,KACRM,MAnEI,YAAR6K,EAEO,oBAAIxH,UAAU,cAAd,qEAEJ,qBAAIA,UAAU,cAAd,UAA6BwH,EAA7B,qDAiEH,cAACrH,EAAA,EAAD,IACA,cAACoC,GAAA,EAAD,UACI,iCACI,eAAC2C,GAAA,EAAD,CACI6C,UAAU,OACVyO,aAAa,OAFjB,UAGI,cAACzW,EAAA,EAAD,CACI1D,QAAQ,KACRma,aAAa,OAFjB,sCAMA,eAACkB,GAAA,EAAD,CAAarb,QAAQ,WAArB,UACI,cAACsb,GAAA,EAAD,CAAYC,QAAQ,6BAA6B3X,GAAG,kBACpD,eAAC4X,GAAA,EAAD,CACI/J,YAAY,WACZvP,KAAK,WACLyB,UAAU,eACVuE,MAAO4S,EACP1R,SAhFE,SAACpB,GAC3BA,EAAM0B,iBACNqR,EAAY/S,EAAMC,OAAOC,OACzBvB,QAAQC,IAAIoB,EAAMC,OAAOC,QAwEL,UAOI,cAACuT,GAAA,EAAD,CAAUvT,MAAO,EAAjB,sCACA,cAACuT,GAAA,EAAD,CAAUvT,MAAO,EAAjB,4CACA,cAACuT,GAAA,EAAD,CAAUvT,MAAO,EAAjB,gCACA,cAACuT,GAAA,EAAD,CAAUvT,MAAO,EAAjB,qDAIZ,eAACW,GAAA,EAAD,CACI6C,UAAU,OACVyO,aAAa,OAFjB,UAGI,cAACzW,EAAA,EAAD,CACI1D,QAAQ,KACRma,aAAa,OAFjB,0BAMA,cAACjR,GAAA,EAAD,CACItF,GAAG,aACH6N,YAAY,QACZvP,KAAK,QACLyB,UAAU,eACV8F,KAAK,OACLvB,MAAO8S,EACP5R,SAnGG,SAACpB,GACxBA,EAAM0B,iBACNuR,EAASjT,EAAMC,OAAOC,OACtBvB,QAAQC,IAAIoB,EAAMC,OAAOC,QAiGL3G,KAAK,SACLlJ,OAAO,SACP8hB,aAAa,OACbhN,MAAOiO,OAGf,eAACvS,GAAA,EAAD,WACI,cAACnF,EAAA,EAAD,CACI1D,QAAQ,KACRma,aAAa,OAFjB,0BAMA,cAACjR,GAAA,EAAD,CACIwS,MAAOR,EACPzJ,YAAY,UACZ7N,GAAG,UACH1B,KAAK,UACLyB,UAAU,eACVpC,KAAK,SACLoa,OAAK,EACLtjB,OAAO,SACP+Q,SApHK,SAACpB,GAC1BA,EAAM0B,iBACNyR,EAAWnT,EAAMC,OAAOC,OACxBvB,QAAQC,IAAIoB,EAAMC,OAAOC,QAkHLsS,UAAU,OACVtG,KAAK,KACLuG,QAAQ,KACRtN,MAAOiO,OAGf,eAACvS,GAAA,EAAD,CACIuR,YAAY,QACZ1O,UAAU,OACVyO,aAAa,OACb3M,MAAM,QAJV,UAMI,cAACvM,EAAA,EAAD,CACIjB,QAAQ,YACRJ,MAAM,UACNK,QA7HJ,SAAC+H,GACjBA,EAAM0B,iBACN,IAAMuB,EAAQ,CACVyC,SAAUoN,EACVxa,MAAO0a,EACP7X,QAAS+X,GAGbvU,QAAQC,IAAIoB,EAAMC,OAAOC,OACzBvB,QAAQC,IAAR,mBAAwBqT,KAAKC,UAAUjP,KAE3B,YAARE,EACAwB,GAAa3B,YAAYC,GAAOnB,MAAK,SAAAC,GACjCpD,QAAQC,IAAImD,GACZiC,EAAQ,eAAgB,CAAE7B,SAAS,OAIvCwC,GAAavB,YAAYD,EAAKF,GAAOnB,MAAK,SAAAC,GACtCpD,QAAQC,IAAImD,GACZiC,EAAQ,eAAgB,CAAE7B,SAAS,QAsG3B,0BAOA,cAAClJ,EAAA,EAAD,CACIjB,QAAQ,YACRJ,MAAM,UACNK,QA1GT,SAAC+H,GACZA,EAAM0B,iBACNsC,EAAQ,eAAgB,CAAE7B,SAAS,KAyGfgD,MAAO,CAAEoG,WAAY,QAJzB,sCCnJTqI,GAnCA,CACb,CACElb,KAAM,MACNmb,QAAS,cAAC,GAAD,IACTC,SAAU,CACR,CAAEpb,KAAM,SAAUmb,QAAS,cAAC,GAAD,KAC3B,CACEnb,KAAM,aACNmb,QAAS,cAACE,GAAD,KAGX,CAAErb,KAAM,OAAQmb,QAAS,cAAC,GAAD,KACzB,CAAEnb,KAAM,WAAYmb,QAAS,cAAC,GAAD,KAC7B,CAAEnb,KAAM,WAAYmb,QAAS,cAACG,GAAD,KAC7B,CAAEtb,KAAM,iBAAkBmb,QAAS,cAAC,GAAD,KACnC,CAAEnb,KAAM,IAAKmb,QAAS,cAAC,IAAD,CAAUxc,GAAG,UACnC,CAAEqB,KAAM,mBAAoBmb,QAAS,cAAC,GAAD,KACrC,CAAEnb,KAAM,qBAAsBmb,QAAS,cAAC,GAAD,KACvC,CAAEnb,KAAM,WAAYmb,QAAS,cAAC,GAAD,OAGjC,CACEnb,KAAM,IACNmb,QAAS,cAAC,GAAD,IACTC,SAAU,CACR,CAAEpb,KAAM,QAASmb,QAAS,cAAC,GAAD,KAC1B,CAAEnb,KAAM,SAAUmb,QAAS,cAAC,GAAD,KAC3B,CAAEnb,KAAM,WAAYmb,QAAS,cAAC,GAAD,KAC7B,CAAEnb,KAAM,MAAOmb,QAAS,cAAC,GAAD,KACxB,CAAEnb,KAAM,IAAKmb,QAAS,cAAC,IAAD,CAAUxc,GAAG,eACnC,CAAEqB,KAAM,IAAKmb,QAAS,cAAC,IAAD,CAAUxc,GAAG,aC7B1B4c,GAXH,WACV,IAAMC,EAAUC,YAAUP,IAE1B,OACE,eAACQ,EAAA,EAAD,CAAerf,MAAOA,EAAtB,UACE,cAAC,EAAD,IACCmf,MCTPG,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEDC,SAASC,eAAe,S3CyHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7S,MAAK,SAAA8S,GACjCA,EAAaC,kB","file":"static/js/main.252c53b3.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","/* eslint-disable no-underscore-dangle */\r\nimport { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#F4F6F8',\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2'\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c'\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","const Logo = (props) => (\r\n  <img\r\n    alt=\"Logo\"\r\n    src=\"/static/logo.svg\"\r\n    {...props}\r\n  />\r\n\r\n);\r\n\r\nexport default Logo;\r\n","import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\n// import InputIcon from '@material-ui/icons/Input';\r\nimport { BiCalendar } from 'react-icons/bi';\r\nimport Logo from './Logo';\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Hidden lgDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          {/* <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton> */}\r\n        </Hidden>\r\n        <Hidden>\r\n          <IconButton color=\"inherit\">\r\n            <BiCalendar />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n","import {\r\n  NavLink as RouterLink,\r\n  matchPath,\r\n  useLocation\r\n} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Button, ListItem } from '@material-ui/core';\r\n\r\nconst NavItem = ({\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const location = useLocation();\r\n\r\n  const active = href ? !!matchPath({\r\n    path: href,\r\n    end: false\r\n  }, location.pathname) : false;\r\n\r\n  return (\r\n    <ListItem\r\n      disableGutters\r\n      sx={{\r\n        display: 'flex',\r\n        py: 0\r\n      }}\r\n      {...rest}\r\n    >\r\n      <Button\r\n        component={RouterLink}\r\n        sx={{\r\n          color: 'text.secondary',\r\n          fontWeight: 'medium',\r\n          justifyContent: 'flex-start',\r\n          letterSpacing: 0,\r\n          py: 1.25,\r\n          textTransform: 'none',\r\n          width: '100%',\r\n          ...(active && {\r\n            color: 'primary.main'\r\n          }),\r\n          '& svg': {\r\n            mr: 1\r\n          }\r\n        }}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon size=\"20\" />\r\n        )}\r\n        <span>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport {\r\n  // AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  // Settings as SettingsIcon,\r\n  // ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon\r\n  // Users as UsersIcon\r\n} from 'react-feather';\r\n// import { BiClipboard, BiChalkboard, BiCalendar, BiBriefcaseAlt } from 'react-icons/bi';\r\nimport { BiChalkboard, BiCalendar, BiBriefcaseAlt } from 'react-icons/bi';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Cookies from 'universal-cookie';\r\nimport NavItem from './NavItem';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst islogin = {\r\n  href: '',\r\n  title: ''\r\n};\r\n\r\nif (cookies.get('accessToken') == null) {\r\n  islogin.href = '/login';\r\n  islogin.title = '로그인';\r\n} else {\r\n  islogin.href = '/logout';\r\n  islogin.title = '로그아웃';\r\n}\r\nconst userid = cookies.get('id');\r\nconst userImage = {\r\n  image: '/static/images/avatars/nouser.png'\r\n};\r\n\r\nif (userid === null) {\r\n  userImage.image = '/static/images/avatars/nouser.png';\r\n} else {\r\n  userImage.image = `/static/images/avatars/${cookies.get('id')}.png`;\r\n}\r\n\r\nconst user = {\r\n  href: '/app/mypage',\r\n  avatar: userImage.image,\r\n  jobTitle: '',\r\n  name: decodeURI(cookies.get('name'))\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/home',\r\n    icon: BarChartIcon,\r\n    title: '홈'\r\n  },\r\n  {\r\n    // href: '/app/mypage',\r\n    href: '/app/mypage',\r\n    icon: UserIcon,\r\n    title: '마이페이지'\r\n  },\r\n  {\r\n    href: '/app/timemanagement',\r\n    icon: BiBriefcaseAlt,\r\n    title: '근태관리'\r\n  },\r\n  {\r\n    href: '/app/board/1',\r\n    icon: BiChalkboard,\r\n    title: '게시판'\r\n  },\r\n  {\r\n    href: '/app/calendar',\r\n    icon: BiCalendar,\r\n    title: '캘린더'\r\n  },\r\n  {\r\n    href: islogin.href,\r\n    icon: LockIcon,\r\n    title: islogin.title\r\n  },\r\n  {\r\n    href: '/register',\r\n    icon: UserPlusIcon,\r\n    title: '회원가입'\r\n  }\r\n];\r\n\r\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\r\n  const location = useLocation();\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [display, setdisplay] = useState('flex');\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    if (cookies.get('accessToken') == null) {\r\n      setdisplay('none');\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const btnActive = () => {\r\n    setDisabled(true);\r\n    alert('출근 처리 되었습니다.');\r\n  };\r\n\r\n  const btnDisabled = () => {\r\n    setDisabled(false);\r\n    alert('퇴근 처리 되었습니다.');\r\n  };\r\n\r\n  // if (cookies.get(\"accessToken\") === null) {\r\n  //   setdisplay(\"none\")\r\n  // } else {\r\n  //   setdisplay(\"flex\")\r\n  // }\r\n\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        m: 1\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: { display },\r\n          flexDirection: 'column',\r\n          p: 2,\r\n          m: 1\r\n        }}\r\n      >\r\n        <Avatar\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 64,\r\n            height: 64\r\n          }}\r\n          to=\"/app/mypage\"\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n          sx={{\r\n            cursor: 'pointer',\r\n            p: 1\r\n          }}\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography color=\"textSecondary\" variant=\"body2\">\r\n          {user.jobTitle}\r\n        </Typography>\r\n        <Button\r\n          className=\"onWork\"\r\n          id=\"onWork\"\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 150,\r\n            height: 40,\r\n            m: 2,\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          disabled={disabled}\r\n          // href=\"https://react-material-kit.devias.io\"\r\n          variant=\"contained\"\r\n          onClick={btnActive}\r\n        >\r\n          출근\r\n        </Button>\r\n        <Button\r\n          className=\"offWork\"\r\n          id=\"offWork\"\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 150,\r\n            height: 40\r\n          }}\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          disabled={!disabled}\r\n          // href=\"https://react-material-kit.devias.io\"\r\n          variant=\"contained\"\r\n          onClick={btnDisabled}\r\n        >\r\n          퇴근\r\n        </Button>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: '#fff',\r\n          cursor: 'pointer',\r\n          p: 2,\r\n          pt: 20\r\n        }}\r\n      >\r\n        <IconButton>\r\n          <InputIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256,\r\n              top: 64,\r\n              height: 'calc(100% - 64px)'\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboardSidebar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nDashboardSidebar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","import { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport DashboardNavbar from './DashboardNavbar';\r\nimport DashboardSidebar from './DashboardSidebar';\r\n\r\nconst DashboardLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst DashboardLayoutWrapper = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  })\r\n);\r\n\r\nconst DashboardLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst DashboardLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport Logo from './Logo';\r\n\r\nconst MainNavbar = (props) => (\r\n  <AppBar\r\n    elevation={0}\r\n    {...props}\r\n  >\r\n    <Toolbar sx={{ height: 64 }}>\r\n      <RouterLink to=\"/\">\r\n        <Logo />\r\n      </RouterLink>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nexport default MainNavbar;\r\n","import { Outlet } from 'react-router-dom';\r\nimport { experimentalStyled } from '@material-ui/core';\r\nimport MainNavbar from './MainNavbar';\r\n\r\nconst MainLayoutRoot = experimentalStyled('div')(\r\n  ({ theme }) => ({\r\n    backgroundColor: theme.palette.background.paper,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  })\r\n);\r\n\r\nconst MainLayoutWrapper = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64\r\n});\r\n\r\nconst MainLayoutContainer = experimentalStyled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden'\r\n});\r\n\r\nconst MainLayoutContent = experimentalStyled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto'\r\n});\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <MainNavbar />\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n);\r\n\r\nexport default MainLayout;\r\n","import moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\nconst userid = cookies.get(\"id\");\r\n\r\nconst userImage = {\r\n  image: '/static/images/avatars/nouser.png'\r\n}\r\n\r\nif (userid === null) {\r\n  userImage.image = '/static/images/avatars/nouser.png'\r\n} else {\r\n  userImage.image = `/static/images/avatars/${cookies.get(\"id\")}.png`\r\n}\r\n\r\nconst user = {\r\n  avatar: userImage.image,\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: decodeURI(cookies.get(\"name\")),\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst MypageProfile = (props) => (\r\n  <Card {...props}>\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.avatar}\r\n          sx={{\r\n            height: 150,\r\n            width: 150\r\n          }}\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${user.city} ${user.country}`}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n        </Typography>\r\n      </Box>\r\n    </CardContent>\r\n    <Divider />\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        사진 변경하기\r\n      </Button>\r\n    </CardActions>\r\n    <CardActions>\r\n      <Button\r\n        color=\"primary\"\r\n        fullWidth\r\n        variant=\"text\"\r\n      >\r\n        비밀번호 변경하기\r\n      </Button>\r\n    </CardActions>\r\n  </Card>\r\n);\r\n\r\nexport default MypageProfile;\r\n","import axios from 'axios'; // 액시오스\r\n// import Cookies from 'universal-cookie';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n// const USER_API_BASE_URL = \"http://localhost:8080\";\r\nconst AxiosRequestConfig = {\r\n  headers: cookies.get('accessToken')\r\n};\r\n\r\nclass ApiService {\r\n  addUser = (user) => {\r\n    console.log('addUser In');\r\n    // return axios.post(`${USER_API_BASE_URL}/users/signup`, user);\r\n    return axios.post(`/users/signup`, user);\r\n  };\r\n\r\n  loginUser = (user) => {\r\n    console.log('login success');\r\n    // console.log(`URL : ${USER_API_BASE_URL}/login`);\r\n    console.log(user);\r\n\r\n    // cofing 넣었을때 전송 오류 남\r\n    // const AxiosRequestConfig = {\r\n    //     transformRequest: 'application/x-www-form-urlencoded'\r\n    // }\r\n\r\n    const userData = {\r\n      username: user.id,\r\n      password: user.password\r\n    };\r\n    // cookies.set(\"id\", userData.username)\r\n    console.log(userData);\r\n    cookies.set('userId', userData.username);\r\n    // return axios.get(`${USER_API_BASE_URL}/demo/auth`, AxiosRequestConfig, userData);\r\n    // return axios.post(`${USER_API_BASE_URL}/auth`, userData);\r\n    return axios.post(`/auth`, userData);\r\n  };\r\n  /*\r\n        editUser(user) {\r\n            return axios.put(USER_API_BASE_URL + '/' + user.id, user);\r\n        }\r\n        */\r\n\r\n  logoutUser = (user) => {\r\n    console.log('login success');\r\n    // console.log(`URL : ${USER_API_BASE_URL}/login`);\r\n    console.log(user);\r\n\r\n    // cofing 넣었을때 전송 오류 남\r\n    // const AxiosRequestConfig = {\r\n    //     transformRequest: 'application/x-www-form-urlencoded'\r\n    // }\r\n\r\n    const userData = {\r\n      username: user.id,\r\n      password: user.password\r\n    };\r\n    // cookies.set(\"id\", userData.username)\r\n    console.log(userData);\r\n    cookies.set('userId', userData.username);\r\n    // return axios.get(`${USER_API_BASE_URL}/demo/auth`, AxiosRequestConfig, userData);\r\n    // return axios.post(`${USER_API_BASE_URL}/logout`, userData, AxiosRequestConfig);\r\n    return axios.post(`/logout`, userData, AxiosRequestConfig);\r\n  };\r\n\r\n  UpdateUser = (user) => {\r\n    console.log('UpdateUser');\r\n    // return axios.post(`${USER_API_BASE_URL}/users/updateUser`, user);\r\n    return axios.post(`/users/updateUser`, user);\r\n  };\r\n}\r\n\r\nexport default new ApiService();\r\n","import { useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport Cookies from 'universal-cookie';\r\nimport ApiService from 'src/ApiService';\r\n\r\nconst cookies = new Cookies();\r\n\r\n// const states = [\r\n//   {\r\n//     value: 'alabama',\r\n//     label: 'Alabama'\r\n//   },\r\n//   {\r\n//     value: 'new-york',\r\n//     label: 'New York'\r\n//   },\r\n//   {\r\n//     value: 'san-francisco',\r\n//     label: 'San Francisco'\r\n//   }\r\n// ];\r\n\r\nconst MypageProfileDetails = (props) => {\r\n  const [values, setValues] = useState({\r\n    id: decodeURI(cookies.get(\"id\")),\r\n    name: decodeURI(cookies.get(\"name\")),\r\n    zipcode: (cookies.get(\"zipcode\")),\r\n    address: decodeURI(cookies.get(\"address\")),\r\n    addressDetail: decodeURI(cookies.get(\"addressDetail\")),\r\n    phone: cookies.get(\"phone\"),\r\n    emailAddress: (cookies.get(\"email\")),\r\n    birthDay: cookies.get(\"birthday\")\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const userInfoUpdate = (event) => {\r\n    event.preventDefault();\r\n    const user = {\r\n      id: values.id,\r\n      name: values.name,\r\n      zipcode: values.zipcode,\r\n      address: values.address,\r\n      address_detail: values.addressDetail,\r\n      phone: values.phone,\r\n      email: values.emailAddress,\r\n      birthday: values.birthDay\r\n    }\r\n    console.log(user)\r\n    ApiService.UpdateUser(user)\r\n      .then(res => {\r\n        console.log(\"update 전송\")\r\n        console.log(res.data)\r\n        cookies.set(\"memberIndex\", encodeURIComponent(res.data.memberIndex));\r\n        cookies.set(\"id\", encodeURIComponent(res.data.id));\r\n        cookies.set(\"name\", encodeURIComponent(res.data.name));\r\n        cookies.set(\"phone\", encodeURIComponent(res.data.phone));\r\n        cookies.set(\"zipcode\", encodeURIComponent(res.data.zipcode));\r\n        cookies.set(\"address\", encodeURIComponent(res.data.address));\r\n        cookies.set(\"addressDetail\", encodeURIComponent(res.data.address_detail));\r\n        cookies.set(\"birthday\", encodeURIComponent(res.data.birthday));\r\n        cookies.set(\"email\", (res.data.email), \"UTF-8\");\r\n\r\n        alert(\"회원정보 수정을 성공했습니다.\")\r\n        window.location.replace(\"/app/mypage\")\r\n      })\r\n      .catch(err => {\r\n        console.log(\"update 전송실패\")\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      validationschema={\r\n        Yup.object().shape({\r\n          id: Yup.string().max(255).required('ID is required'),\r\n          name: Yup.string().max(255).required('Name is required'),\r\n          zipcode: Yup.string().max(255).required('Zipode is required'),\r\n          address: Yup.string().max(255).required('Address is required'),\r\n          addressDetail: Yup.string().max(255).required('Address detail is required'),\r\n          phone: Yup.string().max(255).required('Phone is required'),\r\n          emailAddress: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n          birthDay: Yup.date().default(() => new Date())\r\n        })\r\n      }\r\n      {...props}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"아이디\"\r\n                name=\"id\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.id}\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  readOnly: true\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"이름\"\r\n                name=\"name\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.name}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"우편 번호\"\r\n                name=\"zipcode\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.zipcode}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"기본 주소\"\r\n                name=\"address\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.address}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"상세 주소\"\r\n                name=\"addressDetail\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.addressDetail}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"전화 번호\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"이메일 주소\"\r\n                name=\"emailAddress\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.emailAddress}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                InputLabelProps={{ shrink: true }}\r\n                fullWidth\r\n                label=\"생일\"\r\n                name=\"birthDay\"\r\n                onChange={handleChange}\r\n                required\r\n                type=\"date\"\r\n                value={values.birthDay}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={userInfoUpdate}\r\n          >\r\n            저장하기\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MypageProfileDetails;\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport MypageProfile from 'src/components/mypage/MypageProfile';\r\nimport MypageProfileDetails from 'src/components/mypage/MypageProfileDetails';\r\n\r\nconst Mypage = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>마이페이지</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <MypageProfile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <MypageProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Mypage;\r\n","import axios from 'axios'; // axios를 사용하는 것을 의미\r\n\r\n// const BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\r\n\r\nclass BoardService {\r\n  getBoards = (pNum, objCnt, pageCnt) => {\r\n    console.log('getBoards');\r\n    console.log('pNum : ', pNum);\r\n    console.log('objCnt : ', objCnt);\r\n    console.log('pageCnt : ', pageCnt);\r\n    // return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\r\n    return axios.get(\r\n      `/api/board?p_num=${pNum}&objcnt=${objCnt}&pagecnt=${pageCnt}`\r\n    ); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\r\n  };\r\n\r\n  createBoard = (board) => {\r\n    console.log('createBoards');\r\n    return axios.post('/api/board', board);\r\n  };\r\n\r\n  // getOneBoard(index){\r\n  //     console.log(\"readBoards: \"+index);\r\n  //     return axios.get(BOARD_API_BASE_URL + \"/\" + index);\r\n  // }\r\n\r\n  getOneBoard = (idx) => {\r\n    console.log(`readBoards: ${idx}`);\r\n    return axios.get(`/api/board/${idx}`);\r\n  };\r\n\r\n  // updateBoard(index, board){\r\n  //     return axios.put(BOARD_API_BASE_URL + \"/\" + index,board);\r\n  // }\r\n\r\n  updateBoard = (idx, board) => {\r\n    console.log(idx);\r\n    return axios.put(`/api/board/${idx}`, board);\r\n  };\r\n\r\n  // deleteBoard(index) {\r\n  //     return axios.delete(BOARD_API_BASE_URL + \"/\" + index);\r\n  // }\r\n\r\n  deleteBoard = (idx) => {\r\n    console.log(idx);\r\n    return axios.delete(`/api/board/${idx}`);\r\n  };\r\n}\r\n\r\nexport default new BoardService();\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Button, Box } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport BoardService from '../../service/BoardService';\r\n// import '../../css/ListBoardComponent.css';\r\n\r\nconst Category = {\r\n  NOTICE: { value: 0, name: '공지사항' },\r\n  FREEBOARD: { value: 1, name: '자유게시판' },\r\n  STORAGE: { value: 2, name: '자료실' },\r\n  MARCKET: { value: 3, name: '중고나라' }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst PaginationStyle = withStyles({\r\n  ul: {\r\n    justifyContent: 'center'\r\n  }\r\n})(Pagination);\r\n\r\nconst ListBoardComponent = () => {\r\n  const history = useNavigate();\r\n  const { state } = useLocation();\r\n  let pNum = 1;\r\n  const [pageNum, setNum] = useState(1);\r\n  // const [pNum, setNum] = useState(() => {\r\n  //   if (state != null) return state.pIdx;\r\n  //   return 1;\r\n  // });\r\n  const [paging, setPage] = useState({});\r\n  const [boards, setBoards] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n  useEffect(() => {\r\n    if (state !== null) pNum = state.pIdx;\r\n    // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\r\n    BoardService.getBoards(pNum, 10, 10)\r\n      .then((res) => {\r\n        console.log('Response : ', res);\r\n        return res;\r\n      })\r\n      .then((data) => {\r\n        if (data.status === 200) {\r\n          console.log('Data : ', data);\r\n          console.log('Data.data : ', data.data);\r\n          setNum(data.data.pagingData.currentPageNum);\r\n          pNum = data.data.pagingData.currentPageNum;\r\n          setPage(data.data.pagingData);\r\n          setBoards(data.data.list);\r\n          console.log(data.data.list);\r\n          console.log('pNum : ', pNum);\r\n        }\r\n      });\r\n  }, [state]);\r\n\r\n  // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n  // const listBoard = (pageNum) => {\r\n  //     console.log(\"listBoard\", pageNum);\r\n  //\r\n  //     console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\r\n  //     BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\r\n  //         setNum(res.data.pagingData.currentPageNum);\r\n  //         setPage(res.data.pagingData);\r\n  //         setBoards(res.data.list);\r\n  //     });\r\n  // }\r\n\r\n  const handleChange = (event, value) => {\r\n    // setNum(value);\r\n    pNum = value;\r\n    console.log('value : ', value);\r\n    console.log(paging);\r\n    history(`/app/board/${value}`, {\r\n      replace: false,\r\n      state: {\r\n        pIdx: pNum\r\n      }\r\n    });\r\n    // listBoard(value);\r\n  };\r\n\r\n  const getBoardCategory = (value) => {\r\n    console.log('getBoardCategory');\r\n    let name = 'Not Defined';\r\n\r\n    switch (value) {\r\n      case Category.NOTICE.value:\r\n        name = Category.NOTICE.name;\r\n        break;\r\n      case Category.FREEBOARD.value:\r\n        name = Category.FREEBOARD.name;\r\n        break;\r\n      case Category.STORAGE.value:\r\n        name = Category.STORAGE.name;\r\n        break;\r\n      case Category.MARCKET.value:\r\n        name = Category.MARCKET.name;\r\n        break;\r\n      default:\r\n        name = 'Not Defined';\r\n        break;\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const getBoardCreateDay = (value) => {\r\n    const createDay = new Intl.DateTimeFormat('ko-KR').format(\r\n      Date.parse(value)\r\n    );\r\n    return createDay;\r\n  };\r\n\r\n  // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n  const readBoard = (event) => {\r\n    // console.log(\"readBoard event\", idx);\r\n    event.preventDefault();\r\n    console.log('###################', event.target.getAttribute('value'));\r\n    const idx = event.target.getAttribute('value');\r\n    BoardService.getOneBoard(event.target.getAttribute('value'))\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(`/read-board/${res.data.idx}`);\r\n        history(`/app/read-board/${idx}`, {\r\n          replace: true,\r\n          state: {\r\n            idx: res.data.idx,\r\n            board: res.data\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n  // this.props.history.push('이동할 링크'); -> 일반적\r\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n  const createBoard = (event) => {\r\n    event.preventDefault();\r\n    const pIdx = '_create';\r\n    history('/app/create-board/_create', {\r\n      replace: true,\r\n      state: { idx: pIdx }\r\n    });\r\n  };\r\n  return (\r\n    <Box>\r\n      <h2 className=\"text-center\">게시판 목록</h2>\r\n      <br />\r\n      <Box className=\"row\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"btn btn-primary\"\r\n          startIcon={<CreateOutlinedIcon />}\r\n          onClick={(e) => createBoard(e)}\r\n        >\r\n          {' '}\r\n          글 작성\r\n        </Button>\r\n      </Box>\r\n      <Box className=\"table\" style={{ padding: '0 12px' }}>\r\n        <Table className=\"table table-striped table-bordered\">\r\n          <colgroup>\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"50%\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">번호</TableCell>\r\n              <TableCell align=\"center\">카테고리 </TableCell>\r\n              <TableCell align=\"center\">제목</TableCell>\r\n              <TableCell align=\"center\">작성자 </TableCell>\r\n              <TableCell align=\"center\">작성일 </TableCell>\r\n              <TableCell align=\"center\">조회수</TableCell>\r\n              <TableCell align=\"center\">좋아요수</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {boards.map((board) => (\r\n              <TableRow key={board.idx}>\r\n                <TableCell align=\"center\"> {board.idx} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {' '}\r\n                  {getBoardCategory(board.category)}{' '}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <a href=\"#\" value={board.idx} onClick={(e) => readBoard(e)}>\r\n                    {board.title}\r\n                  </a>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\"> {board.id} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {' '}\r\n                  {getBoardCreateDay(board.createtDay)}{' '}\r\n                </TableCell>\r\n                <TableCell align=\"center\"> {board.viewCnt} </TableCell>\r\n                <TableCell align=\"center\"> {board.likes} </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n      <Box className={classes.root}>\r\n        <Typography>\r\n          Page: {pageNum}\r\n          <PaginationStyle\r\n            count={paging.pageNumCountTotal}\r\n            page={pageNum}\r\n            onChange={handleChange}\r\n            value={pageNum}\r\n            name=\"pageNum\"\r\n          />\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListBoardComponent;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport BoardListComponent from '../components/board/ListBoardComponent';\r\n\r\nconst BoardList = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>게시판</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <BoardListComponent />\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default BoardList;\r\n","import { Box, Button, Typography } from '@material-ui/core';\r\n\r\nconst Materialroom = () => {\r\n  console.log('myHome');\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography\r\n          variant=\"h1\"\r\n          color=\"#5664d2\"\r\n          sx={{\r\n            m: 2,\r\n            mt: 8,\r\n            ml: 3,\r\n            display: 'flex'\r\n            // fontFamily: 'courrbd'\r\n          }}\r\n        >\r\n          TGIF\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h3\"\r\n          color=\"#5664d2\"\r\n          sx={{\r\n            mt: 3,\r\n            ml: 3,\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          Thanks(T)&nbsp;God(G)&nbsp;It(I)&#39;s&nbsp;Friday(F)\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box>\r\n        <Typography\r\n          variant=\"h4\"\r\n          color=\"#172B4D\"\r\n          fontFamily=\"rr\"\r\n          sx={{\r\n            m: 2,\r\n            mt: 9,\r\n            ml: 3,\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          사용자에게&nbsp;보다&nbsp;나은&nbsp;업무&nbsp;효율성을&nbsp;제공하기&nbsp;위해\r\n          <br />\r\n          전자&nbsp;출결,&nbsp;스케줄러,&nbsp;게시판을&nbsp;통한&nbsp;정보&nbsp;공유&nbsp;등&nbsp;기능을&nbsp;제공합니다.\r\n        </Typography>\r\n      </Box>\r\n      <Box>\r\n        <Button\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 150,\r\n            height: 55,\r\n            m: 2,\r\n            mt: 30,\r\n            ml: 30,\r\n            display: 'flex',\r\n            flexDirection: 'column'\r\n          }}\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          href=\"/register\"\r\n          variant=\"contained\"\r\n        >\r\n          회원가입\r\n        </Button>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Materialroom;\r\n","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport MyRoom from 'src/components/home/MyRoom';\r\n\r\nconst styles = {\r\n  backContainer: {\r\n    backgroundImage:\r\n      'url(https://raw.githubusercontent.com/Lee-sujung/gd-fe-image/5084143544336c3fb29d00c0c40630c4c9b0fe81/gdj_bg.png)',\r\n    backgroundSize: 'cover'\r\n  }\r\n};\r\n\r\nconst Home = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>홈</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3,\r\n        // backgroundImage: new URL('https://github.com/tekken3040/testRepos/blob/master/4.png?raw=true')\r\n        backgroundImage: new URL(\r\n          // 'https://github.com/tekken3040/testRepos/blob/master/KakaoTalk_20210616_011039856.png?raw=true'\r\n          'https://raw.githubusercontent.com/Lee-sujung/gd-fe-image/5084143544336c3fb29d00c0c40630c4c9b0fe81/gdj_bg.png'\r\n        )\r\n      }}\r\n      style={styles.backContainer}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <MyRoom />\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default Home;\r\n","import { SvgIcon } from '@material-ui/core';\r\n\r\nconst Facebook = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default Facebook;\r\n","import { SvgIcon } from '@material-ui/core';\r\n\r\nconst Google = (props) => (\r\n  <SvgIcon {...props}>\r\n    <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n  </SvgIcon>\r\n);\r\n\r\nexport default Google;\r\n","import { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport FacebookIcon from 'src/icons/Facebook';\r\nimport GoogleIcon from 'src/icons/Google';\r\nimport ApiService from 'src/ApiService';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  password: ''\r\n}\r\n\r\nconst errMassage = {\r\n  hidden: false,\r\n  Massage: '회원 정보가 잘못 입력되었습니다. 다시 입력해 주세요'\r\n}\r\n\r\nconst Login = () => {\r\n  // const navigate = useNavigate();\r\n\r\n  function loginUser(user) {\r\n    ApiService.loginUser(user)\r\n      .then(res => {\r\n        console.log(\"res\");\r\n        console.log(res.statusText);\r\n        console.log(res.data.accessToken);\r\n        cookies.set(\"accessToken\", res.data.accessToken);\r\n        cookies.set(\"tokenType\", res.data.tokenType)\r\n        console.log(res.data)\r\n        console.log(cookies.get(\"accessToken\"));\r\n        console.log(res.data.name)\r\n        cookies.set(\"memberIndex\", encodeURIComponent(res.data.memberIndex));\r\n        cookies.set(\"id\", encodeURIComponent(res.data.id));\r\n        cookies.set(\"name\", encodeURIComponent(res.data.name));\r\n        cookies.set(\"phone\", encodeURIComponent(res.data.phone));\r\n        cookies.set(\"zipcode\", encodeURIComponent(res.data.zipcode));\r\n        cookies.set(\"address\", encodeURIComponent(res.data.address));\r\n        cookies.set(\"addressDetail\", encodeURIComponent(res.data.address_detail));\r\n        cookies.set(\"birthday\", encodeURIComponent(res.data.birthday));\r\n        cookies.set(\"email\", (res.data.email), \"UTF-8\");\r\n        console.log((cookies.get(\"email\")))\r\n\r\n        alert(\"로그인에 성공했습니다.\")\r\n        window.location.replace(\"/\")\r\n        // navigate('/', { replace: true });\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(\"login err : \", err);\r\n        alert(\"회원정보가 잘못되었습니다.\");\r\n        errMassage.hidden = false;\r\n        cookies.remove(\"userId\");\r\n        window.location.assign(\"/login\")\r\n        // navigate('/', { replace: true });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{ initialValues }}\r\n            validationSchema={Yup.object().shape({\r\n              id: Yup.string().max(255).nullable(\"fasle\").required('아이디를 입력해 주세요'),\r\n              password: Yup.string().nullable(\"fasle\").max(255).required('비밀번호를 입력해 주세요')\r\n            })}\r\n            onSubmit={(values) => {\r\n              // navigate('/app/dashboard', { replace: true });\r\n              console.log(values);\r\n              loginUser(values);\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    로그인\r\n                  </Typography>\r\n                </Box>\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      startIcon={<FacebookIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      페이스북 계정으로 로그인\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      fullWidth\r\n                      startIcon={<GoogleIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      구글 계정으로 로그인\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  sx={{\r\n                    pb: 1,\r\n                    pt: 3\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    혹은 일반 아이디로 로그인\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.id && errors.id)}\r\n                  fullWidth\r\n                  helperText={touched.id && errors.id}\r\n                  label=\"아이디\"\r\n                  margin=\"normal\"\r\n                  name=\"id\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={values.id}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"비밀번호\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    로그인\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  hidden={errMassage.hidden}\r\n                  color=\"red\"\r\n                  value={errMassage.Massage} />\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  아직 계정이 없습니까?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    회원 가입\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst logout = () => {\r\n    cookies.remove(\"accessToken\");\r\n    cookies.remove(\"userId\");\r\n    cookies.remove(\"memberIndex\");\r\n    cookies.remove(\"id\");\r\n    cookies.remove(\"name\");\r\n    cookies.remove(\"phone\");\r\n    cookies.remove(\"zipcode\");\r\n    cookies.remove(\"address\");\r\n    cookies.remove(\"addressDetail\");\r\n    cookies.remove(\"birthday\");\r\n    cookies.remove(\"email\");\r\n    cookies.removeChangeListener(\r\n\r\n    )\r\n    alert(\"로그아웃에 성공했습니다.\")\r\n    window.location.replace(\"/\")\r\n}\r\n\r\n\r\nexport default logout;","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\n\r\nconst NotFound = () => {\r\n  const [ip] = useState('');\r\n\r\n  // 값이 정확히 들어오는지 확인하기 위한 콘솔 로그\r\n  console.log(ip);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>404 | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"h1\"\r\n          >\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n\r\n          </Typography>\r\n          <Box sx={{ textAlign: 'center' }}>\r\n            <img\r\n              alt=\"Under development\"\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n              style={{\r\n                marginTop: 50,\r\n                display: 'inline-block',\r\n                maxWidth: '100%',\r\n                width: 560\r\n              }}\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst ProductListToolbar = (props) => (\r\n  <Box {...props}>\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        justifyContent: 'flex-end'\r\n      }}\r\n    >\r\n      <Button>\r\n        Import\r\n      </Button>\r\n      <Button sx={{ mx: 1 }}>\r\n        Export\r\n      </Button>\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n      >\r\n        Add product\r\n      </Button>\r\n    </Box>\r\n    <Box sx={{ mt: 3 }}>\r\n      <Card>\r\n        <CardContent>\r\n          <Box sx={{ maxWidth: 500 }}>\r\n            <TextField\r\n              fullWidth\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SvgIcon\r\n                      fontSize=\"small\"\r\n                      color=\"action\"\r\n                    >\r\n                      <SearchIcon />\r\n                    </SvgIcon>\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n              placeholder=\"Search product\"\r\n              variant=\"outlined\"\r\n            />\r\n          </Box>\r\n        </CardContent>\r\n      </Card>\r\n    </Box>\r\n  </Box>\r\n);\r\n\r\nexport default ProductListToolbar;\r\n","import PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst ProductCard = ({ product, ...rest }) => (\r\n  <Card\r\n    sx={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      height: '100%'\r\n    }}\r\n    {...rest}\r\n  >\r\n    <CardContent>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          pb: 3\r\n        }}\r\n      >\r\n        <Avatar\r\n          alt=\"Product\"\r\n          src={product.media}\r\n          variant=\"square\"\r\n        />\r\n      </Box>\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        gutterBottom\r\n        variant=\"h4\"\r\n      >\r\n        {product.title}\r\n      </Typography>\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"textPrimary\"\r\n        variant=\"body1\"\r\n      >\r\n        {product.description}\r\n      </Typography>\r\n    </CardContent>\r\n    <Box sx={{ flexGrow: 1 }} />\r\n    <Divider />\r\n    <Box sx={{ p: 2 }}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{ justifyContent: 'space-between' }}\r\n      >\r\n        <Grid\r\n          item\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          <AccessTimeIcon color=\"action\" />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            display=\"inline\"\r\n            sx={{ pl: 1 }}\r\n            variant=\"body2\"\r\n          >\r\n            Updated 2hr ago\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex'\r\n          }}\r\n        >\r\n          <GetAppIcon color=\"action\" />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            display=\"inline\"\r\n            sx={{ pl: 1 }}\r\n            variant=\"body2\"\r\n          >\r\n            {product.totalDownloads}\r\n            {' '}\r\n            Downloads\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  </Card>\r\n);\r\n\r\nProductCard.propTypes = {\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","// 전자 결재 목록\r\n\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    createdAt: '27/03/2019',\r\n    description: 'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    media: '/static/images/products/product_1.png',\r\n    title: 'Dropbox',\r\n    totalDownloads: '594'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '31/03/2019',\r\n    description: 'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    media: '/static/images/products/product_2.png',\r\n    title: 'Medium Corporation',\r\n    totalDownloads: '625'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '03/04/2019',\r\n    description: 'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    media: '/static/images/products/product_3.png',\r\n    title: 'Slack',\r\n    totalDownloads: '857'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    media: '/static/images/products/product_4.png',\r\n    title: 'Lyft',\r\n    totalDownloads: '406'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'GitHub is a web-based hosting service for version control of code using Git.',\r\n    media: '/static/images/products/product_5.png',\r\n    title: 'GitHub',\r\n    totalDownloads: '835'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    createdAt: '04/04/2019',\r\n    description: 'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    media: '/static/images/products/product_6.png',\r\n    title: 'Squarespace',\r\n    totalDownloads: '835'\r\n  }\r\n];\r\n","import { Helmet } from 'react-helmet';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  Pagination\r\n} from '@material-ui/core';\r\nimport ProductListToolbar from 'src/components/product/ProductListToolbar';\r\nimport ProductCard from 'src/components/product/ProductCard';\r\nimport products from 'src/__mocks__/products';\r\n\r\nconst ProductList = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Products | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth={false}>\r\n        <ProductListToolbar />\r\n        <Box sx={{ pt: 3 }}>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            {products.map((product) => (\r\n              <Grid\r\n                item\r\n                key={product.id}\r\n                lg={4}\r\n                md={6}\r\n                xs={12}\r\n              >\r\n                <ProductCard product={product} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            pt: 3\r\n          }}\r\n        >\r\n          <Pagination\r\n            color=\"primary\"\r\n            count={3}\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default ProductList;\r\n","import axios from 'axios'; // 액시오스\r\n\r\n// const USER_API_BASE_URL = \"http://localhost:8080/users\";\r\n\r\nclass ApiService {\r\n  /*\r\n      fetchUsers() {\r\n          return axios.get(USER_API_BASE_URL);\r\n      }\r\n  \r\n      fetchUserByID(userID) {\r\n          return axios.get(USER_API_BASE_URL + '/' + userID);\r\n      }\r\n  \r\n      deleteUser(userID) {\r\n          return axios.delete(USER_API_BASE_URL + '/' + userID);\r\n      }\r\n  */\r\n  addUser = (user) => {\r\n    console.log('addUser In');\r\n    return axios.post('users', user);\r\n  };\r\n  /*\r\n        editUser(user) {\r\n            return axios.put(USER_API_BASE_URL + '/' + user.id, user);\r\n        }\r\n        */\r\n}\r\n\r\nexport default new ApiService();\r\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// import { useHistory } from \"react-router\";\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n// import PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ApiService from '../service/ApiService';\r\n\r\n// const history = useHistory();\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  password: '',\r\n  name: '',\r\n  zipcode: '',\r\n  address: '',\r\n  address_detail: '',\r\n  phone: '',\r\n  email: '',\r\n  birthday: '',\r\n  policy: false\r\n};\r\n\r\nconst Register = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  function saveUser(user) {\r\n    ApiService.addUser(user)\r\n      .then(res => {\r\n        console.log(res.statusText);\r\n        // history.push('/');\r\n        navigate('/app/home', { replace: true });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"saveUser() 에러\", err);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Register | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                id: Yup.string().max(255).required('아아디를 입력해 주세요'),\r\n                password: Yup.string().max(255).required('비밀번호를 입력해 주세요'),\r\n                name: Yup.string().max(255).required('이름을 입력해 주세요'),\r\n                zipcode: Yup.string().max(255).required('우편번호를 입력해 주세요'),\r\n                address: Yup.string().max(255).required('주소를 입력해 주세요'),\r\n                address_detail: Yup.string().max(255).required('상세 주고를 입력해 주세요'),\r\n                phone: Yup.string().max(255).required('전화번호를 입력해 주세요'),\r\n                email: Yup.string().email('유효한 이메일이 아닙니다').max(255).required('이메일을 입력해 주세요'),\r\n                birthday: Yup.date().default(() => new Date()),\r\n                policy: Yup.boolean().oneOf([true], '체크해주세요')\r\n              })\r\n            }\r\n            onSubmit={(values) => {\r\n              // navigate('/app/dashboard', { replace: true });\r\n              console.log(values);\r\n              saveUser(values);\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 1, mt: 5 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    회원 가입\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.id && errors.id)}\r\n                  fullWidth\r\n                  helperText={touched.id && errors.id}\r\n                  label=\"아이디\"\r\n                  margin=\"normal\"\r\n                  name=\"id\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.id}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"비밀번호\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.name && errors.name)}\r\n                  fullWidth\r\n                  helperText={touched.name && errors.name}\r\n                  label=\"이름\"\r\n                  margin=\"normal\"\r\n                  name=\"name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.zipcode && errors.zipcode)}\r\n                  fullWidth\r\n                  helperText={touched.zipcode && errors.zipcode}\r\n                  label=\"우편번호\"\r\n                  margin=\"normal\"\r\n                  name=\"zipcode\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.zipcode}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.address && errors.address)}\r\n                  fullWidth\r\n                  helperText={touched.address && errors.address}\r\n                  label=\"주소\"\r\n                  margin=\"normal\"\r\n                  name=\"address\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.address}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.address_detail && errors.address_detail)}\r\n                  fullWidth\r\n                  helperText={touched.address_detail && errors.address_detail}\r\n                  label=\"상세 주소\"\r\n                  margin=\"normal\"\r\n                  name=\"address_detail\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.address_detail}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.phone && errors.phone)}\r\n                  fullWidth\r\n                  helperText={touched.phone && errors.phone}\r\n                  label=\"전화번호\"\r\n                  margin=\"normal\"\r\n                  name=\"phone\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.phone}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  // InputLabelProps={{shrink : true}}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"이메일\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  InputLabelProps={{ shrink: true }}\r\n                  error={Boolean(touched.birthday && errors.birthday)}\r\n                  fullWidth\r\n                  helperText={touched.birthday && errors.birthday}\r\n                  label=\"생년월일\"\r\n                  margin=\"normal\"\r\n                  name=\"birthday\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"date\"\r\n                  value={values.birthday}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    alignItems: 'center',\r\n                    display: 'flex',\r\n                    ml: -1\r\n                  }}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    확인했습니다.\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      이용약관\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    회원가입\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  이미 계정이 있습니까?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    로그인\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst SettingsNotifications = (props) => (\r\n  <form {...props}>\r\n    <Card>\r\n      <CardHeader\r\n        subheader=\"Manage the notifications\"\r\n        title=\"Notifications\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={6}\r\n          wrap=\"wrap\"\r\n        >\r\n          <Grid\r\n            item\r\n            md={4}\r\n            sm={6}\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column'\r\n            }}\r\n            xs={12}\r\n          >\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              Notifications\r\n            </Typography>\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Email\"\r\n            />\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Push Notifications\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"Text Messages\"\r\n            />\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Phone calls\"\r\n            />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            md={4}\r\n            sm={6}\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'column'\r\n            }}\r\n            xs={12}\r\n          >\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              Messages\r\n            </Typography>\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Email\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox />}\r\n              label=\"Push Notifications\"\r\n            />\r\n            <FormControlLabel\r\n              control={(\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  defaultChecked\r\n                />\r\n              )}\r\n              label=\"Phone calls\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Save\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  </form>\r\n);\r\n\r\nexport default SettingsNotifications;\r\n","import { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst SettingsPassword = (props) => {\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form {...props}>\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            p: 2\r\n          }}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SettingsPassword;","import { Helmet } from 'react-helmet';\r\nimport { Box, Container } from '@material-ui/core';\r\nimport SettingsNotifications from '../components/settings/SettingsNotifications';\r\nimport SettingsPassword from '../components/settings/SettingsPassword';\r\n\r\nconst SettingsView = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>Settings | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        minHeight: '100%',\r\n        py: 3\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <SettingsNotifications />\r\n        <Box sx={{ pt: 3 }}>\r\n          <SettingsPassword />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n);\r\n\r\nexport default SettingsView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n// import { Helmet } from 'react-helmet';\r\n// import { Box, Container } from '@material-ui/core';\r\n\r\n// const TimeManagement = () => (\r\n//   <Helmet>\r\n//     <title>근태관리</title>\r\n//   </Helmet>\r\n// );\r\n\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7),\r\n  createData('Donut', 452, 25.0),\r\n  createData('Eclair', 262, 16.0),\r\n  createData('Frozen yoghurt', 159, 6.0),\r\n  createData('Gingerbread', 356, 16.0),\r\n  createData('Honeycomb', 408, 3.2),\r\n  createData('Ice cream sandwich', 237, 9.0),\r\n  createData('Jelly Bean', 375, 0.0),\r\n  createData('KitKat', 518, 26.0),\r\n  createData('Lollipop', 392, 0.2),\r\n  createData('Marshmallow', 318, 0),\r\n  createData('Nougat', 360, 19.0),\r\n  createData('Oreo', 437, 18.0),\r\n].sort((a, b) => (a.calories < b.calories ? -1 : 1));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.name}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.calories}\r\n              </TableCell>\r\n              <TableCell style={{ width: 160 }} align=\"right\">\r\n                {row.fat}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\n// import TableCell from '@material-ui/core/TableCell';\r\nimport { darken, fade, lighten } from '@material-ui/core/styles/colorManipulator';\r\n// import Typography from '@material-ui/core/Typography';\r\nimport { ViewState, EditingState } from '@devexpress/dx-react-scheduler';\r\n// import classNames from 'clsx';\r\nimport {\r\n  Scheduler,\r\n  MonthView,\r\n  Appointments,\r\n  Toolbar,\r\n  DateNavigator,\r\n  AppointmentTooltip,\r\n  AppointmentForm,\r\n  EditRecurrenceMenu,\r\n  Resources,\r\n  DragDropProvider,\r\n} from '@devexpress/dx-react-scheduler-material-ui';\r\n// import WbSunny from '@material-ui/icons/WbSunny';\r\n// import FilterDrama from '@material-ui/icons/FilterDrama';\r\n// import Opacity from '@material-ui/icons/Opacity';\r\n// import ColorLens from '@material-ui/icons/ColorLens';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n// import { owners } from '../src/demo-data/tasks';\r\nimport { color } from '../calendar-data/tasks';\r\n// import { Helmet } from 'react-helmet';\r\n\r\n// const Calendarpage = () => (\r\n//   <Helmet>\r\n//     <title>캘린더</title>\r\n//   </Helmet>\r\n// )\r\n\r\n\r\nconst dateformat = (cTime) => {\r\n  console.log(cTime);\r\n  const dateTime = new Intl.DateTimeFormat('ko-KR').format(cTime);\r\n  return dateTime;\r\n}\r\n\r\n// 일정 수정 작업 데모 버전\r\nconst appointments = [\r\n  //   {\r\n  //     id: 0,\r\n  //     title: '제목을 입력해주세요',\r\n  //     startDate: new Date(2021, 6, 9, 9, 30),\r\n  //     endDate: new Date(2021, 6, 23, 11, 30),-'\r\n  //     ownerId: 1,\r\n  //   }, \r\n  //   {\r\n  //     id: 1,\r\n  //     title: 'Monthly Planning',\r\n  //     startDate: new Date(2018, 5, 28, 9, 30),\r\n  //     endDate: new Date(2018, 5, 28, 11, 30),\r\n  //     ownerId: 1,\r\n  //   },{\r\n  //     id: 2,\r\n  //     title: 'Recruiting students',\r\n  //     startDate: new Date(2018, 6, 9, 12, 0),\r\n  //     endDate: new Date(2018, 6, 9, 13, 0),\r\n  //     ownerId: 2,\r\n  //   }, {\r\n  //     id: 3,\r\n  //     title: 'Oil Painting',\r\n  //     startDate: new Date(2018, 6, 18, 14, 30),\r\n  //     endDate: new Date(2018, 6, 18, 15, 30),\r\n  //     ownerId: 2,\r\n  //   }, {\r\n  //     id: 4,\r\n  //     title: 'Open Day',\r\n  //     startDate: new Date(2018, 6, 20, 12, 0),\r\n  //     endDate: new Date(2018, 6, 20, 13, 35),\r\n  //     ownerId: 6,\r\n  //   }, {\r\n  //     id: 5,\r\n  //     title: 'Watercolor Landscape',\r\n  //     startDate: new Date(2018, 6, 6, 13, 0),\r\n  //     endDate: new Date(2018, 6, 6, 14, 0),\r\n  //     rRule: 'FREQ=WEEKLY;BYDAY=FR;UNTIL=20180816',\r\n  //     exDate: '20180713T100000Z,20180727T100000Z',\r\n  //     ownerId: 2,\r\n  //   }, {\r\n  //     id: 6,\r\n  //     title: 'Meeting of Instructors',\r\n  //     startDate: new Date(2018, 5, 28, 12, 0),\r\n  //     endDate: new Date(2018, 5, 28, 12, 30),\r\n  //     rRule: 'FREQ=WEEKLY;BYDAY=TH;UNTIL=20180727',\r\n  //     exDate: '20180705T090000Z,20180719T090000Z',\r\n  //     ownerId: 5,\r\n  //   }, {\r\n  //     id: 7,\r\n  //     title: 'Oil Painting for Beginners',\r\n  //     startDate: new Date(2018, 6, 3, 11, 0),\r\n  //     endDate: new Date(2018, 6, 3, 12, 0),\r\n  //     rRule: 'FREQ=WEEKLY;BYDAY=TU;UNTIL=20180801',\r\n  //     exDate: '20180710T080000Z,20180724T080000Z',\r\n  //     ownerId: 3,\r\n  //   }, {\r\n  //     id: 8,\r\n  //     title: 'Watercolor Workshop',\r\n  //     startDate: new Date(2018, 6, 9, 11, 0),\r\n  //     endDate: new Date(2018, 6, 9, 12, 0),\r\n  //     ownerId: 3,\r\n  //   },\r\n];\r\n\r\nconst resources = [{\r\n  fieldName: 'colorId',\r\n  title: '컬러',\r\n  instances: color,\r\n  // default: {id=5}\r\n}];\r\n\r\nconst getBorder = theme => (`1px solid ${theme.palette.type === 'light'\r\n    ? lighten(fade(theme.palette.divider, 1), 0.88)\r\n    : darken(fade(theme.palette.divider, 1), 0.68)\r\n  }`);\r\n\r\nconst DayScaleCell = props => (\r\n  <MonthView.DayScaleCell {...props} style={{ textAlign: 'center', fontWeight: 'bold' }} />\r\n);\r\n\r\nconst styles = theme => ({\r\n  cell: {\r\n    color: '#78909C!important',\r\n    position: 'relative',\r\n    userSelect: 'none',\r\n    verticalAlign: 'top',\r\n    padding: 0,\r\n    height: 100,\r\n    borderLeft: getBorder(theme),\r\n    '&:first-child': {\r\n      borderLeft: 'none',\r\n    },\r\n    '&:last-child': {\r\n      paddingRight: 0,\r\n    },\r\n    'tr:last-child &': {\r\n      borderBottom: 'none',\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n    },\r\n    '&:focus': {\r\n      backgroundColor: fade(theme.palette.primary.main, 0.15),\r\n      outline: 0,\r\n    },\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    padding: '0.5em',\r\n    textAlign: 'center',\r\n  },\r\n  sun: {\r\n    color: '#FFEE58',\r\n  },\r\n  cloud: {\r\n    color: '#90A4AE',\r\n  },\r\n  rain: {\r\n    color: '#4FC3F7',\r\n  },\r\n  sunBack: {\r\n    backgroundColor: '#FFFDE7',\r\n  },\r\n  cloudBack: {\r\n    backgroundColor: '#ECEFF1',\r\n  },\r\n  rainBack: {\r\n    backgroundColor: '#E1F5FE',\r\n  },\r\n  opacity: {\r\n    opacity: '0.5',\r\n  },\r\n  appointment: {\r\n    borderRadius: '10px',\r\n    '&:hover': {\r\n      opacity: 0.6,\r\n    },\r\n  },\r\n  apptContent: {\r\n    '&>div>div': {\r\n      whiteSpace: 'normal !important',\r\n      lineHeight: 1.2,\r\n    },\r\n  },\r\n  flexibleSpace: {\r\n    flex: 'none',\r\n  },\r\n  flexContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  tooltipContent: {\r\n    padding: theme.spacing(3, 1),\r\n    paddingTop: 0,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxSizing: 'border-box',\r\n    width: '400px',\r\n  },\r\n  tooltipText: {\r\n    ...theme.typography.body2,\r\n    display: 'inline-block',\r\n  },\r\n  title: {\r\n    ...theme.typography.h6,\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  icon: {\r\n    color: theme.palette.action.active,\r\n    verticalAlign: 'middle',\r\n  },\r\n  circle: {\r\n    width: theme.spacing(4.5),\r\n    height: theme.spacing(4.5),\r\n    verticalAlign: 'super',\r\n  },\r\n  textCenter: {\r\n    textAlign: 'center',\r\n  },\r\n  dateAndTitle: {\r\n    lineHeight: 1.1,\r\n  },\r\n  titleContainer: {\r\n    paddingBottom: theme.spacing(2),\r\n  },\r\n  container: {\r\n    paddingBottom: theme.spacing(1.5),\r\n  },\r\n});\r\n\r\n// const WeatherIcon = ({ classes, id }) => {\r\n//   switch (id) {\r\n//     case 0:\r\n//       return <Opacity className={classes.rain} fontSize=\"large\" />;\r\n//     case 1:\r\n//       return <WbSunny className={classes.sun} fontSize=\"large\" />;\r\n//     case 2:\r\n//       return <FilterDrama className={classes.cloud} fontSize=\"large\" />;\r\n//     default:\r\n//       return null;\r\n//   }\r\n// };\r\n\r\n// #FOLD_BLOCK\r\n// const CellBase = React.memo(({\r\n//   classes,\r\n//   startDate,\r\n//   formatDate,\r\n//   otherMonth,\r\n//   // #FOLD_BLOCK\r\n// }) => {\r\n//   const iconId = Math.abs(Math.floor(Math.sin(startDate.getDate()) * 10) % 3);\r\n//   const isFirstMonthDay = startDate.getDate() === 1;\r\n//   const formatOptions = isFirstMonthDay\r\n//     ? { day: 'numeric', month: 'long' }\r\n//     : { day: 'numeric' };\r\n//   return (\r\n//     <TableCell\r\n//       tabIndex={0}\r\n//       className={classNames({\r\n//         [classes.cell]: true,\r\n//         [classes.rainBack]: iconId === 0,\r\n//         [classes.sunBack]: iconId === 1,\r\n//         [classes.cloudBack]: iconId === 2,\r\n//         [classes.opacity]: otherMonth,\r\n//       })}\r\n//     >\r\n//       <div className={classes.content}>\r\n//         <WeatherIcon classes={classes} id={iconId} />\r\n//       </div>\r\n//       <div className={classes.text}>\r\n//         {formatDate(startDate, formatOptions)}\r\n//       </div>\r\n//     </TableCell>\r\n//   );\r\n// });\r\n\r\n// const TimeTableCell = withStyles(styles, { name: 'Cell' })(CellBase);\r\n\r\nconst Appointment = withStyles(styles, { name: 'Appointment' })(({ classes, ...restProps }) => (\r\n  <Appointments.Appointment\r\n    {...restProps}\r\n    className={classes.appointment}\r\n  />\r\n));\r\n\r\nconst AppointmentContent = withStyles(styles, { name: 'AppointmentContent' })(({ classes, ...restProps }) => (\r\n  <Appointments.AppointmentContent {...restProps} className={classes.apptContent} />\r\n));\r\n\r\nconst FlexibleSpace = withStyles(styles, { name: 'ToolbarRoot' })(({ classes, ...restProps }) => (\r\n  <Toolbar.FlexibleSpace {...restProps} className={classes.flexibleSpace}>\r\n    {/* <div className={classes.flexContainer}>\r\n      <ColorLens fontSize=\"large\" htmlColor=\"#FF7043\" />\r\n      <Typography variant=\"h5\" style={{ marginLeft: '10px' }}>일정 기록표</Typography>\r\n    </div> */}\r\n  </Toolbar.FlexibleSpace>\r\n));\r\n\r\nexport default class Demo extends React.PureComponent {\r\n  // #FOLD_BLOCK\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: appointments,\r\n    };\r\n\r\n    this.commitChanges = this.commitChanges.bind(this);\r\n  }\r\n\r\n  // #FOLD_BLOCK\r\n  commitChanges({ added, changed, deleted }) {\r\n    this.setState((state) => {\r\n      let { data } = state;\r\n      if (added) {\r\n        const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\r\n        data = [...data, { id: startingAddedId, ...added }];\r\n      }\r\n      if (changed) {\r\n        data = data.map(appointment => (\r\n          changed[appointment.id] ? { ...appointment, ...changed[appointment.id] } : appointment));\r\n      }\r\n      if (deleted !== undefined) {\r\n        data = data.filter(appointment => appointment.id !== deleted);\r\n      }\r\n      return { data };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n\r\n    return (\r\n      <Paper>\r\n        <Scheduler\r\n          data={data}\r\n        >\r\n          <EditingState\r\n            onCommitChanges={this.commitChanges}\r\n\r\n          />\r\n          <ViewState\r\n            defaultCurrentDate={\r\n              dateformat(new Date())\r\n            }\r\n          />\r\n\r\n          <MonthView\r\n            // timeTableCellComponent={TimeTableCell} \r\n            dayScaleCellComponent={DayScaleCell}\r\n          />\r\n\r\n          <Appointments\r\n            appointmentComponent={Appointment}\r\n            appointmentContentComponent={AppointmentContent}\r\n          />\r\n          <Resources\r\n            data={resources}\r\n          />\r\n\r\n          <Toolbar\r\n            flexibleSpaceComponent={FlexibleSpace}\r\n          />\r\n          <DateNavigator />\r\n\r\n          <EditRecurrenceMenu />\r\n          <AppointmentTooltip\r\n            showCloseButton\r\n            showDeleteButton\r\n            showOpenButton\r\n          />\r\n          <AppointmentForm />\r\n          <DragDropProvider />\r\n        </Scheduler>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n","import { green, deepOrange, lightBlue } from '@material-ui/core/colors';\r\n\r\n// export const tasks = [\r\n//   {\r\n//     title: 'Recall Rebate Form',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-17T09:30',\r\n//     endDate: '2018-04-17T10:00',\r\n//   },\r\n//   {\r\n//     title: 'Create Report on Customer Feedback',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-17T10:30',\r\n//     endDate: '2018-04-17T12:00',\r\n//   },\r\n//   {\r\n//     title: 'Review Customer Feedback Report',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-17T12:15',\r\n//     endDate: '2018-04-17T13:30',\r\n//   },\r\n//   {\r\n//     title: 'Google AdWords Strategy',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-20T09:30',\r\n//     endDate: '2018-04-20T11:30',\r\n//   },\r\n//   {\r\n//     title: 'Rollout of New Website and Marketing Brochures',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-19T10:30',\r\n//     endDate: '2018-04-19T12:30',\r\n//   },\r\n//   {\r\n//     title: 'Create New Shipping Return Labels',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-19T13:00',\r\n//     endDate: '2018-04-19T14:30',\r\n//   },\r\n//   {\r\n//     title: 'Update Sales Strategy Documents',\r\n//     priorityId: 1,\r\n//     startDate: '2018-04-18T11:00',\r\n//     endDate: '2018-04-18T11:30',\r\n//   },\r\n//   {\r\n//     title: 'Website Re-Design Plan',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-27T09:30',\r\n//     endDate: '2018-04-27T11:30',\r\n//     allDay: true,\r\n//   },\r\n//   {\r\n//     title: 'Book Flights to San Fran for Sales Trip',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-27T12:00',\r\n//     endDate: '2018-04-27T13:00',\r\n//   },\r\n//   {\r\n//     title: 'Install New Router in Dev Room',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-27T14:30',\r\n//     endDate: '2018-04-27T15:30',\r\n//   },\r\n//   {\r\n//     title: 'Approve Personal Computer Upgrade Plan',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-23T10:00',\r\n//     endDate: '2018-04-23T11:00',\r\n//   },\r\n//   {\r\n//     title: 'Final Budget Review',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-23T12:00',\r\n//     endDate: '2018-04-23T13:35',\r\n//   },\r\n//   {\r\n//     title: 'New Brochures',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-23T14:30',\r\n//     endDate: '2018-04-23T15:45',\r\n//   },\r\n//   {\r\n//     title: 'Install New Database',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-24T09:45',\r\n//     endDate: '2018-04-24T11:15',\r\n//   },\r\n//   {\r\n//     title: 'Approve New Online Marketing Strategy',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-24T12:00',\r\n//     endDate: '2018-04-24T14:00',\r\n//   },\r\n//   {\r\n//     title: 'Upgrade Personal Computers',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-24T15:15',\r\n//     endDate: '2018-04-24T16:30',\r\n//   },\r\n//   {\r\n//     title: 'Customer Workshop',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-25T11:00',\r\n//     endDate: '2018-04-25T12:00',\r\n//     allDay: true,\r\n//   },\r\n//   {\r\n//     title: 'Prepare 2019 Marketing Plan',\r\n//     priorityId: 1,\r\n//     startDate: '2018-04-25T11:00',\r\n//     endDate: '2018-04-25T13:30',\r\n//   },\r\n//   {\r\n//     title: 'Brochure Design Review',\r\n//     priorityId: 1,\r\n//     startDate: '2018-04-25T14:00',\r\n//     endDate: '2018-04-25T15:30',\r\n//   },\r\n//   {\r\n//     title: 'Create Icons for Website',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-26T10:00',\r\n//     endDate: '2018-04-26T11:30',\r\n//   },\r\n//   {\r\n//     title: 'Upgrade Server Hardware',\r\n//     priorityId: 2,\r\n//     startDate: '2018-04-26T14:30',\r\n//     endDate: '2018-04-26T16:00',\r\n//   },\r\n//   {\r\n//     title: 'Submit New Website Design',\r\n//     priorityId: 1,\r\n//     startDate: '2018-04-26T16:30',\r\n//     endDate: '2018-04-26T18:00',\r\n//   },\r\n//   {\r\n//     title: 'Launch New Website',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-26T12:20',\r\n//     endDate: '2018-04-26T14:00',\r\n//   },\r\n//   {\r\n//     title: 'Non-Compete Agreements',\r\n//     priorityId: 1,\r\n//     startDate: '2018-04-30T12:20',\r\n//     endDate: '2018-04-30T13:00',\r\n//   },\r\n//   {\r\n//     title: 'Approve Hiring of John Jeffers',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-30T13:30',\r\n//     endDate: '2018-04-30T14:00',\r\n//   },\r\n//   {\r\n//     title: 'Review Training Course for any Ommissions',\r\n//     priorityId: 3,\r\n//     startDate: '2018-04-30T09:30',\r\n//     endDate: '2018-04-30T10:00',\r\n//   },\r\n//   {\r\n//     title: 'Update NDA Agreement',\r\n//     priorityId: 2,\r\n//     startDate: '2018-05-01T12:00',\r\n//     endDate: '2018-05-01T15:00',\r\n//   },\r\n//   {\r\n//     title: 'Update Employee Files with New NDA',\r\n//     priorityId: 2,\r\n//     startDate: '2018-05-02T09:00',\r\n//     endDate: '2018-05-02T10:00',\r\n//   },\r\n//   {\r\n//     title: 'Submit Questions Regarding New NDA',\r\n//     priorityId: 2,\r\n//     startDate: '2018-05-02T10:15',\r\n//     endDate: '2018-05-02T10:45',\r\n//   },\r\n//   {\r\n//     title: 'Submit Signed NDA',\r\n//     priorityId: 2,\r\n//     startDate: '2018-05-02T10:45',\r\n//     endDate: '2018-05-02T11:15',\r\n//   },\r\n//   {\r\n//     title: 'Review Revenue Projections',\r\n//     priorityId: 1,\r\n//     startDate: '2018-05-02T12:00',\r\n//     endDate: '2018-05-02T12:30',\r\n//   },\r\n//   {\r\n//     title: 'Comment on Revenue Projections',\r\n//     priorityId: 1,\r\n//     startDate: '2018-05-02T13:00',\r\n//     endDate: '2018-05-02T14:00',\r\n//   },\r\n//   {\r\n//     title: 'Provide New Health Insurance Docs',\r\n//     priorityId: 2,\r\n//     startDate: '2018-05-03T10:00',\r\n//     endDate: '2018-05-03T11:30',\r\n//   },\r\n//   {\r\n//     title: 'Review Changes to Health Insurance Coverage',\r\n//     priorityId: 2,\r\n//     startDate: '2018-05-03T11:45',\r\n//     endDate: '2018-05-03T13:30',\r\n//   },\r\n// ];\r\n\r\nexport const priorities = [\r\n  { id: 1, text: 'Low Priority', color: green },\r\n  { id: 2, text: 'Medium Priority', color: lightBlue },\r\n  { id: 3, text: 'High Priority', color: deepOrange },\r\n];\r\n\r\n// export const owners = [\r\nexport const color = [\r\n\r\n  {\r\n    text: '빨강',\r\n    id: 1,\r\n    color: '#f9bfb2',\r\n  }, {\r\n    text: '주황',\r\n    id: 2,\r\n    color: '#fdd1a0',\r\n  }, {\r\n    text: '노랑',\r\n    id: 3,\r\n    color: '#fdf6a0',\r\n  }, {\r\n    text: '초록',\r\n    id: 4,\r\n    color: '#b7f58e',\r\n  }, {\r\n    text: '파랑',\r\n    id: 5,\r\n    color: '#bbe5fb',\r\n  }, {\r\n    text: '보라',\r\n    id: 6,\r\n    color: '#cfd3fb',\r\n  },\r\n\r\n\r\n];\r\n","import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    // Container,\r\n    Grid,\r\n    // Link,\r\n    TextField,\r\n    Divider,\r\n    CardContent,\r\n    CardHeader,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport BoardService from '../../service/BoardService';\r\n\r\nconst ReadBoardComponent = () => {\r\n    const history = useNavigate();\r\n    const { state } = useLocation();\r\n    // const { pIdx, pBoard } = state;\r\n    const pIdx = state.idx;\r\n    const pBoard = state.board;\r\n\r\n    // # 2. 페이지가 로딩될때 api와 통신하여 글 객체를 가져온다\r\n    // useEffect(() => {\r\n    //     BoardService.getOneBoard(idx).then(res => {\r\n    //         setIdx(res.data.getIdx);\r\n    //         setBoard(res.data);\r\n    //         console.log(idx);\r\n    //         console.log(board);\r\n    //         console.log(res);\r\n    //     });\r\n    // }, []);\r\n\r\n    // # 3. 파라미터 값에 따라 페이지에 표시할 내용을 변경 / 게시판 타입별로 표시를 다르게 하기\r\n    const returnBoardType = (categoryNo) => {\r\n        let category = null;\r\n        if (categoryNo === 0) {\r\n            category = \"공지사항\";\r\n\r\n        } else if (categoryNo === 1) {\r\n            category = \"자유게시판\";\r\n\r\n        } else if (categoryNo === 2) {\r\n            category = \"자료실\";\r\n\r\n        } else {\r\n            category = \"사고팝니다\";\r\n        }\r\n\r\n        return (\r\n            <Typography\r\n                variant=\"h4\"\r\n                gutterBottom>\r\n                카테고리 : {category}\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    const returnDate = (cTime) => {\r\n        console.log(\"생성일 : \", { cTime });\r\n        // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat (date format 링크)\r\n        console.log(new Intl.DateTimeFormat('ko-KR').format(cTime));\r\n        return (\r\n            <div className=\"row\">\r\n                <h3>생성일 : [ {new Intl.DateTimeFormat('ko-KR').format(cTime)} ] </h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // # 4. 글 목록으로 이동하는 함수를 정의 \r\n    const goToList = () => {\r\n        history('/app/board/1', { replace: true });\r\n    }\r\n\r\n    const goToUpdate = (event) => {\r\n        event.preventDefault();\r\n        // this.props.history.push(`/create-board/${this.state.index}`);\r\n        history(`/app/create-board/${pIdx}`, {\r\n            replace: true,\r\n            state: {\r\n                idx: pIdx,\r\n                board: pBoard\r\n            }\r\n        });\r\n    }\r\n\r\n    const deleteView = async function () {\r\n        if (window.confirm(\"정말로 글을 삭제하시겠습니까?\")) {\r\n            // BoardService.deleteBoard(this.state.index).then( res => {\r\n            BoardService.deleteBoard(pIdx).then(res => {\r\n                console.log(\"delete result => \", JSON.stringify(res));\r\n                if (res.status === 200) {\r\n                    history('/app/board/1');\r\n                } else {\r\n                    alert(\"글 삭제가 실패했습니다.\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const textFieldStyle = {\r\n        marginTop: 8,\r\n        width: '80%',\r\n        height: \"550px  \"\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader\r\n                    variant=\"h2\"\r\n                    subheader=\"게시글 보기\"\r\n                    title=\"게시글\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Grid >\r\n                        <Typography\r\n                            variant=\"h3\"\r\n                            marginBottom=\"25px\"\r\n                        >\r\n                            제목 : {pBoard.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid\r\n                        marginBottom=\"50px\">\r\n                        <Typography\r\n                            marginBottom=\"25px\"\r\n                            marginRight=\"350px\"\r\n                            align=\"right\">\r\n                            {returnBoardType(pBoard.category)}\r\n                        </Typography>\r\n                        <TextField\r\n                            defaultValue={pBoard.content}\r\n                            label=\"내용\"\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            size=\"medium\"\r\n                            margin=\"normal\"\r\n                            multiline=\"true\"\r\n                            rows=\"20\"\r\n                            rowsMax=\"20\"\r\n                            style={textFieldStyle}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        marginRight=\"300px\"\r\n                        marginBottom=\"50px\">\r\n                        <Typography\r\n                            align=\"right\">\r\n                            {returnDate(pBoard.createdTime, pBoard.updatedTime)}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid\r\n                        marginRight=\"300px\"\r\n                        align=\"right\">\r\n                        <Button\r\n                            onClick={goToList}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            글 목록으로 이동\r\n                        </Button>\r\n                        <Button\r\n                            onClick={goToUpdate}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            글 수정\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => deleteView()}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            글 삭제\r\n                        </Button>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card >\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ReadBoardComponent;","import {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Divider,\r\n    CardContent,\r\n    Select,\r\n    FormControl,\r\n    InputLabel,\r\n    MenuItem,\r\n    Typography,\r\n    TextField,\r\n    Grid\r\n} from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport BoardService from '../../service/BoardService';\r\n\r\n\r\nconst CreateBoardComponent = () => {\r\n    const history = useNavigate();\r\n    const [idx, setIdx] = useState();\r\n    const [pCategory, setCategory] = useState(1);\r\n    const [pTitle, setTitle] = useState('');\r\n    const [pContent, setContent] = useState('');\r\n    const { state } = useLocation();\r\n    const pIdx = state.idx;\r\n\r\n    useEffect(() => {\r\n        setIdx(pIdx);\r\n        if (pIdx !== '_create') {\r\n\r\n            BoardService.getOneBoard(pIdx).then((res) => {\r\n                const board = res.data;\r\n                console.log(`board => ${JSON.stringify(board)}`);\r\n                setIdx(board.idx);\r\n                setCategory(board.category);\r\n                setTitle(board.title);\r\n                setContent(board.content);\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const getTitle = () => {\r\n        if (idx === '_create') {\r\n            // if (this.state.index === '_create') {\r\n            return <h3 className=\"text-center\">새글을 작성해주세요</h3>\r\n        }\r\n        return <h3 className=\"text-center\">{idx}글을 수정 합니다.</h3>\r\n    }\r\n\r\n    // # 3. \r\n    const changeCategoryHandler = (event) => {\r\n        event.preventDefault();\r\n        setCategory(event.target.value);\r\n        console.log(event.target.value);\r\n    }\r\n    // # 3. \r\n    const changeTitleHandler = (event) => {\r\n        event.preventDefault();\r\n        setTitle(event.target.value);\r\n        console.log(event.target.value);\r\n    }\r\n    // # 3. \r\n    const changeContentHandler = (event) => {\r\n        event.preventDefault();\r\n        setContent(event.target.value);\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    // # 4. save 버튼을 클릭시 api에 글 작성 리퀘스트를 보내는 함수를 선언\r\n    const createBoard = (event) => {\r\n        event.preventDefault();\r\n        const board = {\r\n            category: pCategory,\r\n            title: pTitle,\r\n            content: pContent\r\n            // ID: this.state.ID\r\n        };\r\n        console.log(event.target.value);\r\n        console.log(`board => ${JSON.stringify(board)}`); // 보내짐 확인\r\n        // if(this.state.index == '_create'){\r\n        if (idx === '_create') {\r\n            BoardService.createBoard(board).then(res => {\r\n                console.log(res);\r\n                history('/app/board/1', { replace: true });\r\n            });\r\n        } else {\r\n            // BoardService.updateBoard(this.state.index, board).then(res => {\r\n            BoardService.updateBoard(idx, board).then(res => {\r\n                console.log(res);\r\n                history(`/app/board/1`, { replace: true });\r\n            })\r\n        }\r\n    }\r\n\r\n    // 글작성 취소 버튼이 클릭되었을때 글목록 페이지로 이동하는 함수선언\r\n    const cancel = (event) => {\r\n        event.preventDefault();\r\n        history('/app/board/1', { replace: true });\r\n    }\r\n\r\n    const textFieldStyle = {\r\n        marginTop: 8,\r\n        width: '80%'\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader\r\n                variant=\"h2\"\r\n                title={getTitle()}\r\n            />\r\n            <Divider />\r\n            <CardContent>\r\n                <form>\r\n                    <Grid\r\n                        marginTop=\"10px\"\r\n                        marginBottom=\"25px\">\r\n                        <Typography\r\n                            variant=\"h4\"\r\n                            marginBottom=\"10px\"\r\n                        >\r\n                            카테고리\r\n                        </Typography>\r\n                        <FormControl variant=\"outlined\">\r\n                            <InputLabel htmlFor=\"outlined-age-native-simple\" id=\"category-Type\" />\r\n                            <Select\r\n                                placeholder=\"category\"\r\n                                name=\"category\"\r\n                                className=\"form-control\"\r\n                                value={pCategory}\r\n                                onChange={changeCategoryHandler}\r\n                            >\r\n                                <MenuItem value={0}>공지사항</MenuItem>\r\n                                <MenuItem value={2}>자유게시판</MenuItem>\r\n                                <MenuItem value={3}>자료실</MenuItem>\r\n                                <MenuItem value={4}>사고팝니다</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid\r\n                        marginTop=\"10px\"\r\n                        marginBottom=\"25px\">\r\n                        <Typography\r\n                            variant=\"h4\"\r\n                            marginBottom=\"10px\"\r\n                        >\r\n                            제목\r\n                        </Typography>\r\n                        <TextField\r\n                            id=\"title-name\"\r\n                            placeholder=\"title\"\r\n                            name=\"title\"\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            value={pTitle}\r\n                            onChange={changeTitleHandler}\r\n                            size=\"medium\"\r\n                            margin=\"normal\"\r\n                            marginBottom=\"50px\"\r\n                            style={textFieldStyle}\r\n                        />\r\n                    </Grid>\r\n                    <Grid>\r\n                        <Typography\r\n                            variant=\"h4\"\r\n                            marginBottom=\"10px\"\r\n                        >\r\n                            내용\r\n                        </Typography>\r\n                        <TextField\r\n                            Value={pContent}\r\n                            placeholder=\"content\"\r\n                            id=\"content\"\r\n                            name=\"content\"\r\n                            className=\"form-control\"\r\n                            size=\"medium\"\r\n                            maril\r\n                            margin=\"normal\"\r\n                            onChange={changeContentHandler}\r\n                            multiline=\"true\"\r\n                            rows=\"20\"\r\n                            rowsMax=\"20\"\r\n                            style={textFieldStyle}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        marginRight=\"350px\"\r\n                        marginTop=\"70px\"\r\n                        marginBottom=\"50px\"\r\n                        align=\"right\"\r\n                    >\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={createBoard}\r\n                        >\r\n                            저장\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={cancel}\r\n                            style={{ marginLeft: \"10px\" }\r\n                            }>\r\n                            취소\r\n                        </Button>\r\n                    </Grid>\r\n                </form>\r\n            </CardContent>\r\n        </Card >\r\n    );\r\n}\r\nexport default CreateBoardComponent;","import { Navigate } from 'react-router-dom';\r\nimport DashboardLayout from 'src/components/DashboardLayout';\r\nimport MainLayout from 'src/components/MainLayout';\r\nimport Mypage from 'src/pages/Mypage';\r\nimport Board from 'src/pages/Board';\r\nimport Home from 'src/pages/Home';\r\nimport Login from 'src/pages/Login';\r\nimport Logout from 'src/pages/logout';\r\nimport NotFound from 'src/pages/NotFound';\r\nimport ProductList from 'src/pages/ProductList';\r\nimport Register from 'src/pages/Register';\r\nimport Settings from 'src/pages/Settings';\r\nimport TimeManagement from 'src/pages/TimeManagement';\r\nimport Calendar from 'src/pages/Calendar';\r\nimport ReadBoardComponent from './components/board/ReadBoardComponent';\r\nimport CreateBoardComponent from './components/board/CreateBoardComponent';\r\n// import ListBoardComponent from './components/board/ListBoardComponent';\r\n\r\nconst routes = [\r\n  {\r\n    path: 'app',\r\n    element: <DashboardLayout />,\r\n    children: [\r\n      { path: 'mypage', element: <Mypage /> },\r\n      {\r\n        path: 'board/:idx',\r\n        element: <Board />\r\n        // element: <ListBoardComponent/>,\r\n      },\r\n      { path: 'home', element: <Home /> },\r\n      { path: 'products', element: <ProductList /> },\r\n      { path: 'settings', element: <Settings /> },\r\n      { path: 'timemanagement', element: <TimeManagement /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> },\r\n      { path: '/read-board/:idx', element: <ReadBoardComponent /> },\r\n      { path: '/create-board/:idx', element: <CreateBoardComponent /> },\r\n      { path: 'calendar', element: <Calendar /> }\r\n    ]\r\n  },\r\n  {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n      { path: 'login', element: <Login /> },\r\n      { path: 'logout', element: <Logout /> },\r\n      { path: 'register', element: <Register /> },\r\n      { path: '404', element: <NotFound /> },\r\n      { path: '/', element: <Navigate to=\"/app/home\" /> },\r\n      { path: '*', element: <Navigate to=\"/404\" /> }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default routes;\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport routes from 'src/routes';\r\n\r\nconst App = () => {\r\n  const routing = useRoutes(routes);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      {routing}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}