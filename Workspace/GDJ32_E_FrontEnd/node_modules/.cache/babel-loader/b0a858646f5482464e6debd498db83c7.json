{"ast":null,"code":"import _defineProperty from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport SvgIcon from '../SvgIcon';\nimport stepIconClasses, { getStepIconUtilityClass } from './stepIconClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  return deepmerge(_defineProperty({}, \"& .\".concat(stepIconClasses.text), styles.text), styles.root || {});\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      active = styleProps.active,\n      completed = styleProps.completed,\n      error = styleProps.error;\n  var slots = {\n    root: ['root', active && 'active', completed && 'completed', error && 'error'],\n    text: ['text']\n  };\n  return composeClasses(slots, getStepIconUtilityClass, classes);\n};\n\nvar StepIconRoot = experimentalStyled(SvgIcon, {}, {\n  name: 'MuiStepIcon',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function (_ref2) {\n  var _ref3;\n\n  var theme = _ref2.theme;\n  return _ref3 = {\n    /* Styles applied to the root element. */\n    display: 'block',\n    transition: theme.transitions.create('color', {\n      duration: theme.transitions.duration.shortest\n    }),\n    color: theme.palette.text.disabled\n  }, _defineProperty(_ref3, \"&.\".concat(stepIconClasses.completed), {\n    color: theme.palette.primary.main\n  }), _defineProperty(_ref3, \"&.\".concat(stepIconClasses.active), {\n    color: theme.palette.primary.main\n  }), _defineProperty(_ref3, \"&.\".concat(stepIconClasses.error), {\n    color: theme.palette.error.main\n  }), _ref3;\n});\nvar StepIconText = experimentalStyled('text', {}, {\n  name: 'MuiStepIcon',\n  slot: 'Text',\n  overridesResolver: overridesResolver\n})(function (_ref4) {\n  var theme = _ref4.theme;\n  return {\n    /* Styles applied to the SVG text element. */\n    fill: theme.palette.primary.contrastText,\n    fontSize: theme.typography.caption.fontSize,\n    fontFamily: theme.typography.fontFamily\n  };\n});\n\nvar _ref = /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"12\"\n});\n\nvar StepIcon = /*#__PURE__*/React.forwardRef(function StepIcon(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiStepIcon'\n  });\n\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      classNameProp = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      icon = props.icon,\n      other = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"completed\", \"error\", \"icon\"]);\n\n  var styleProps = _extends({}, props, {\n    active: active,\n    completed: completed,\n    error: error\n  });\n\n  var classes = useUtilityClasses(styleProps);\n\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    var className = clsx(classNameProp, classes.root);\n\n    if (error) {\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\n        as: Warning,\n        className: className,\n        ref: ref,\n        styleProps: styleProps\n      }, other));\n    }\n\n    if (completed) {\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\n        as: CheckCircle,\n        className: className,\n        ref: ref,\n        styleProps: styleProps\n      }, other));\n    }\n\n    return /*#__PURE__*/_jsxs(StepIconRoot, _extends({\n      className: className,\n      ref: ref,\n      styleProps: styleProps\n    }, other, {\n      children: [_ref, /*#__PURE__*/_jsx(StepIconText, {\n        className: classes.text,\n        x: \"12\",\n        y: \"16\",\n        textAnchor: \"middle\",\n        styleProps: styleProps,\n        children: icon\n      })]\n    }));\n  }\n\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Whether this step is active.\r\n   * @default false\r\n   */\n  active: PropTypes.bool,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   * @default false\r\n   */\n  completed: PropTypes.bool,\n\n  /**\r\n   * If `true`, the step is marked as failed.\r\n   * @default false\r\n   */\n  error: PropTypes.bool,\n\n  /**\r\n   * The label displayed in the step icon.\r\n   */\n  icon: PropTypes.node,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default StepIcon;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/StepIcon/StepIcon.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","CheckCircle","Warning","SvgIcon","stepIconClasses","getStepIconUtilityClass","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","text","root","useUtilityClasses","styleProps","classes","active","completed","error","slots","StepIconRoot","name","slot","theme","display","transition","transitions","create","duration","shortest","color","palette","disabled","primary","main","StepIconText","fill","contrastText","fontSize","typography","caption","fontFamily","_ref","cx","cy","r","StepIcon","forwardRef","inProps","ref","classNameProp","className","icon","other","as","children","x","y","textAnchor","process","env","NODE_ENV","propTypes","bool","object","string","node","sx"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\r\nimport Warning from '../internal/svg-icons/Warning';\r\nimport SvgIcon from '../SvgIcon';\r\nimport stepIconClasses, { getStepIconUtilityClass } from './stepIconClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  return deepmerge({\r\n    [`& .${stepIconClasses.text}`]: styles.text\r\n  }, styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    active,\r\n    completed,\r\n    error\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', active && 'active', completed && 'completed', error && 'error'],\r\n    text: ['text']\r\n  };\r\n  return composeClasses(slots, getStepIconUtilityClass, classes);\r\n};\r\n\r\nconst StepIconRoot = experimentalStyled(SvgIcon, {}, {\r\n  name: 'MuiStepIcon',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme\r\n}) => ({\r\n  /* Styles applied to the root element. */\r\n  display: 'block',\r\n  transition: theme.transitions.create('color', {\r\n    duration: theme.transitions.duration.shortest\r\n  }),\r\n  color: theme.palette.text.disabled,\r\n  [`&.${stepIconClasses.completed}`]: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  [`&.${stepIconClasses.active}`]: {\r\n    color: theme.palette.primary.main\r\n  },\r\n  [`&.${stepIconClasses.error}`]: {\r\n    color: theme.palette.error.main\r\n  }\r\n}));\r\nconst StepIconText = experimentalStyled('text', {}, {\r\n  name: 'MuiStepIcon',\r\n  slot: 'Text',\r\n  overridesResolver\r\n})(({\r\n  theme\r\n}) => ({\r\n  /* Styles applied to the SVG text element. */\r\n  fill: theme.palette.primary.contrastText,\r\n  fontSize: theme.typography.caption.fontSize,\r\n  fontFamily: theme.typography.fontFamily\r\n}));\r\n\r\nvar _ref = /*#__PURE__*/_jsx(\"circle\", {\r\n  cx: \"12\",\r\n  cy: \"12\",\r\n  r: \"12\"\r\n});\r\n\r\nconst StepIcon = /*#__PURE__*/React.forwardRef(function StepIcon(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiStepIcon'\r\n  });\r\n\r\n  const {\r\n    active = false,\r\n    className: classNameProp,\r\n    completed = false,\r\n    error = false,\r\n    icon\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"active\", \"className\", \"completed\", \"error\", \"icon\"]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    active,\r\n    completed,\r\n    error\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n\r\n  if (typeof icon === 'number' || typeof icon === 'string') {\r\n    const className = clsx(classNameProp, classes.root);\r\n\r\n    if (error) {\r\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\r\n        as: Warning,\r\n        className: className,\r\n        ref: ref,\r\n        styleProps: styleProps\r\n      }, other));\r\n    }\r\n\r\n    if (completed) {\r\n      return /*#__PURE__*/_jsx(StepIconRoot, _extends({\r\n        as: CheckCircle,\r\n        className: className,\r\n        ref: ref,\r\n        styleProps: styleProps\r\n      }, other));\r\n    }\r\n\r\n    return /*#__PURE__*/_jsxs(StepIconRoot, _extends({\r\n      className: className,\r\n      ref: ref,\r\n      styleProps: styleProps\r\n    }, other, {\r\n      children: [_ref, /*#__PURE__*/_jsx(StepIconText, {\r\n        className: classes.text,\r\n        x: \"12\",\r\n        y: \"16\",\r\n        textAnchor: \"middle\",\r\n        styleProps: styleProps,\r\n        children: icon\r\n      })]\r\n    }));\r\n  }\r\n\r\n  return icon;\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Whether this step is active.\r\n   * @default false\r\n   */\r\n  active: PropTypes.bool,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Mark the step as completed. Is passed to child components.\r\n   * @default false\r\n   */\r\n  completed: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the step is marked as failed.\r\n   * @default false\r\n   */\r\n  error: PropTypes.bool,\r\n\r\n  /**\r\n   * The label displayed in the step icon.\r\n   */\r\n  icon: PropTypes.node,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default StepIcon;"]},"metadata":{},"sourceType":"module"}