{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GDJ32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\board\\\\ListBoardComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Button } from '@material-ui/core';\nimport BoardService from '../../service/BoardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = {\n  NOTICE: {\n    value: 0,\n    name: \"공지사항\"\n  },\n  FREEBOARD: {\n    value: 1,\n    name: \"자유게시판\"\n  },\n  STORAGE: {\n    value: 2,\n    name: \"자료실\"\n  },\n  MARCKET: {\n    value: 3,\n    name: \"중고나라\"\n  }\n};\n\nconst ListBoardComponent = () => {\n  _s();\n\n  const history = useNavigate();\n  const [pNum, paging, boards] = useState(1, {}, []); // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\n\n  useEffect(() => {\n    BoardService.getBoards(pNum).then(res => {\n      pNum(res.data.pagingData.currentPageNum);\n      paging(res.data.pagingData);\n      boards(res.data.list);\n    });\n  }); // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\n\n  const listBoard = pageNum => {\n    console.log(`pageNum : ${pageNum}`);\n    console.log(\"listBoard\");\n    let tempNum = 1;\n    if (pageNum === \"undefined\") tempNum = 1;else tempNum = pageNum;\n    console.log(tempNum);\n    BoardService.getBoards(tempNum).then(res => {\n      pNum = res.data.pagingData.currentPageNum;\n      paging = res.data.pagingData;\n      boards = res.data.list;\n    });\n  };\n\n  getBoardCategory = value => {\n    console.log(\"getBoardCategory\");\n    let name = \"Not Defined\";\n\n    switch (value) {\n      case Category.NOTICE.value:\n        name = Category.NOTICE.name;\n        break;\n\n      case Category.FREEBOARD.value:\n        name = Category.FREEBOARD.name;\n        break;\n\n      case Category.STORAGE.value:\n        name = Category.STORAGE.name;\n        break;\n\n      case Category.MARCKET.value:\n        name = Category.MARCKET.name;\n        break;\n\n      default:\n        name = \"Not Defined\";\n        break;\n    }\n\n    return name;\n  };\n\n  getBoardCreateDay = value => {\n    console.log(`작성일 : ${value}`);\n    console.log(\"getBoardCreateDay\");\n    return value;\n  }; // 페이지 버튼을 표시하는 함수\n\n\n  viewPaging = () => {\n    const pageNums = [];\n    const boardState = this.state;\n    console.log(\"viewPaging\");\n\n    for (let i = boardState.paging.pageNumStart; i <= boardState.paging.pageNumEnd; i++) {\n      pageNums.push(i);\n    }\n\n    if (Object.keys(pageNums).length > 0) {\n      Object.keys(pageNums).forEach(page => {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            onClick: listBoard(page),\n            \"aria-hidden\": \"true\",\n            role: \"button\",\n            tabIndex: \"-1\",\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)\n        }, page.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this);\n      });\n    }\n  }; // 이전 페이지 이동버튼을 출력하는 함수\n\n\n  isPagingPrev = () => {\n    const boardState = this.state;\n    console.log(\"isPagingPrev\");\n\n    if (boardState.paging.prev) {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: listBoard(boardState.paging.currentPageNum - 1),\n          \"aria-hidden\": \"true\",\n          role: \"button\",\n          tabIndex: \"-1\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this);\n    }\n  }; // 다음 페이지 이동 버튼을 출력하는 함수\n\n\n  isPagingNext = () => {\n    const boardState = this.state;\n    console.log(\"isPagingNext\");\n\n    if (boardState.paging.next) {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: listBoard(boardState.paging.currentPageNum + 1),\n          \"aria-hidden\": \"true\",\n          role: \"button\",\n          tabIndex: \"-1\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this);\n    }\n  }; // 첫페이지 이동 버튼을 출력하는 함수\n\n\n  isMoveToFirstPage = () => {\n    const boardState = this.state;\n    console.log(\"isMoveToFirstPage\");\n\n    if (boardState.pNum !== 1) {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: listBoard(1),\n          \"aria-hidden\": \"true\",\n          role: \"button\",\n          tabIndex: \"-1\",\n          children: \"Move to First Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this);\n    }\n  }; // 마지막 페이지 이동 버튼을 출력하는 함수\n\n\n  isMoveToLastPage = () => {\n    const boardState = this.state;\n    console.log(\"isMoveToLastPage\");\n\n    if (boardState.pNum !== boardState.paging.pageNumCountTotal) {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: listBoard(boardState.paging.pageNumCountTotal),\n          \"aria-hidden\": \"true\",\n          role: \"button\",\n          tabIndex: \"-1\",\n          children: [\"LastPage(\", boardState.paging.pageNumCountTotal, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this);\n    }\n  }; // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\n\n\n  readBoard = idx => {\n    console.log(\"readBoard event\", idx);\n    BoardService.getOneBoard(idx).then(res => {\n      console.log(res);\n      history(`/read-board/${idx}`);\n      console.log(`/read-board/${idx}`);\n    }).catch(err => {\n      console.log(`getBoard err : ${err}`);\n    });\n  }; // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\n  // this.props.history.push('이동할 링크'); -> 일반적\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\n\n\n  const createBoard = () => {\n    history(\"/create-board/_create\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn btn-primary\",\n        onClick: createBoard,\n        children: \" \\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      style: {\n        padding: \"0 12px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n          children: [/*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"5%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC791\\uC131\\uC790 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC791\\uC131\\uC77C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC870\\uD68C\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC88B\\uC544\\uC694\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: boardState.boards.map(board =>\n          /*#__PURE__*/\n          // <tr key = {board.index}>\n          _jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", board.idx, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", this.getBoardCategory(board.category), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: this.readBoard(board.idx),\n                \"aria-hidden\": \"true\",\n                role: \"button\",\n                tabIndex: \"-1\",\n                children: board.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", board.id, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", this.getBoardCreateDay(board.created_day), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", board.viewCnt, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\" \", board.likes, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this)]\n          }, board.idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"Page navigation example\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pagination justify-content-center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListBoardComponent, \"lIb3A/XDSXbVlUGpf0tWaMT1ldM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ListBoardComponent;\nexport default ListBoardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBoardComponent\");","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ListBoardComponent.js"],"names":["React","useEffect","useState","useNavigate","Button","BoardService","Category","NOTICE","value","name","FREEBOARD","STORAGE","MARCKET","ListBoardComponent","history","pNum","paging","boards","getBoards","then","res","data","pagingData","currentPageNum","list","listBoard","pageNum","console","log","tempNum","getBoardCategory","getBoardCreateDay","viewPaging","pageNums","boardState","state","i","pageNumStart","pageNumEnd","push","Object","keys","length","forEach","page","toString","isPagingPrev","prev","isPagingNext","next","isMoveToFirstPage","isMoveToLastPage","pageNumCountTotal","readBoard","idx","getOneBoard","catch","err","createBoard","padding","map","board","category","title","id","created_day","viewCnt","likes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nimport BoardService from '../../service/BoardService';\r\n\r\nconst Category = {\r\n        NOTICE: {value: 0, name: \"공지사항\"},\r\n        FREEBOARD: {value: 1, name: \"자유게시판\"},\r\n        STORAGE: {value: 2, name: \"자료실\"},\r\n        MARCKET: {value: 3, name: \"중고나라\"}\r\n}\r\n\r\nconst ListBoardComponent = () => {    \r\n    const history = useNavigate();\r\n    const [pNum, paging, boards] = useState(1, {}, []);\r\n\r\n    // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n    useEffect(() => {\r\n        BoardService.getBoards(pNum).then((res) => {\r\n            pNum(res.data.pagingData.currentPageNum);\r\n            paging(res.data.pagingData);\r\n            boards(res.data.list);\r\n        });\r\n    });\r\n    \r\n    // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n    const listBoard = (pageNum) => {\r\n        console.log(`pageNum : ${pageNum}`);\r\n        console.log(\"listBoard\");\r\n        let tempNum = 1;\r\n        if (pageNum === \"undefined\")\r\n            tempNum = 1;\r\n        else\r\n            tempNum = pageNum;\r\n        \r\n        console.log(tempNum);\r\n        BoardService.getBoards(tempNum).then((res) => {\r\n            pNum = res.data.pagingData.currentPageNum;\r\n            paging = res.data.pagingData;\r\n            boards = res.data.list\r\n        });\r\n    }\r\n\r\n    getBoardCategory = (value) => {\r\n        console.log(\"getBoardCategory\");\r\n        let name = \"Not Defined\";\r\n        switch(value) {\r\n            case Category.NOTICE.value:\r\n                name = Category.NOTICE.name;\r\n                break;\r\n            case Category.FREEBOARD.value:\r\n                name = Category.FREEBOARD.name;\r\n                break;\r\n            case Category.STORAGE.value:\r\n                name = Category.STORAGE.name;\r\n                break;\r\n            case Category.MARCKET.value:\r\n                name = Category.MARCKET.name;\r\n                break;\r\n            default:\r\n                name = \"Not Defined\";\r\n                break;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    getBoardCreateDay = (value) => {\r\n        console.log(`작성일 : ${value}`);\r\n        console.log(\"getBoardCreateDay\");\r\n        return value;\r\n    }\r\n\r\n    // 페이지 버튼을 표시하는 함수\r\n    viewPaging = () => {\r\n        const pageNums = [];\r\n        const boardState = this.state;\r\n        console.log(\"viewPaging\");\r\n        for (let i = boardState.paging.pageNumStart; i <= boardState.paging.pageNumEnd; i++ ) {\r\n            pageNums.push(i);\r\n        }\r\n        if (Object.keys(pageNums).length > 0) {\r\n            Object.keys(pageNums).forEach((page) => {\r\n                (\r\n                    <li className=\"page-item\" key={page.toString()} >\r\n                        <a className=\"page-link\" onClick={listBoard(page)} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">{page}</a>\r\n                    </li>\r\n                );\r\n            })\r\n        }\r\n    }\r\n\r\n    // 이전 페이지 이동버튼을 출력하는 함수\r\n    isPagingPrev = () => {\r\n        const boardState = this.state;\r\n        console.log(\"isPagingPrev\");\r\n        if(boardState.paging.prev) {\r\n            (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {listBoard( (boardState.paging.currentPageNum - 1) )} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">Previous</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    // 다음 페이지 이동 버튼을 출력하는 함수\r\n    isPagingNext = () => {\r\n        const boardState = this.state;\r\n        console.log(\"isPagingNext\");\r\n        if (boardState.paging.next) {\r\n            (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {listBoard( (boardState.paging.currentPageNum + 1) )} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">Next</a>\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n\r\n    // 첫페이지 이동 버튼을 출력하는 함수\r\n    isMoveToFirstPage = () => {\r\n        const boardState = this.state;\r\n        console.log(\"isMoveToFirstPage\");\r\n        if (boardState.pNum !== 1) {\r\n            (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {listBoard(1)} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">Move to First Page</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    // 마지막 페이지 이동 버튼을 출력하는 함수\r\n    isMoveToLastPage = () => {\r\n        const boardState = this.state;\r\n        console.log(\"isMoveToLastPage\");\r\n        if (boardState.pNum !== boardState.paging.pageNumCountTotal) {\r\n            (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={listBoard((boardState.paging.pageNumCountTotal))} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">\r\n                        LastPage({boardState.paging.pageNumCountTotal})\r\n                        </a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n    readBoard = (idx) => {\r\n        console.log(\"readBoard event\", idx);\r\n        \r\n        BoardService.getOneBoard(idx)\r\n            .then(res => {\r\n                console.log(res);\r\n                history(`/read-board/${idx}`);\r\n                console.log(`/read-board/${idx}`);\r\n            })\r\n            .catch(err => {\r\n                console.log(`getBoard err : ${ err }`);\r\n            });\r\n    }\r\n\r\n    // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n    // this.props.history.push('이동할 링크'); -> 일반적\r\n    // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n    // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n    const createBoard = () => {\r\n        history(\"/create-board/_create\");\r\n    }\r\n    return (\r\n        <div>\r\n            <h2 className=\"text-center\">게시판 목록</h2>\r\n            <div className = \"row\">\r\n                <Button className=\"btn btn-primary\" \r\n                    onClick={createBoard}> 글 작성</Button>\r\n            </div>\r\n            <div className =\"table\" style={{ padding: \"0 12px\" }}>\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <colgroup>\r\n                    <col width=\"5%\" />\r\n                    <col width=\"*\" />\r\n                    <col width=\"50%\" />\r\n                    <col width=\"*\" />\r\n                    <col width=\"*\" />\r\n                    <col width=\"*\" />\r\n                    <col width=\"*\" />\r\n                </colgroup>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>번호</th>\r\n                            <th>카테고리 </th>\r\n                            <th>제목</th>\r\n                            <th>작성자 </th>\r\n                            <th>작성일 </th>\r\n                            {/* <th>수정일</th> */}\r\n                            <th>조회수</th>\r\n                            <th>좋아요수</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            boardState.boards.map(\r\n                                board => \r\n                                // <tr key = {board.index}>\r\n                                <tr key = {board.idx}>\r\n                                    {/* <td> {board.index} </td> */}\r\n                                    <td> {board.idx} </td>\r\n                                    <td> {this.getBoardCategory(board.category)} </td>\r\n                                        {/* <td> <a onClick = {() => this.readBoard(board.index)}>{board.title}</a></td> */}\r\n                                        <td>\r\n                                            <a onClick={this.readBoard(board.idx)} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">\r\n                                                {board.title}\r\n                                            </a>\r\n                                        </td>\r\n                                    <td> {board.id} </td>\r\n                                    <td> {this.getBoardCreateDay(board.created_day)} </td>\r\n                                    <td> {board.viewCnt} </td>\r\n                                    <td> {board.likes} </td>\r\n                                </tr>\r\n                            )\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className =\"row\">\r\n                <nav aria-label=\"Page navigation example\">\r\n                    <ul className=\"pagination justify-content-center\">\r\n                        {\r\n                            // this.isMoveToFirstPage()\r\n                        }\r\n                        {\r\n                            // this.isPagingPrev()\r\n                        }\r\n                        {\r\n                            // this.viewPaging()\r\n                        }\r\n                        {\r\n                            // this.isPagingNext()\r\n                        }\r\n                        {\r\n                            // this.isMoveToLastPage()\r\n                        }\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListBoardComponent;\r\n"]},"metadata":{},"sourceType":"module"}