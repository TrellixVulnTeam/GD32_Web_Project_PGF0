{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { emphasize } from '../styles/colorManipulator';\nimport Paper from '../Paper';\nimport snackbarContentClasses, { getSnackbarContentUtilityClass } from './snackbarContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${snackbarContentClasses.action}`]: styles.action,\n    [`& .${snackbarContentClasses.message}`]: styles.message\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    action: ['action'],\n    message: ['message']\n  };\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\n};\n\nconst SnackbarContentRoot = experimentalStyled(Paper, {}, {\n  name: 'MuiSnackbarContent',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme\n}) => {\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return _extends({}, theme.typography.body2, {\n    color: theme.palette.getContrastText(backgroundColor),\n    backgroundColor,\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    padding: '6px 16px',\n    borderRadius: theme.shape.borderRadius,\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      flexGrow: 'initial',\n      minWidth: 288\n    }\n  });\n});\nconst SnackbarContentMessage = experimentalStyled('div', {}, {\n  name: 'MuiSnackbarContent',\n  slot: 'Message'\n})({\n  padding: '8px 0'\n});\nconst SnackbarContentAction = experimentalStyled('div', {}, {\n  name: 'MuiSnackbarContent',\n  slot: 'Action'\n})({\n  display: 'flex',\n  alignItems: 'center',\n  marginLeft: 'auto',\n  paddingLeft: 16,\n  marginRight: -8\n});\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbarContent'\n  });\n\n  const {\n    action,\n    className,\n    message,\n    role = 'alert'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"className\", \"message\", \"role\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\n      className: classes.message,\n      styleProps: styleProps,\n      children: message\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\n      className: classes.action,\n      styleProps: styleProps,\n      children: action\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The message to display.\r\n   */\n  message: PropTypes.node,\n\n  /**\r\n   * The ARIA role attribute of the element.\r\n   * @default 'alert'\r\n   */\n  role: PropTypes.string,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default SnackbarContent;","map":{"version":3,"sources":["C:/Github/GD32_Web_Project/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/SnackbarContent/SnackbarContent.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","emphasize","Paper","snackbarContentClasses","getSnackbarContentUtilityClass","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","action","message","root","useUtilityClasses","styleProps","classes","slots","SnackbarContentRoot","name","slot","theme","emphasis","palette","mode","backgroundColor","background","default","typography","body2","color","getContrastText","display","alignItems","flexWrap","padding","borderRadius","shape","flexGrow","breakpoints","up","minWidth","SnackbarContentMessage","SnackbarContentAction","marginLeft","paddingLeft","marginRight","SnackbarContent","forwardRef","inProps","ref","className","role","other","square","elevation","children","process","env","NODE_ENV","propTypes","node","object","string","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { emphasize } from '../styles/colorManipulator';\r\nimport Paper from '../Paper';\r\nimport snackbarContentClasses, { getSnackbarContentUtilityClass } from './snackbarContentClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  return deepmerge({\r\n    [`& .${snackbarContentClasses.action}`]: styles.action,\r\n    [`& .${snackbarContentClasses.message}`]: styles.message\r\n  }, styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root'],\r\n    action: ['action'],\r\n    message: ['message']\r\n  };\r\n  return composeClasses(slots, getSnackbarContentUtilityClass, classes);\r\n};\r\n\r\nconst SnackbarContentRoot = experimentalStyled(Paper, {}, {\r\n  name: 'MuiSnackbarContent',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme\r\n}) => {\r\n  const emphasis = theme.palette.mode === 'light' ? 0.8 : 0.98;\r\n  const backgroundColor = emphasize(theme.palette.background.default, emphasis);\r\n  return _extends({}, theme.typography.body2, {\r\n    color: theme.palette.getContrastText(backgroundColor),\r\n    backgroundColor,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: '6px 16px',\r\n    borderRadius: theme.shape.borderRadius,\r\n    flexGrow: 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexGrow: 'initial',\r\n      minWidth: 288\r\n    }\r\n  });\r\n});\r\nconst SnackbarContentMessage = experimentalStyled('div', {}, {\r\n  name: 'MuiSnackbarContent',\r\n  slot: 'Message'\r\n})({\r\n  padding: '8px 0'\r\n});\r\nconst SnackbarContentAction = experimentalStyled('div', {}, {\r\n  name: 'MuiSnackbarContent',\r\n  slot: 'Action'\r\n})({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  marginLeft: 'auto',\r\n  paddingLeft: 16,\r\n  marginRight: -8\r\n});\r\nconst SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiSnackbarContent'\r\n  });\r\n\r\n  const {\r\n    action,\r\n    className,\r\n    message,\r\n    role = 'alert'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"className\", \"message\", \"role\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\r\n\r\n\r\n  const styleProps = _extends({}, props);\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsxs(SnackbarContentRoot, _extends({\r\n    role: role,\r\n    square: true,\r\n    elevation: 6,\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other, {\r\n    children: [/*#__PURE__*/_jsx(SnackbarContentMessage, {\r\n      className: classes.message,\r\n      styleProps: styleProps,\r\n      children: message\r\n    }), action ? /*#__PURE__*/_jsx(SnackbarContentAction, {\r\n      className: classes.action,\r\n      styleProps: styleProps,\r\n      children: action\r\n    }) : null]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\r\n  action: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The message to display.\r\n   */\r\n  message: PropTypes.node,\r\n\r\n  /**\r\n   * The ARIA role attribute of the element.\r\n   * @default 'alert'\r\n   */\r\n  role: PropTypes.string,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default SnackbarContent;"]},"metadata":{},"sourceType":"module"}