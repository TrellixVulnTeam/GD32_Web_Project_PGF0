{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GDJ32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\board\\\\ReadBoardComponent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport BoardService from '../../service/BoardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReadBoardComponent = () => {\n  _s();\n\n  const [idx, setIdx] = useState();\n  const [board, setBoard] = useState({}); // # 2. 페이지가 로딩될때 api와 통신하여 글 객체를 가져온다\n\n  useEffect(() => {\n    BoardService.getOneBoard(idx).then(res => {\n      setIdx(res.data.getIdx);\n      setBoard(res.data);\n    });\n  }, []); // # 3. 파라미터 값에 따라 페이지에 표시할 내용을 변경 / 게시판 타입별로 표시를 다르게 하기\n\n  const returnBoardType = categoryNo => {\n    let category = null;\n\n    if (categoryNo === 0) {\n      category = \"공지사항\";\n    } else if (categoryNo === 1) {\n      category = \"자유게시판\";\n    } else if (categoryNo === 2) {\n      category = \"자료실\";\n    } else {\n      category = \"사고팝니다\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" \\uCE74\\uD14C\\uACE0\\uB9AC : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), \" \", category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  };\n\n  const returnDate = cTime => {\n    console.log(\"생성일 : \", {\n      cTime\n    }); // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat (date format 링크)\n\n    console.log(new Intl.DateTimeFormat('ko-KR').format(cTime));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\uC0DD\\uC131\\uC77C : [ \", new Intl.DateTimeFormat('ko-KR').format(cTime), \" ] \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }; // # 4. 글 목록으로 이동하는 함수를 정의 \n\n\n  const goToList = () => {\n    this.props.history.push('/board');\n  };\n\n  const goToUpdate = event => {\n    event.preventDefault(); // this.props.history.push(`/create-board/${this.state.index}`);\n\n    this.props.history.push(`/create-board/${this.state.idx}`);\n  };\n\n  const deleteView = async function () {\n    if (window.confirm(\"정말로 글을 삭제하시겠습니까?\")) {\n      // BoardService.deleteBoard(this.state.index).then( res => {\n      BoardService.deleteBoard(this.state.idx).then(res => {\n        console.log(\"delete result => \" + JSON.stringify(res));\n\n        if (res.status == 200) {\n          this.props.history.push('/board');\n        } else {\n          alert(\"글 삭제가 실패했습니다.\");\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card col-md-6 offset-md-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-center\",\n        children: \" \\uC0C1\\uC138\\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [returnBoardType(board.category), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" \\uC81C\\uBAA9 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), \" : \", board.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" \\uB0B4\\uC6A9 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), \" : \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: board.content,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), returnDate(board.createdTime, board.updatedTime), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: goToList.bind(this),\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"\\uAE00 \\uBAA9\\uB85D\\uC73C\\uB85C \\uC774\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info\",\n          onClick: goToUpdate,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"\\uAE00 \\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: () => deleteView(),\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"\\uAE00 \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ReadBoardComponent, \"uEO/w1hW7lG9X/I7i+9pkD0jtbU=\");\n\n_c = ReadBoardComponent;\nexport default ReadBoardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadBoardComponent\");","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ReadBoardComponent.jsx"],"names":["React","useEffect","useState","BoardService","ReadBoardComponent","idx","setIdx","board","setBoard","getOneBoard","then","res","data","getIdx","returnBoardType","categoryNo","category","returnDate","cTime","console","log","Intl","DateTimeFormat","format","goToList","props","history","push","goToUpdate","event","preventDefault","state","deleteView","window","confirm","deleteBoard","JSON","stringify","status","alert","title","content","createdTime","updatedTime","bind","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport BoardService from '../../service/BoardService';\r\n\r\nconst ReadBoardComponent = () => {\r\n    const [idx, setIdx] = useState();\r\n    const [board, setBoard] = useState({});\r\n\r\n    // # 2. 페이지가 로딩될때 api와 통신하여 글 객체를 가져온다\r\n    useEffect(() => {\r\n        BoardService.getOneBoard(idx).then(res => {\r\n            setIdx(res.data.getIdx);\r\n            setBoard(res.data);\r\n        });\r\n    }, []);\r\n\r\n    // # 3. 파라미터 값에 따라 페이지에 표시할 내용을 변경 / 게시판 타입별로 표시를 다르게 하기\r\n    const returnBoardType = (categoryNo) => {\r\n        let category = null;\r\n        if (categoryNo === 0) {\r\n            category = \"공지사항\";\r\n\r\n        } else if (categoryNo === 1 ) {\r\n            category = \"자유게시판\";\r\n\r\n        } else if (categoryNo === 2 ) {\r\n            category = \"자료실\";\r\n\r\n        } else {\r\n            category = \"사고팝니다\";\r\n        }\r\n\r\n        return (\r\n            <div className = \"row\">\r\n                <label> 카테고리 : </label> {category}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const returnDate = (cTime) => {\r\n        console.log(\"생성일 : \", { cTime });\r\n        // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat (date format 링크)\r\n        console.log(new Intl.DateTimeFormat('ko-KR').format(cTime));\r\n        return (\r\n            <div className=\"row\">\r\n                <label>생성일 : [ {new Intl.DateTimeFormat('ko-KR').format(cTime)} ] </label>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // # 4. 글 목록으로 이동하는 함수를 정의 \r\n    const goToList = () => {\r\n        this.props.history.push('/board');\r\n    }\r\n\r\n    const goToUpdate = (event) => {\r\n        event.preventDefault();\r\n        // this.props.history.push(`/create-board/${this.state.index}`);\r\n        this.props.history.push(`/create-board/${this.state.idx}`);\r\n    }\r\n\r\n    const deleteView = async function () {\r\n        if(window.confirm(\"정말로 글을 삭제하시겠습니까?\")){\r\n            // BoardService.deleteBoard(this.state.index).then( res => {\r\n                BoardService.deleteBoard(this.state.idx).then( res => {\r\n                console.log(\"delete result => \" + JSON.stringify(res));\r\n                if (res.status == 200) {\r\n                    this.props.history.push('/board');\r\n                } else {\r\n                    alert(\"글 삭제가 실패했습니다.\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"card col-md-6 offset-md-3\">\r\n                <h3 className =\"text-center\"> 상세페이지</h3>\r\n                <div className = \"card-body\">\r\n                        {returnBoardType(board.category)}      \r\n                        <div className = \"row\">      \r\n                            <label> 제목 </label> : {board.title}\r\n                        </div>\r\n                        <div className = \"row\">\r\n                            <label> 내용 </label> : <br></br> \r\n                            <textarea value={board.content} readOnly/>\r\n                            {/* {this.state.board.createtDay} */}\r\n                        </div >\r\n                        {/* <div className = \"row\">\r\n                            <label>   </label>: \r\n                            {this.state.board.memberNo}\r\n                        </div> */}\r\n                        {returnDate(board.createdTime, board.updatedTime) }\r\n                       \r\n                        <button className=\"btn btn-primary\" onClick={goToList.bind(this)} style={{marginLeft:\"10px\"}}>글 목록으로 이동</button>\r\n                        <button className=\"btn btn-info\" onClick={goToUpdate} style={{marginLeft:\"10px\"}}>글 수정</button>\r\n                      \r\n                        <button className=\"btn btn-danger\" onClick={() => deleteView()} style={{marginLeft:\"10px\"}}>글 삭제</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ReadBoardComponent;"]},"metadata":{},"sourceType":"module"}