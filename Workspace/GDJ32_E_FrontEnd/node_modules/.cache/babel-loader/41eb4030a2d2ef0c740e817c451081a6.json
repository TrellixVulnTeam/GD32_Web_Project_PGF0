{"ast":null,"code":"import _toConsumableArray from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, integerPropType } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  var _deepmerge;\n\n  return deepmerge((_deepmerge = {}, _defineProperty(_deepmerge, \"& .\".concat(breadcrumbsClasses.ol), styles.ol), _defineProperty(_deepmerge, \"& .\".concat(breadcrumbsClasses.li), styles.li), _defineProperty(_deepmerge, \"& .\".concat(breadcrumbsClasses.separator), styles.separator), _deepmerge), styles.root || {});\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes;\n  var slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nvar BreadcrumbsRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})({});\nvar BreadcrumbsOl = experimentalStyled('ol', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol'\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nvar BreadcrumbsSeparator = experimentalStyled('li', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator'\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, styleProps) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        styleProps: styleProps,\n        children: separator\n      }, \"separator-\".concat(index)));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expanded = _React$useState2[0],\n      setExpanded = _React$useState2[1];\n\n  var styleProps = _extends({}, props, {\n    component: component,\n    expanded: expanded,\n    expandText: expandText,\n    itemsAfterCollapse: itemsAfterCollapse,\n    itemsBeforeCollapse: itemsBeforeCollapse,\n    maxItems: maxItems,\n    separator: separator\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  var listRef = React.useRef(null);\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand() {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      var focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\")], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/_jsx(\"li\", {\n      className: classes.li,\n      children: child\n    }, \"child-\".concat(index));\n  });\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      styleProps: styleProps,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, styleProps)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * Override the default label for the expand button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Show path'\r\n   */\n  expandText: PropTypes.string,\n\n  /**\r\n   * If max items is exceeded, the number of items to show after the ellipsis.\r\n   * @default 1\r\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\r\n   * If max items is exceeded, the number of items to show before the ellipsis.\r\n   * @default 1\r\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\r\n   * Specifies the maximum number of breadcrumbs to display. When there are more\r\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\r\n   * will be shown, with an ellipsis in between.\r\n   * @default 8\r\n   */\n  maxItems: integerPropType,\n\n  /**\r\n   * Custom separator node.\r\n   * @default '/'\r\n   */\n  separator: PropTypes.node,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Breadcrumbs;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/Breadcrumbs/Breadcrumbs.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","deepmerge","integerPropType","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","Typography","BreadcrumbCollapsed","breadcrumbsClasses","getBreadcrumbsUtilityClass","jsx","_jsx","overridesResolver","props","styles","ol","li","separator","root","useUtilityClasses","styleProps","classes","slots","BreadcrumbsRoot","name","slot","BreadcrumbsOl","display","flexWrap","alignItems","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","marginLeft","marginRight","insertSeparators","items","className","reduce","acc","current","index","length","concat","children","push","Breadcrumbs","forwardRef","inProps","ref","component","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","other","useState","expanded","setExpanded","listRef","useRef","renderItemsBeforeAndAfter","allItems","handleClickExpand","focusable","querySelector","focus","process","env","NODE_ENV","console","error","join","slice","onClick","Children","toArray","filter","child","isValidElement","map","color","propTypes","node","object","string","elementType","sx"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge, integerPropType } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport Typography from '../Typography';\r\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\r\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  return deepmerge({\r\n    [`& .${breadcrumbsClasses.ol}`]: styles.ol,\r\n    [`& .${breadcrumbsClasses.li}`]: styles.li,\r\n    [`& .${breadcrumbsClasses.separator}`]: styles.separator\r\n  }, styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root'],\r\n    li: ['li'],\r\n    ol: ['ol'],\r\n    separator: ['separator']\r\n  };\r\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\r\n};\r\n\r\nconst BreadcrumbsRoot = experimentalStyled(Typography, {}, {\r\n  name: 'MuiBreadcrumbs',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})({});\r\nconst BreadcrumbsOl = experimentalStyled('ol', {}, {\r\n  name: 'MuiBreadcrumbs',\r\n  slot: 'Ol'\r\n})({\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n  padding: 0,\r\n  margin: 0,\r\n  listStyle: 'none'\r\n});\r\nconst BreadcrumbsSeparator = experimentalStyled('li', {}, {\r\n  name: 'MuiBreadcrumbs',\r\n  slot: 'Separator'\r\n})({\r\n  display: 'flex',\r\n  userSelect: 'none',\r\n  marginLeft: 8,\r\n  marginRight: 8\r\n});\r\n\r\nfunction insertSeparators(items, className, separator, styleProps) {\r\n  return items.reduce((acc, current, index) => {\r\n    if (index < items.length - 1) {\r\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\r\n        \"aria-hidden\": true,\r\n        className: className,\r\n        styleProps: styleProps,\r\n        children: separator\r\n      }, `separator-${index}`));\r\n    } else {\r\n      acc.push(current);\r\n    }\r\n\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiBreadcrumbs'\r\n  });\r\n\r\n  const {\r\n    children,\r\n    className,\r\n    component = 'nav',\r\n    expandText = 'Show path',\r\n    itemsAfterCollapse = 1,\r\n    itemsBeforeCollapse = 1,\r\n    maxItems = 8,\r\n    separator = '/'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\r\n\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    component,\r\n    expanded,\r\n    expandText,\r\n    itemsAfterCollapse,\r\n    itemsBeforeCollapse,\r\n    maxItems,\r\n    separator\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  const listRef = React.useRef(null);\r\n\r\n  const renderItemsBeforeAndAfter = allItems => {\r\n    const handleClickExpand = () => {\r\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\r\n      // Let's keep the focus in the component after expanding.\r\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\r\n      // By moving it to some link/button at least we have some announcement.\r\n\r\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\r\n\r\n      if (focusable) {\r\n        focusable.focus();\r\n      }\r\n    }; // This defends against someone passing weird input, to ensure that if all\r\n    // items would be shown anyway, we just show all items without the EllipsisItem\r\n\r\n\r\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\r\n      }\r\n\r\n      return allItems;\r\n    }\r\n\r\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\r\n      \"aria-label\": expandText,\r\n      onClick: handleClickExpand\r\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\r\n  };\r\n\r\n  const allItems = React.Children.toArray(children).filter(child => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    return /*#__PURE__*/React.isValidElement(child);\r\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\r\n    className: classes.li,\r\n    children: child\r\n  }, `child-${index}`));\r\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\r\n    ref: ref,\r\n    component: component,\r\n    color: \"textSecondary\",\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps\r\n  }, other, {\r\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\r\n      className: classes.ol,\r\n      ref: listRef,\r\n      styleProps: styleProps,\r\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, styleProps)\r\n    })\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * Override the default label for the expand button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Show path'\r\n   */\r\n  expandText: PropTypes.string,\r\n\r\n  /**\r\n   * If max items is exceeded, the number of items to show after the ellipsis.\r\n   * @default 1\r\n   */\r\n  itemsAfterCollapse: integerPropType,\r\n\r\n  /**\r\n   * If max items is exceeded, the number of items to show before the ellipsis.\r\n   * @default 1\r\n   */\r\n  itemsBeforeCollapse: integerPropType,\r\n\r\n  /**\r\n   * Specifies the maximum number of breadcrumbs to display. When there are more\r\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\r\n   * will be shown, with an ellipsis in between.\r\n   * @default 8\r\n   */\r\n  maxItems: integerPropType,\r\n\r\n  /**\r\n   * Custom separator node.\r\n   * @default '/'\r\n   */\r\n  separator: PropTypes.node,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default Breadcrumbs;"]},"metadata":{},"sourceType":"module"}