{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => styles.root || {};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = experimentalStyled('div', {}, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver\n})(() => {\n  return {\n    /* Styles applied to the root element. */\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  };\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    children,\n    className,\n    disableTypography = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"disableTypography\"]);\n\n  const styleProps = _extends({}, props, {\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: disableTypography ? children : /*#__PURE__*/_jsx(Typography, {\n      component: \"h2\",\n      variant: \"h6\",\n      children: children\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the children won't be wrapped by a typography component.\r\n   * For instance, this can be useful to render an h4 instead of the default h2.\r\n   * @default false\r\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default DialogTitle;","map":{"version":3,"sources":["C:/GitHub/GD32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/DialogTitle/DialogTitle.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","clsx","unstable_composeClasses","composeClasses","Typography","experimentalStyled","useThemeProps","getDialogTitleUtilityClass","jsx","_jsx","overridesResolver","props","styles","root","useUtilityClasses","styleProps","classes","slots","DialogTitleRoot","name","slot","margin","padding","flex","DialogTitle","forwardRef","inProps","ref","children","className","disableTypography","other","component","variant","process","env","NODE_ENV","propTypes","node","object","string","bool","sx"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport Typography from '../Typography';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => styles.root || {};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root']\r\n  };\r\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\r\n};\r\n\r\nconst DialogTitleRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiDialogTitle',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(() => {\r\n  return {\r\n    /* Styles applied to the root element. */\r\n    margin: 0,\r\n    padding: '16px 24px',\r\n    flex: '0 0 auto'\r\n  };\r\n});\r\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiDialogTitle'\r\n  });\r\n\r\n  const {\r\n    children,\r\n    className,\r\n    disableTypography = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"disableTypography\"]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    disableTypography\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other, {\r\n    children: disableTypography ? children : /*#__PURE__*/_jsx(Typography, {\r\n      component: \"h2\",\r\n      variant: \"h6\",\r\n      children: children\r\n    })\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the children won't be wrapped by a typography component.\r\n   * For instance, this can be useful to render an h4 instead of the default h2.\r\n   * @default false\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default DialogTitle;"]},"metadata":{},"sourceType":"module"}