{"ast":null,"code":"var _jsxFileName = \"C:\\\\Github\\\\GD32_Web_Project\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\DashboardNavbar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined'; // import InputIcon from '@material-ui/icons/Input';\n\nimport Logo from './Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardNavbar = ({\n  onMobileNavOpen,\n  ...rest\n}) => {\n  _s();\n\n  const [notifications] = useState([]);\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    elevation: 0,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(RouterLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        lgDown: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: notifications.length,\n            color: \"primary\",\n            variant: \"dot\",\n            children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        lgUp: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: onMobileNavOpen,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardNavbar, \"EoCfkFOjy/kCkbe+8JBSrfS5A2w=\");\n\n_c = DashboardNavbar;\nDashboardNavbar.propTypes = {\n  onMobileNavOpen: PropTypes.func\n};\nexport default DashboardNavbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbar\");","map":{"version":3,"sources":["C:/Github/GD32_Web_Project/Workspace/GDJ32_E_FrontEnd/src/components/DashboardNavbar.js"],"names":["useState","Link","RouterLink","PropTypes","AppBar","Badge","Box","Hidden","IconButton","Toolbar","MenuIcon","NotificationsIcon","Logo","DashboardNavbar","onMobileNavOpen","rest","notifications","flexGrow","length","propTypes","func"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,MADF,EAEEC,KAFF,EAGEC,GAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,OANF,QAOO,mBAPP;AAQA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,iBAAP,MAA8B,0CAA9B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAGA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,eAAF;AAAmB,KAAGC;AAAtB,CAAD,KAAkC;AAAA;;AACxD,QAAM,CAACC,aAAD,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,EAAE,CADb;AAAA,OAEMe,IAFN;AAAA,2BAIE,QAAC,OAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,GAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEE,UAAAA,QAAQ,EAAE;AAAZ;AAAT;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAC,SAAlB;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,YAAY,EAAED,aAAa,CAACE,MAD9B;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,OAAO,EAAC,KAHV;AAAA,mCAKE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eAmBE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,SADR;AAEE,UAAA,OAAO,EAAEJ,eAFX;AAAA,iCAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAtCD;;GAAMD,e;;KAAAA,e;AAwCNA,eAAe,CAACM,SAAhB,GAA4B;AAC1BL,EAAAA,eAAe,EAAEX,SAAS,CAACiB;AADD,CAA5B;AAIA,eAAeP,eAAf","sourcesContent":["import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\n// import InputIcon from '@material-ui/icons/Input';\r\nimport Logo from './Logo';\r\n\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Hidden lgDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          {/* <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton> */}\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n"]},"metadata":{},"sourceType":"module"}