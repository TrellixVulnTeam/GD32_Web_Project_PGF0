{"ast":null,"code":"import axios from 'axios'; // axios를 사용하는 것을 의미\n// const BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\n\nclass BoardService {\n  constructor() {\n    this.getBoards = (pNum, objCnt, pageCnt) => {\n      console.log('getBoards');\n      console.log('pNum : ', pNum);\n      console.log('objCnt : ', objCnt);\n      console.log('pageCnt : ', pageCnt); // return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\n\n      return axios.get(`/api/board?p_num=${pNum}&objcnt=${objCnt}&pagecnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\n    };\n\n    this.createBoard = board => {\n      console.log('createBoards');\n      return axios.post('/api/board', board);\n    };\n\n    this.getOneBoard = idx => {\n      console.log(`readBoards: ${idx}`);\n      return axios.get(`/api/board/${idx}`);\n    };\n\n    this.updateBoard = (idx, board) => {\n      console.log(idx);\n      return axios.put(`/api/board/${idx}`, board);\n    };\n\n    this.deleteBoard = idx => {\n      console.log(idx);\n      return axios.delete(`/api/board/${idx}`);\n    };\n  }\n\n}\n\nexport default new BoardService();","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/service/BoardService.js"],"names":["axios","BoardService","getBoards","pNum","objCnt","pageCnt","console","log","get","createBoard","board","post","getOneBoard","idx","updateBoard","put","deleteBoard","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;AAE3B;;AAEA,MAAMC,YAAN,CAAmB;AAAA;AAAA,SACjBC,SADiB,GACL,CAACC,IAAD,EAAOC,MAAP,EAAeC,OAAf,KAA2B;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,IAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,MAAzB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,OAA1B,EAJqC,CAKrC;;AACA,aAAOL,KAAK,CAACQ,GAAN,CACJ,oBAAmBL,IAAK,WAAUC,MAAO,YAAWC,OAAQ,EADxD,CAAP,CANqC,CAQlC;AACJ,KAVgB;;AAAA,SAYjBI,WAZiB,GAYFC,KAAD,IAAW;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAOP,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyBD,KAAzB,CAAP;AACD,KAfgB;;AAAA,SAsBjBE,WAtBiB,GAsBFC,GAAD,IAAS;AACrBP,MAAAA,OAAO,CAACC,GAAR,CAAa,eAAcM,GAAI,EAA/B;AACA,aAAOb,KAAK,CAACQ,GAAN,CAAW,cAAaK,GAAI,EAA5B,CAAP;AACD,KAzBgB;;AAAA,SA+BjBC,WA/BiB,GA+BH,CAACD,GAAD,EAAMH,KAAN,KAAgB;AAC5BJ,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,aAAOb,KAAK,CAACe,GAAN,CAAW,cAAaF,GAAI,EAA5B,EAA+BH,KAA/B,CAAP;AACD,KAlCgB;;AAAA,SAwCjBM,WAxCiB,GAwCFH,GAAD,IAAS;AACrBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,aAAOb,KAAK,CAACiB,MAAN,CAAc,cAAaJ,GAAI,EAA/B,CAAP;AACD,KA3CgB;AAAA;;AAAA;;AA8CnB,eAAe,IAAIZ,YAAJ,EAAf","sourcesContent":["import axios from 'axios'; // axios를 사용하는 것을 의미\r\n\r\n// const BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\r\n\r\nclass BoardService {\r\n  getBoards = (pNum, objCnt, pageCnt) => {\r\n    console.log('getBoards');\r\n    console.log('pNum : ', pNum);\r\n    console.log('objCnt : ', objCnt);\r\n    console.log('pageCnt : ', pageCnt);\r\n    // return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\r\n    return axios.get(\r\n      `/api/board?p_num=${pNum}&objcnt=${objCnt}&pagecnt=${pageCnt}`\r\n    ); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\r\n  };\r\n\r\n  createBoard = (board) => {\r\n    console.log('createBoards');\r\n    return axios.post('/api/board', board);\r\n  };\r\n\r\n  // getOneBoard(index){\r\n  //     console.log(\"readBoards: \"+index);\r\n  //     return axios.get(BOARD_API_BASE_URL + \"/\" + index);\r\n  // }\r\n\r\n  getOneBoard = (idx) => {\r\n    console.log(`readBoards: ${idx}`);\r\n    return axios.get(`/api/board/${idx}`);\r\n  };\r\n\r\n  // updateBoard(index, board){\r\n  //     return axios.put(BOARD_API_BASE_URL + \"/\" + index,board);\r\n  // }\r\n\r\n  updateBoard = (idx, board) => {\r\n    console.log(idx);\r\n    return axios.put(`/api/board/${idx}`, board);\r\n  };\r\n\r\n  // deleteBoard(index) {\r\n  //     return axios.delete(BOARD_API_BASE_URL + \"/\" + index);\r\n  // }\r\n\r\n  deleteBoard = (idx) => {\r\n    console.log(idx);\r\n    return axios.delete(`/api/board/${idx}`);\r\n  };\r\n}\r\n\r\nexport default new BoardService();\r\n"]},"metadata":{},"sourceType":"module"}