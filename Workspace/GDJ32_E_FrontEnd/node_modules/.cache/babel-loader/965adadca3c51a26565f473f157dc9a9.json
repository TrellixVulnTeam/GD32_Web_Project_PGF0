{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  var styleProps = props.styleProps;\n  return deepmerge(_extends({}, styleProps.row && styles.row), styles.root || {});\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      row = styleProps.row;\n  var slots = {\n    root: ['root', row && 'row']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nvar FormGroupRoot = experimentalStyled('div', {}, {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function (_ref) {\n  var styleProps = _ref.styleProps;\n  return _extends({\n    /* Styles applied to the root element. */\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  }, styleProps.row && {\n    flexDirection: 'row'\n  });\n});\n/**\r\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\r\n * It provides compact row layout.\r\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\r\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  var className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutPropertiesLoose(props, [\"className\", \"row\"]);\n\n  var styleProps = _extends({}, props, {\n    row: row\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Display group of elements in a compact row.\r\n   * @default false\r\n   */\n  row: PropTypes.bool,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormGroup;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/FormGroup/FormGroup.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","getFormGroupUtilityClass","jsx","_jsx","overridesResolver","props","styles","styleProps","row","root","useUtilityClasses","classes","slots","FormGroupRoot","name","slot","display","flexDirection","flexWrap","FormGroup","forwardRef","inProps","ref","className","other","process","env","NODE_ENV","propTypes","children","node","object","string","bool","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { getFormGroupUtilityClass } from './formGroupClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, styleProps.row && styles.row), styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    row\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', row && 'row']\r\n  };\r\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\r\n};\r\n\r\nconst FormGroupRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiFormGroup',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the root element. */\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  flexWrap: 'wrap'\r\n}, styleProps.row && {\r\n  flexDirection: 'row'\r\n}));\r\n/**\r\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\r\n * It provides compact row layout.\r\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\r\n */\r\n\r\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiFormGroup'\r\n  });\r\n\r\n  const {\r\n    className,\r\n    row = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"row\"]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    row\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Display group of elements in a compact row.\r\n   * @default false\r\n   */\r\n  row: PropTypes.bool,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default FormGroup;"]},"metadata":{},"sourceType":"module"}