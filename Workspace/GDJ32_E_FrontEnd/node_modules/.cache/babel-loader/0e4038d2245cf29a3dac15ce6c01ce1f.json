{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GD32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\board\\\\ListBoardComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Box, Button, Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { Helmet } from 'react-helmet';\nimport { Formik } from 'formik';\nimport BoardService from '../../service/BoardService';\nimport { values } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Category = {\n  NOTICE: {\n    value: 0,\n    name: \"공지사항\"\n  },\n  FREEBOARD: {\n    value: 1,\n    name: \"자유게시판\"\n  },\n  STORAGE: {\n    value: 2,\n    name: \"자료실\"\n  },\n  MARCKET: {\n    value: 3,\n    name: \"중고나라\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    },\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst initialValues = {\n  idx: ''\n};\n\nconst ListBoardComponent = () => {\n  _s();\n\n  const history = useNavigate();\n  const [pNum, setNum] = useState(1);\n  const [paging, setPage] = useState({});\n  const [boards, setBoards] = useState([]);\n  const classes = useStyles(); // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\n\n  useEffect(() => {\n    // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\n    BoardService.getBoards(pNum, 10, 10).then(res => {\n      setNum(res.data.pagingData.currentPageNum);\n      setPage(res.data.pagingData);\n      setBoards(res.data.list);\n    });\n  }, []); // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\n\n  const listBoard = pageNum => {\n    console.log(\"listBoard\", pageNum);\n    console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\n    BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then(res => {\n      setNum(res.data.pagingData.currentPageNum);\n      setPage(res.data.pagingData);\n      setBoards(res.data.list);\n    });\n  };\n\n  const handleChange = (event, value) => {\n    setNum(value);\n    console.log(\"value : \", value);\n    console.log(paging);\n    listBoard(value);\n    history('/app/board');\n  };\n\n  const getBoardCategory = value => {\n    console.log(\"getBoardCategory\");\n    let name = \"Not Defined\";\n\n    switch (value) {\n      case Category.NOTICE.value:\n        name = Category.NOTICE.name;\n        break;\n\n      case Category.FREEBOARD.value:\n        name = Category.FREEBOARD.name;\n        break;\n\n      case Category.STORAGE.value:\n        name = Category.STORAGE.name;\n        break;\n\n      case Category.MARCKET.value:\n        name = Category.MARCKET.name;\n        break;\n\n      default:\n        name = \"Not Defined\";\n        break;\n    }\n\n    return name;\n  };\n\n  const getBoardCreateDay = value => {\n    console.log(value);\n    return value;\n  }; // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\n\n\n  const readBoard = (event, idx) => {\n    // console.log(\"readBoard event\", idx);\n    // event.preventDefault();\n    console.log(\"###################\", idx);\n    BoardService.getOneBoard(idx).then(res => {\n      // history(`/read-board/${idx}`);\n      console.log(res);\n    }).catch(err => {\n      console.log(`getBoard err : ${err}`);\n    });\n  }; // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\n  // this.props.history.push('이동할 링크'); -> 일반적\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\n  // const createBoard = () => {\n  //     history(\"/create-board/_create\");\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          children: () => /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table\",\n              style: {\n                padding: \"0 12px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table table-striped table-bordered\",\n                children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"col\", {\n                    width: \"5%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n                    width: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n                    width: \"50%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n                    width: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n                    width: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n                    width: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n                    width: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\uBC88\\uD638\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 157,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 158,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\uC81C\\uBAA9\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\uC791\\uC131\\uC790 \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\uC791\\uC131\\uC77C \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 161,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\uC870\\uD68C\\uC218\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"\\uC88B\\uC544\\uC694\\uC218\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 163,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  initialValues: initialValues,\n                  children: (values, boards.map(board => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", board.idx, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", getBoardCategory(board.category), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        onClick: values => {\n                          readBoard(values);\n                        },\n                        value: board.idx,\n                        name: \"idx\",\n                        children: board.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", board.id, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", getBoardCreateDay(board.created_day), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", board.viewCnt, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [\" \", board.likes, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 45\n                    }, this)]\n                  }, board.idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 41\n                  }, this)))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Page: \", pNum]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          count: paging.pageNumCountTotal,\n          page: pNum,\n          onChange: handleChange,\n          value: pNum,\n          name: \"pNum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ListBoardComponent, \"W2kN6vo87f7bNsjyP35mYK3tinQ=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c = ListBoardComponent;\nexport default ListBoardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBoardComponent\");","map":{"version":3,"sources":["C:/GitHub/GD32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ListBoardComponent.js"],"names":["React","useEffect","useState","useNavigate","Box","Button","Container","makeStyles","Typography","Pagination","Helmet","Formik","BoardService","values","Category","NOTICE","value","name","FREEBOARD","STORAGE","MARCKET","useStyles","theme","root","marginTop","spacing","margin","initialValues","idx","ListBoardComponent","history","pNum","setNum","paging","setPage","boards","setBoards","classes","getBoards","then","res","data","pagingData","currentPageNum","list","listBoard","pageNum","console","log","pageNumCountTotal","handleChange","event","getBoardCategory","getBoardCreateDay","readBoard","getOneBoard","catch","err","backgroundColor","display","flexDirection","height","justifyContent","padding","map","board","category","title","id","created_day","viewCnt","likes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Container\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Formik } from 'formik';\r\nimport BoardService from '../../service/BoardService';\r\nimport { values } from 'lodash';\r\n\r\nconst Category = {\r\n        NOTICE: {value: 0, name: \"공지사항\"},\r\n        FREEBOARD: {value: 1, name: \"자유게시판\"},\r\n        STORAGE: {value: 2, name: \"자료실\"},\r\n        MARCKET: {value: 3, name: \"중고나라\"}\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n        },\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nconst initialValues = {\r\n    idx: '',\r\n};\r\n\r\nconst ListBoardComponent = () => {    \r\n    const history = useNavigate();\r\n    const [pNum, setNum] = useState(1);\r\n    const [paging, setPage] = useState({});\r\n    const [boards, setBoards] = useState([]);\r\n\r\n    const classes = useStyles();\r\n    \r\n    // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n    useEffect(() => {\r\n        // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\r\n        BoardService.getBoards(pNum, 10, 10).then((res) => {\r\n            setNum(res.data.pagingData.currentPageNum);\r\n            setPage(res.data.pagingData);\r\n            setBoards(res.data.list);\r\n        });\r\n    }, []);\r\n    \r\n    // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n    const listBoard = (pageNum) => {\r\n        console.log(\"listBoard\", pageNum);\r\n\r\n        console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\r\n        BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\r\n            setNum(res.data.pagingData.currentPageNum);\r\n            setPage(res.data.pagingData);\r\n            setBoards(res.data.list);\r\n        });\r\n    }\r\n\r\n    const handleChange = (event, value) => {\r\n        setNum(value);\r\n        console.log(\"value : \", value);\r\n        console.log(paging);\r\n        listBoard(value);\r\n        history('/app/board');\r\n    }\r\n\r\n    const getBoardCategory = (value) => {\r\n        console.log(\"getBoardCategory\");\r\n        let name = \"Not Defined\";\r\n        switch(value) {\r\n            case Category.NOTICE.value:\r\n                name = Category.NOTICE.name;\r\n                break;\r\n            case Category.FREEBOARD.value:\r\n                name = Category.FREEBOARD.name;\r\n                break;\r\n            case Category.STORAGE.value:\r\n                name = Category.STORAGE.name;\r\n                break;\r\n            case Category.MARCKET.value:\r\n                name = Category.MARCKET.name;\r\n                break;\r\n            default:\r\n                name = \"Not Defined\";\r\n                break;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    const getBoardCreateDay = (value) => {\r\n        console.log(value);\r\n        return value;\r\n    }\r\n\r\n    // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n    const readBoard = (event, idx) => {\r\n        // console.log(\"readBoard event\", idx);\r\n        // event.preventDefault();\r\n        console.log(\"###################\", idx);\r\n        BoardService.getOneBoard(idx)\r\n            .then(res => {\r\n                // history(`/read-board/${idx}`);\r\n                console.log(res);\r\n            })\r\n            .catch(err => {\r\n                console.log(`getBoard err : ${ err }`);\r\n            });\r\n    }\r\n\r\n    // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n    // this.props.history.push('이동할 링크'); -> 일반적\r\n    // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n    // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n    // const createBoard = () => {\r\n    //     history(\"/create-board/_create\");\r\n    // }\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>게시판 목록</title>\r\n            </Helmet>\r\n            <Box\r\n              sx={{\r\n                backgroundColor: 'background.default',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: '100%',\r\n                justifyContent: 'center'\r\n              }}\r\n            >\r\n            <Container maxWidth=\"sm\">\r\n              <Formik initialValues={initialValues}>\r\n                {() => (\r\n                  <Box>\r\n                    <div className =\"table\" style={{ padding: \"0 12px\" }} >\r\n                        <table className=\"table table-striped table-bordered\">\r\n                            <colgroup>\r\n                                <col width=\"5%\" />\r\n                                <col width=\"*\" />\r\n                                <col width=\"50%\" />\r\n                                <col width=\"*\" />\r\n                                <col width=\"*\" />\r\n                                <col width=\"*\" />\r\n                                <col width=\"*\" />\r\n                            </colgroup>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>번호</th>\r\n                                    <th>카테고리 </th>\r\n                                    <th>제목</th>\r\n                                    <th>작성자 </th>\r\n                                    <th>작성일 </th>\r\n                                    <th>조회수</th>\r\n                                    <th>좋아요수</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody initialValues={initialValues}>\r\n                                {\r\n                                    values,\r\n                                    boards.map(\r\n                                        board => \r\n                                        <tr key = {board.idx}>\r\n                                            <td> {board.idx} </td>\r\n                                            <td> {getBoardCategory(board.category)} </td>\r\n                                                <td>\r\n                                                    <Button onClick={(values) => { readBoard(values);}} value={board.idx} name=\"idx\">\r\n                                                        {board.title}\r\n                                                    </Button>\r\n                                                </td>\r\n                                            <td> {board.id} </td>\r\n                                            <td> {getBoardCreateDay(board.created_day)} </td>\r\n                                            <td> {board.viewCnt} </td>\r\n                                            <td> {board.likes} </td>\r\n                                        </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                  </Box>\r\n                )}\r\n              </Formik>\r\n            </Container>\r\n        </Box>\r\n        <div>\r\n            <div className={classes.root}>\r\n                <Typography>Page: {pNum}</Typography>\r\n                <Pagination count={paging.pageNumCountTotal} page={pNum} onChange={handleChange} value={pNum} name=\"pNum\"/>\r\n            </div>\r\n        </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default ListBoardComponent;\r\n"]},"metadata":{},"sourceType":"module"}