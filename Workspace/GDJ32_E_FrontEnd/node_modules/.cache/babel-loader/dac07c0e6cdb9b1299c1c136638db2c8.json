{"ast":null,"code":"import _slicedToArray from\"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{useNavigate,useLocation}from'react-router-dom';import{Button,Box}from'@material-ui/core';import Table from'@material-ui/core/Table';import TableHead from'@material-ui/core/TableHead';import TableBody from'@material-ui/core/TableBody';import TableRow from'@material-ui/core/TableRow';import TableCell from'@material-ui/core/TableCell';import{withStyles,makeStyles}from'@material-ui/core/styles';import Typography from'@material-ui/core/Typography';import Pagination from'@material-ui/lab/Pagination';import CreateOutlinedIcon from'@material-ui/icons/CreateOutlined';import BoardService from'../../service/BoardService';// import '../../css/ListBoardComponent.css';\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Category={NOTICE:{value:0,name:'공지사항'},FREEBOARD:{value:1,name:'자유게시판'},STORAGE:{value:2,name:'자료실'},MARCKET:{value:3,name:'중고나라'}};var useStyles=makeStyles(function(theme){return{root:{'& > * + *':{marginTop:theme.spacing(2)},'& > *':{margin:theme.spacing(1)}}};});var PaginationStyle=withStyles({ul:{justifyContent:'center'}})(Pagination);var ListBoardComponent=function ListBoardComponent(){var history=useNavigate();var _useLocation=useLocation(),state=_useLocation.state;var pNum=1;var _useState=useState(1),_useState2=_slicedToArray(_useState,2),pageNum=_useState2[0],setNum=_useState2[1];// const [pNum, setNum] = useState(() => {\n//   if (state != null) return state.pIdx;\n//   return 1;\n// });\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),paging=_useState4[0],setPage=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),boards=_useState6[0],setBoards=_useState6[1];var classes=useStyles();// 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\nuseEffect(function(){if(state!==null)pNum=state.pIdx;// getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\nBoardService.getBoards(pNum,10,10).then(function(res){console.log(res.data.pagingData);setNum(res.data.pagingData.currentPageNum);pNum=res.data.pagingData.currentPageNum;setPage(res.data.pagingData);setBoards(res.data.list);console.log(res.data.list);console.log('pNum : ',pNum);});},[state]);// 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\n// const listBoard = (pageNum) => {\n//     console.log(\"listBoard\", pageNum);\n//\n//     console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\n//     BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\n//         setNum(res.data.pagingData.currentPageNum);\n//         setPage(res.data.pagingData);\n//         setBoards(res.data.list);\n//     });\n// }\nvar handleChange=function handleChange(event,value){// setNum(value);\npNum=value;console.log('value : ',value);console.log(paging);history(\"/app/board/\".concat(value),{replace:false,state:{pIdx:pNum}});// listBoard(value);\n};var getBoardCategory=function getBoardCategory(value){console.log('getBoardCategory');var name='Not Defined';switch(value){case Category.NOTICE.value:name=Category.NOTICE.name;break;case Category.FREEBOARD.value:name=Category.FREEBOARD.name;break;case Category.STORAGE.value:name=Category.STORAGE.name;break;case Category.MARCKET.value:name=Category.MARCKET.name;break;default:name='Not Defined';break;}return name;};var getBoardCreateDay=function getBoardCreateDay(value){var createDay=new Intl.DateTimeFormat('ko-KR').format(Date.parse(value));return createDay;};// # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\nvar readBoard=function readBoard(event){// console.log(\"readBoard event\", idx);\nevent.preventDefault();console.log('###################',event.target.getAttribute('value'));var idx=event.target.getAttribute('value');BoardService.getOneBoard(event.target.getAttribute('value')).then(function(res){console.log(res);console.log(\"/read-board/\".concat(res.data.idx));history(\"/app/read-board/\".concat(idx),{replace:true,state:{idx:res.data.idx,board:res.data}});}).catch(function(err){console.log(err);});};// # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\n// this.props.history.push('이동할 링크'); -> 일반적\n// 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\n// this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\nvar createBoard=function createBoard(event){event.preventDefault();var pIdx='_create';history('/app/create-board/_create',{replace:true,state:{idx:pIdx}});};return/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Box,{className:\"row\",children:/*#__PURE__*/_jsxs(Button,{variant:\"contained\",color:\"primary\",className:\"btn btn-primary\",startIcon:/*#__PURE__*/_jsx(CreateOutlinedIcon,{}),onClick:function onClick(e){return createBoard(e);},children:[' ',\"\\uAE00 \\uC791\\uC131\"]})}),/*#__PURE__*/_jsx(Box,{className:\"table\",style:{padding:'0 12px'},children:/*#__PURE__*/_jsxs(Table,{className:\"table table-striped table-bordered\",children:[/*#__PURE__*/_jsxs(\"colgroup\",{children:[/*#__PURE__*/_jsx(\"col\",{width:\"*\"}),/*#__PURE__*/_jsx(\"col\",{width:\"*\"}),/*#__PURE__*/_jsx(\"col\",{width:\"50%\"}),/*#__PURE__*/_jsx(\"col\",{width:\"*\"}),/*#__PURE__*/_jsx(\"col\",{width:\"*\"}),/*#__PURE__*/_jsx(\"col\",{width:\"*\"}),/*#__PURE__*/_jsx(\"col\",{width:\"*\"})]}),/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"\\uCE74\\uD14C\\uACE0\\uB9AC \"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"\\uC791\\uC131\\uC790 \"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"\\uC791\\uC131\\uC77C \"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"\\uC870\\uD68C\\uC218\"}),/*#__PURE__*/_jsx(TableCell,{align:\"center\",children:\"\\uC88B\\uC544\\uC694\\uC218\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:boards.map(function(board){return/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsxs(TableCell,{align:\"center\",children:[\" \",board.idx,\" \"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"center\",children:[' ',getBoardCategory(board.category),' ']}),/*#__PURE__*/_jsx(TableCell,{children:/*#__PURE__*/_jsx(\"a\",{href:\"#\",value:board.idx,onClick:function onClick(e){return readBoard(e);},children:board.title})}),/*#__PURE__*/_jsxs(TableCell,{align:\"center\",children:[\" \",board.id,\" \"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"center\",children:[' ',getBoardCreateDay(board.createtDay),' ']}),/*#__PURE__*/_jsxs(TableCell,{align:\"center\",children:[\" \",board.viewCnt,\" \"]}),/*#__PURE__*/_jsxs(TableCell,{align:\"center\",children:[\" \",board.likes,\" \"]})]},board.idx);})})]})}),/*#__PURE__*/_jsx(Box,{className:classes.root,children:/*#__PURE__*/_jsxs(Typography,{children:[\"Page: \",pageNum,/*#__PURE__*/_jsx(PaginationStyle,{count:paging.pageNumCountTotal,page:pageNum,onChange:handleChange,value:pageNum,name:\"pageNum\"})]})})]});};export default ListBoardComponent;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ListBoardComponent.js"],"names":["React","useEffect","useState","useNavigate","useLocation","Button","Box","Table","TableHead","TableBody","TableRow","TableCell","withStyles","makeStyles","Typography","Pagination","CreateOutlinedIcon","BoardService","Category","NOTICE","value","name","FREEBOARD","STORAGE","MARCKET","useStyles","theme","root","marginTop","spacing","margin","PaginationStyle","ul","justifyContent","ListBoardComponent","history","state","pNum","pageNum","setNum","paging","setPage","boards","setBoards","classes","pIdx","getBoards","then","res","console","log","data","pagingData","currentPageNum","list","handleChange","event","replace","getBoardCategory","getBoardCreateDay","createDay","Intl","DateTimeFormat","format","Date","parse","readBoard","preventDefault","target","getAttribute","idx","getOneBoard","board","catch","err","createBoard","e","padding","map","category","title","id","createtDay","viewCnt","likes","pageNumCountTotal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Button, Box } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport BoardService from '../../service/BoardService';\r\n// import '../../css/ListBoardComponent.css';\r\n\r\nconst Category = {\r\n  NOTICE: { value: 0, name: '공지사항' },\r\n  FREEBOARD: { value: 1, name: '자유게시판' },\r\n  STORAGE: { value: 2, name: '자료실' },\r\n  MARCKET: { value: 3, name: '중고나라' }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst PaginationStyle = withStyles({\r\n  ul: {\r\n    justifyContent: 'center'\r\n  }\r\n})(Pagination);\r\n\r\nconst ListBoardComponent = () => {\r\n  const history = useNavigate();\r\n  const { state } = useLocation();\r\n  let pNum = 1;\r\n  const [pageNum, setNum] = useState(1);\r\n  // const [pNum, setNum] = useState(() => {\r\n  //   if (state != null) return state.pIdx;\r\n  //   return 1;\r\n  // });\r\n  const [paging, setPage] = useState({});\r\n  const [boards, setBoards] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n  useEffect(() => {\r\n    if (state !== null) pNum = state.pIdx;\r\n    // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\r\n    BoardService.getBoards(pNum, 10, 10).then((res) => {\r\n      console.log(res.data.pagingData);\r\n      setNum(res.data.pagingData.currentPageNum);\r\n      pNum = res.data.pagingData.currentPageNum;\r\n      setPage(res.data.pagingData);\r\n      setBoards(res.data.list);\r\n      console.log(res.data.list);\r\n      console.log('pNum : ', pNum);\r\n    });\r\n  }, [state]);\r\n\r\n  // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n  // const listBoard = (pageNum) => {\r\n  //     console.log(\"listBoard\", pageNum);\r\n  //\r\n  //     console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\r\n  //     BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\r\n  //         setNum(res.data.pagingData.currentPageNum);\r\n  //         setPage(res.data.pagingData);\r\n  //         setBoards(res.data.list);\r\n  //     });\r\n  // }\r\n\r\n  const handleChange = (event, value) => {\r\n    // setNum(value);\r\n    pNum = value;\r\n    console.log('value : ', value);\r\n    console.log(paging);\r\n    history(`/app/board/${value}`, {\r\n      replace: false,\r\n      state: {\r\n        pIdx: pNum\r\n      }\r\n    });\r\n    // listBoard(value);\r\n  };\r\n\r\n  const getBoardCategory = (value) => {\r\n    console.log('getBoardCategory');\r\n    let name = 'Not Defined';\r\n\r\n    switch (value) {\r\n      case Category.NOTICE.value:\r\n        name = Category.NOTICE.name;\r\n        break;\r\n      case Category.FREEBOARD.value:\r\n        name = Category.FREEBOARD.name;\r\n        break;\r\n      case Category.STORAGE.value:\r\n        name = Category.STORAGE.name;\r\n        break;\r\n      case Category.MARCKET.value:\r\n        name = Category.MARCKET.name;\r\n        break;\r\n      default:\r\n        name = 'Not Defined';\r\n        break;\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const getBoardCreateDay = (value) => {\r\n    const createDay = new Intl.DateTimeFormat('ko-KR').format(\r\n      Date.parse(value)\r\n    );\r\n    return createDay;\r\n  };\r\n\r\n  // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n  const readBoard = (event) => {\r\n    // console.log(\"readBoard event\", idx);\r\n    event.preventDefault();\r\n    console.log('###################', event.target.getAttribute('value'));\r\n    const idx = event.target.getAttribute('value');\r\n    BoardService.getOneBoard(event.target.getAttribute('value'))\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(`/read-board/${res.data.idx}`);\r\n        history(`/app/read-board/${idx}`, {\r\n          replace: true,\r\n          state: {\r\n            idx: res.data.idx,\r\n            board: res.data\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n  // this.props.history.push('이동할 링크'); -> 일반적\r\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n  const createBoard = (event) => {\r\n    event.preventDefault();\r\n    const pIdx = '_create';\r\n    history('/app/create-board/_create', {\r\n      replace: true,\r\n      state: { idx: pIdx }\r\n    });\r\n  };\r\n  return (\r\n    <Box>\r\n      <h2 className=\"text-center\">게시판 목록</h2>\r\n      <br />\r\n      <Box className=\"row\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"btn btn-primary\"\r\n          startIcon={<CreateOutlinedIcon />}\r\n          onClick={(e) => createBoard(e)}\r\n        >\r\n          {' '}\r\n          글 작성\r\n        </Button>\r\n      </Box>\r\n      <Box className=\"table\" style={{ padding: '0 12px' }}>\r\n        <Table className=\"table table-striped table-bordered\">\r\n          <colgroup>\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"50%\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">번호</TableCell>\r\n              <TableCell align=\"center\">카테고리 </TableCell>\r\n              <TableCell align=\"center\">제목</TableCell>\r\n              <TableCell align=\"center\">작성자 </TableCell>\r\n              <TableCell align=\"center\">작성일 </TableCell>\r\n              <TableCell align=\"center\">조회수</TableCell>\r\n              <TableCell align=\"center\">좋아요수</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {boards.map((board) => (\r\n              <TableRow key={board.idx}>\r\n                <TableCell align=\"center\"> {board.idx} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {' '}\r\n                  {getBoardCategory(board.category)}{' '}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <a href=\"#\" value={board.idx} onClick={(e) => readBoard(e)}>\r\n                    {board.title}\r\n                  </a>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\"> {board.id} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {' '}\r\n                  {getBoardCreateDay(board.createtDay)}{' '}\r\n                </TableCell>\r\n                <TableCell align=\"center\"> {board.viewCnt} </TableCell>\r\n                <TableCell align=\"center\"> {board.likes} </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n      <Box className={classes.root}>\r\n        <Typography>\r\n          Page: {pageNum}\r\n          <PaginationStyle\r\n            count={paging.pageNumCountTotal}\r\n            page={pageNum}\r\n            onChange={handleChange}\r\n            value={pageNum}\r\n            name=\"pageNum\"\r\n          />\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListBoardComponent;\r\n"]},"metadata":{},"sourceType":"module"}