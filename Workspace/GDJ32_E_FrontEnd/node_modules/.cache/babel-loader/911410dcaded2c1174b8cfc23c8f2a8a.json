{"ast":null,"code":"import _classCallCheck from\"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import axios from'axios';// axios를 사용하는 것을 의미\nvar BOARD_API_BASE_URL=\"http://localhost:8080/api/board\";// spring boot api url를 정의\nvar BoardService=function BoardService(){_classCallCheck(this,BoardService);this.getBoards=function(pNum,objCnt,pageCnt){console.log(\"getBoards\");return axios.get(\"\".concat(BOARD_API_BASE_URL,\"?p_num=\").concat(pNum,\"&objCnt=\").concat(objCnt,\"&pageCnt=\").concat(pageCnt));// 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\n};this.createBoard=function(board){console.log(\"createBoards\");return axios.post(BOARD_API_BASE_URL,board);};this.getOneBoard=function(idx){console.log(\"readBoards: \".concat(idx));return axios.get(\"\".concat(BOARD_API_BASE_URL,\"/\").concat(idx));};this.updateBoard=function(idx,board){console.log(idx);return axios.put(\"\".concat(BOARD_API_BASE_URL,\"/\").concat(idx),board);};this.deleteBoard=function(idx){console.log(idx);return axios.delete(\"\".concat(BOARD_API_BASE_URL,\"/\").concat(idx));};};export default new BoardService();","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/service/BoardService.js"],"names":["axios","BOARD_API_BASE_URL","BoardService","getBoards","pNum","objCnt","pageCnt","console","log","get","createBoard","board","post","getOneBoard","idx","updateBoard","put","deleteBoard","delete"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAA2B;AAE3B,GAAMC,CAAAA,kBAAkB,CAAG,iCAA3B,CAA8D;GAExDC,CAAAA,Y,iEAEFC,S,CAAY,SAACC,IAAD,CAAOC,MAAP,CAAeC,OAAf,CAA2B,CACnCC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACA,MAAOR,CAAAA,KAAK,CAACS,GAAN,WAAaR,kBAAb,mBAAyCG,IAAzC,oBAAwDC,MAAxD,qBAA0EC,OAA1E,EAAP,CAA6F;AAChG,C,MAEDI,W,CAAc,SAACC,KAAD,CAAW,CACrBJ,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,MAAOR,CAAAA,KAAK,CAACY,IAAN,CAAWX,kBAAX,CAA+BU,KAA/B,CAAP,CACH,C,MAODE,W,CAAc,SAACC,GAAD,CAAS,CACnBP,OAAO,CAACC,GAAR,uBAA2BM,GAA3B,GACA,MAAOd,CAAAA,KAAK,CAACS,GAAN,WAAaR,kBAAb,aAAmCa,GAAnC,EAAP,CACH,C,MAMDC,W,CAAc,SAACD,GAAD,CAAMH,KAAN,CAAgB,CAC1BJ,OAAO,CAACC,GAAR,CAAYM,GAAZ,EACA,MAAOd,CAAAA,KAAK,CAACgB,GAAN,WAAaf,kBAAb,aAAmCa,GAAnC,EAA0CH,KAA1C,CAAP,CACH,C,MAMDM,W,CAAc,SAACH,GAAD,CAAS,CACnBP,OAAO,CAACC,GAAR,CAAYM,GAAZ,EACA,MAAOd,CAAAA,KAAK,CAACkB,MAAN,WAAgBjB,kBAAhB,aAAsCa,GAAtC,EAAP,CACH,C,GAKL,cAAe,IAAIZ,CAAAA,YAAJ,EAAf","sourcesContent":["import axios from 'axios'; // axios를 사용하는 것을 의미\r\n\r\nconst BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\r\n\r\nclass BoardService {\r\n\r\n    getBoards = (pNum, objCnt, pageCnt) => {\r\n        console.log(\"getBoards\");\r\n        return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\r\n    }\r\n\r\n    createBoard = (board) => {\r\n        console.log(\"createBoards\");\r\n        return axios.post(BOARD_API_BASE_URL, board);\r\n    }\r\n\r\n    // getOneBoard(index){\r\n    //     console.log(\"readBoards: \"+index);\r\n    //     return axios.get(BOARD_API_BASE_URL + \"/\" + index);\r\n    // }\r\n\r\n    getOneBoard = (idx) => {\r\n        console.log(`readBoards: ${idx}`);\r\n        return axios.get(`${BOARD_API_BASE_URL}/${idx}`);\r\n    }\r\n\r\n    // updateBoard(index, board){\r\n    //     return axios.put(BOARD_API_BASE_URL + \"/\" + index,board);\r\n    // }\r\n\r\n    updateBoard = (idx, board) => {\r\n        console.log(idx);\r\n        return axios.put(`${BOARD_API_BASE_URL}/${idx}`, board);\r\n    }\r\n\r\n    // deleteBoard(index) {\r\n    //     return axios.delete(BOARD_API_BASE_URL + \"/\" + index);\r\n    // }\r\n\r\n    deleteBoard = (idx) => {\r\n        console.log(idx);\r\n        return axios.delete(`${BOARD_API_BASE_URL}/${idx}`);\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default new BoardService();"]},"metadata":{},"sourceType":"module"}