{"ast":null,"code":"import axios from 'axios'; // axios를 사용하는 것을 의미\n\nconst BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\n\nclass BoardService {\n  constructor() {\n    this.getBoards = (pNum, objCnt, pageCnt) => {\n      console.log(\"getBoards\");\n      return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\n    };\n\n    this.createBoard = board => {\n      console.log(\"createBoards\");\n      return axios.post(BOARD_API_BASE_URL, board);\n    };\n\n    this.getOneBoard = idx => {\n      console.log(`readBoards: ${idx}`);\n      return axios.get(`${BOARD_API_BASE_URL}/${idx}`);\n    };\n\n    this.updateBoard = (idx, board) => {\n      console.log(idx);\n      return axios.put(`${BOARD_API_BASE_URL}/${idx}`, board);\n    };\n\n    this.deleteBoard = idx => {\n      console.log(idx);\n      return axios.delete(`${BOARD_API_BASE_URL}/${idx}`);\n    };\n  }\n\n}\n\nexport default new BoardService();","map":{"version":3,"sources":["D:/gits/GDJ_32/SubBranch/Workspace/GDJ32_E_FrontEnd/src/service/BoardService.js"],"names":["axios","BOARD_API_BASE_URL","BoardService","getBoards","pNum","objCnt","pageCnt","console","log","get","createBoard","board","post","getOneBoard","idx","updateBoard","put","deleteBoard","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;;AAE3B,MAAMC,kBAAkB,GAAG,iCAA3B,C,CAA8D;;AAE9D,MAAMC,YAAN,CAAmB;AAAA;AAAA,SAEfC,SAFe,GAEH,CAACC,IAAD,EAAOC,MAAP,EAAeC,OAAf,KAA2B;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,aAAOR,KAAK,CAACS,GAAN,CAAW,GAAER,kBAAmB,UAASG,IAAK,WAAUC,MAAO,YAAWC,OAAQ,EAAlF,CAAP,CAFmC,CAE0D;AAChG,KALc;;AAAA,SAOfI,WAPe,GAOAC,KAAD,IAAW;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAOR,KAAK,CAACY,IAAN,CAAWX,kBAAX,EAA8BU,KAA9B,CAAP;AACH,KAVc;;AAAA,SAiBfE,WAjBe,GAiBAC,GAAD,IAAS;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAa,eAAcM,GAAI,EAA/B;AACA,aAAOd,KAAK,CAACS,GAAN,CAAW,GAAER,kBAAmB,IAAGa,GAAI,EAAvC,CAAP;AACH,KApBc;;AAAA,SA0BfC,WA1Be,GA0BD,CAACD,GAAD,EAAMH,KAAN,KAAgB;AAC1BJ,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,aAAOd,KAAK,CAACgB,GAAN,CAAW,GAAEf,kBAAmB,IAAGa,GAAI,EAAvC,EAA0CH,KAA1C,CAAP;AACH,KA7Bc;;AAAA,SAmCfM,WAnCe,GAmCAH,GAAD,IAAS;AACnBP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,aAAOd,KAAK,CAACkB,MAAN,CAAc,GAAEjB,kBAAmB,IAAGa,GAAI,EAA1C,CAAP;AACH,KAtCc;AAAA;;AAAA;;AA2CnB,eAAe,IAAIZ,YAAJ,EAAf","sourcesContent":["import axios from 'axios'; // axios를 사용하는 것을 의미\n\nconst BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\n\nclass BoardService {\n\n    getBoards = (pNum, objCnt, pageCnt) => {\n        console.log(\"getBoards\");\n        return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\n    }\n\n    createBoard = (board) => {\n        console.log(\"createBoards\");\n        return axios.post(BOARD_API_BASE_URL,board);\n    }\n    \n    // getOneBoard(index){\n    //     console.log(\"readBoards: \"+index);\n    //     return axios.get(BOARD_API_BASE_URL + \"/\" + index);\n    // }\n\n    getOneBoard = (idx) => {\n        console.log(`readBoards: ${idx}`);\n        return axios.get(`${BOARD_API_BASE_URL}/${idx}`);\n    }\n\n    // updateBoard(index, board){\n    //     return axios.put(BOARD_API_BASE_URL + \"/\" + index,board);\n    // }\n\n    updateBoard = (idx, board) => {\n        console.log(idx);\n        return axios.put(`${BOARD_API_BASE_URL}/${idx}`, board);\n    }\n\n    // deleteBoard(index) {\n    //     return axios.delete(BOARD_API_BASE_URL + \"/\" + index);\n    // }\n\n    deleteBoard = (idx) => {\n        console.log(idx);\n        return axios.delete(`${BOARD_API_BASE_URL}/${idx}`);\n    }\n\n}\n\n\nexport default new BoardService();"]},"metadata":{},"sourceType":"module"}