{"ast":null,"code":"import _classCallCheck from\"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import axios from'axios';// axios를 사용하는 것을 의미\n// const BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\nvar BoardService=function BoardService(){_classCallCheck(this,BoardService);this.getBoards=function(pNum,objCnt,pageCnt){console.log('getBoards');// return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\nreturn axios.get(\"/api/board?p_num=\".concat(pNum,\"&objCnt=\").concat(objCnt,\"&pageCnt=\").concat(pageCnt));// 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\n};this.createBoard=function(board){console.log('createBoards');return axios.post('/api/board',board);};this.getOneBoard=function(idx){console.log(\"readBoards: \".concat(idx));return axios.get(\"/api/board/\".concat(idx));};this.updateBoard=function(idx,board){console.log(idx);return axios.put(\"/api/board/\".concat(idx),board);};this.deleteBoard=function(idx){console.log(idx);return axios.delete(\"/api/board/\".concat(idx));};};export default new BoardService();","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/service/BoardService.js"],"names":["axios","BoardService","getBoards","pNum","objCnt","pageCnt","console","log","get","createBoard","board","post","getOneBoard","idx","updateBoard","put","deleteBoard","delete"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAA2B;AAE3B;GAEMC,CAAAA,Y,iEACJC,S,CAAY,SAACC,IAAD,CAAOC,MAAP,CAAeC,OAAf,CAA2B,CACrCC,OAAO,CAACC,GAAR,CAAY,WAAZ,EACA;AACA,MAAOP,CAAAA,KAAK,CAACQ,GAAN,4BACeL,IADf,oBAC8BC,MAD9B,qBACgDC,OADhD,EAAP,CAEG;AACJ,C,MAEDI,W,CAAc,SAACC,KAAD,CAAW,CACvBJ,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,MAAOP,CAAAA,KAAK,CAACW,IAAN,CAAW,YAAX,CAAyBD,KAAzB,CAAP,CACD,C,MAODE,W,CAAc,SAACC,GAAD,CAAS,CACrBP,OAAO,CAACC,GAAR,uBAA2BM,GAA3B,GACA,MAAOb,CAAAA,KAAK,CAACQ,GAAN,sBAAwBK,GAAxB,EAAP,CACD,C,MAMDC,W,CAAc,SAACD,GAAD,CAAMH,KAAN,CAAgB,CAC5BJ,OAAO,CAACC,GAAR,CAAYM,GAAZ,EACA,MAAOb,CAAAA,KAAK,CAACe,GAAN,sBAAwBF,GAAxB,EAA+BH,KAA/B,CAAP,CACD,C,MAMDM,W,CAAc,SAACH,GAAD,CAAS,CACrBP,OAAO,CAACC,GAAR,CAAYM,GAAZ,EACA,MAAOb,CAAAA,KAAK,CAACiB,MAAN,sBAA2BJ,GAA3B,EAAP,CACD,C,GAGH,cAAe,IAAIZ,CAAAA,YAAJ,EAAf","sourcesContent":["import axios from 'axios'; // axios를 사용하는 것을 의미\r\n\r\n// const BOARD_API_BASE_URL = \"http://localhost:8080/api/board\"; // spring boot api url를 정의\r\n\r\nclass BoardService {\r\n  getBoards = (pNum, objCnt, pageCnt) => {\r\n    console.log('getBoards');\r\n    // return axios.get(`${BOARD_API_BASE_URL}?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\r\n    return axios.get(\r\n      `/api/board?p_num=${pNum}&objCnt=${objCnt}&pageCnt=${pageCnt}`\r\n    ); // 표시할 페이지 번호를 파라미터로 설정하여 통신하도록 함\r\n  };\r\n\r\n  createBoard = (board) => {\r\n    console.log('createBoards');\r\n    return axios.post('/api/board', board);\r\n  };\r\n\r\n  // getOneBoard(index){\r\n  //     console.log(\"readBoards: \"+index);\r\n  //     return axios.get(BOARD_API_BASE_URL + \"/\" + index);\r\n  // }\r\n\r\n  getOneBoard = (idx) => {\r\n    console.log(`readBoards: ${idx}`);\r\n    return axios.get(`/api/board/${idx}`);\r\n  };\r\n\r\n  // updateBoard(index, board){\r\n  //     return axios.put(BOARD_API_BASE_URL + \"/\" + index,board);\r\n  // }\r\n\r\n  updateBoard = (idx, board) => {\r\n    console.log(idx);\r\n    return axios.put(`/api/board/${idx}`, board);\r\n  };\r\n\r\n  // deleteBoard(index) {\r\n  //     return axios.delete(BOARD_API_BASE_URL + \"/\" + index);\r\n  // }\r\n\r\n  deleteBoard = (idx) => {\r\n    console.log(idx);\r\n    return axios.delete(`/api/board/${idx}`);\r\n  };\r\n}\r\n\r\nexport default new BoardService();\r\n"]},"metadata":{},"sourceType":"module"}