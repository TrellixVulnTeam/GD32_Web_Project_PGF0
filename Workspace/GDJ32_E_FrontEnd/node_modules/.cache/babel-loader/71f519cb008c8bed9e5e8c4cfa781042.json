{"ast":null,"code":"import _defineProperty from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  var _extends2;\n\n  var styleProps = props.styleProps;\n  return deepmerge(_extends({}, styleProps.inset && styles.inset, styleProps.primary && styleProps.secondary && styles.multiline, styleProps.dense && styles.dense, (_extends2 = {}, _defineProperty(_extends2, \"& .\".concat(listItemTextClasses.primary), styles.primary), _defineProperty(_extends2, \"& .\".concat(listItemTextClasses.secondary), styles.secondary), _extends2)), styles.root || {});\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      inset = styleProps.inset,\n      primary = styleProps.primary,\n      secondary = styleProps.secondary,\n      dense = styleProps.dense;\n  var slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\n\nvar ListItemTextRoot = experimentalStyled('div', {}, {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function (_ref) {\n  var styleProps = _ref.styleProps;\n  return _extends({\n    /* Styles applied to the root element. */\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  }, styleProps.primary && styleProps.secondary && {\n    marginTop: 6,\n    marginBottom: 6\n  }, styleProps.inset && {\n    paddingLeft: 56\n  });\n});\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n  var secondary = secondaryProp;\n\n  var styleProps = _extends({}, props, {\n    disableTypography: disableTypography,\n    inset: inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense: dense\n  });\n\n  var classes = useUtilityClasses(styleProps);\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Alias for the `primary` prop.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * If `true`, the children won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `children` (or `primary`) text, and optional `secondary` text\r\n   * with the Typography component.\r\n   * @default false\r\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\r\n   * If `true`, the children are indented.\r\n   * This should be used if there is no left avatar or left icon.\r\n   * @default false\r\n   */\n  inset: PropTypes.bool,\n\n  /**\r\n   * The main content element.\r\n   */\n  primary: PropTypes.node,\n\n  /**\r\n   * These props will be forwarded to the primary typography component\r\n   * (as long as disableTypography is not `true`).\r\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\r\n   * The secondary content element.\r\n   */\n  secondary: PropTypes.node,\n\n  /**\r\n   * These props will be forwarded to the secondary typography component\r\n   * (as long as disableTypography is not `true`).\r\n   */\n  secondaryTypographyProps: PropTypes.object,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListItemText;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/ListItemText/ListItemText.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","Typography","ListContext","useThemeProps","experimentalStyled","listItemTextClasses","getListItemTextUtilityClass","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","styleProps","inset","primary","secondary","multiline","dense","root","useUtilityClasses","classes","slots","ListItemTextRoot","name","slot","flex","minWidth","marginTop","marginBottom","paddingLeft","ListItemText","forwardRef","inProps","ref","children","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","useContext","type","variant","component","display","color","process","env","NODE_ENV","propTypes","node","object","string","bool","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport Typography from '../Typography';\r\nimport ListContext from '../List/ListContext';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, styleProps.inset && styles.inset, styleProps.primary && styleProps.secondary && styles.multiline, styleProps.dense && styles.dense, {\r\n    [`& .${listItemTextClasses.primary}`]: styles.primary,\r\n    [`& .${listItemTextClasses.secondary}`]: styles.secondary\r\n  }), styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    inset,\r\n    primary,\r\n    secondary,\r\n    dense\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\r\n    primary: ['primary'],\r\n    secondary: ['secondary']\r\n  };\r\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\r\n};\r\n\r\nconst ListItemTextRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiListItemText',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the root element. */\r\n  flex: '1 1 auto',\r\n  minWidth: 0,\r\n  marginTop: 4,\r\n  marginBottom: 4\r\n}, styleProps.primary && styleProps.secondary && {\r\n  marginTop: 6,\r\n  marginBottom: 6\r\n}, styleProps.inset && {\r\n  paddingLeft: 56\r\n}));\r\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiListItemText'\r\n  });\r\n\r\n  const {\r\n    children,\r\n    className,\r\n    disableTypography = false,\r\n    inset = false,\r\n    primary: primaryProp,\r\n    primaryTypographyProps,\r\n    secondary: secondaryProp,\r\n    secondaryTypographyProps\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\r\n\r\n  const {\r\n    dense\r\n  } = React.useContext(ListContext);\r\n  let primary = primaryProp != null ? primaryProp : children;\r\n  let secondary = secondaryProp;\r\n\r\n  const styleProps = _extends({}, props, {\r\n    disableTypography,\r\n    inset,\r\n    primary: !!primary,\r\n    secondary: !!secondary,\r\n    dense\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n\r\n  if (primary != null && primary.type !== Typography && !disableTypography) {\r\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\r\n      variant: dense ? 'body2' : 'body1',\r\n      className: classes.primary,\r\n      component: \"span\",\r\n      display: \"block\"\r\n    }, primaryTypographyProps, {\r\n      children: primary\r\n    }));\r\n  }\r\n\r\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\r\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\r\n      variant: \"body2\",\r\n      className: classes.secondary,\r\n      color: \"text.secondary\",\r\n      display: \"block\"\r\n    }, secondaryTypographyProps, {\r\n      children: secondary\r\n    }));\r\n  }\r\n\r\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other, {\r\n    children: [primary, secondary]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Alias for the `primary` prop.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the children won't be wrapped by a Typography component.\r\n   * This can be useful to render an alternative Typography variant by wrapping\r\n   * the `children` (or `primary`) text, and optional `secondary` text\r\n   * with the Typography component.\r\n   * @default false\r\n   */\r\n  disableTypography: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the children are indented.\r\n   * This should be used if there is no left avatar or left icon.\r\n   * @default false\r\n   */\r\n  inset: PropTypes.bool,\r\n\r\n  /**\r\n   * The main content element.\r\n   */\r\n  primary: PropTypes.node,\r\n\r\n  /**\r\n   * These props will be forwarded to the primary typography component\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  primaryTypographyProps: PropTypes.object,\r\n\r\n  /**\r\n   * The secondary content element.\r\n   */\r\n  secondary: PropTypes.node,\r\n\r\n  /**\r\n   * These props will be forwarded to the secondary typography component\r\n   * (as long as disableTypography is not `true`).\r\n   */\r\n  secondaryTypographyProps: PropTypes.object,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default ListItemText;"]},"metadata":{},"sourceType":"module"}