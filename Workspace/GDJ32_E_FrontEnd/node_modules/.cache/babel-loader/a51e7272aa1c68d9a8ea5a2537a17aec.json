{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GDJ32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\board\\\\ListBoardComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Button, Box } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Pagination from '@material-ui/lab/Pagination';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport BoardService from '../../service/BoardService'; // import '../../css/ListBoardComponent.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = {\n  NOTICE: {\n    value: 0,\n    name: '공지사항'\n  },\n  FREEBOARD: {\n    value: 1,\n    name: '자유게시판'\n  },\n  STORAGE: {\n    value: 2,\n    name: '자료실'\n  },\n  MARCKET: {\n    value: 3,\n    name: '중고나라'\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    },\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst PaginationStyle = withStyles({\n  ul: {\n    justifyContent: 'center'\n  }\n})(Pagination);\n\nconst ListBoardComponent = () => {\n  _s();\n\n  const history = useNavigate();\n  const {\n    state\n  } = useLocation();\n  let pNum = 1; // const [pNum, setNum] = useState(() => {\n  //   if (state != null) return state.pIdx;\n  //   return 1;\n  // });\n\n  const [paging, setPage] = useState({});\n  const [boards, setBoards] = useState([]);\n  const classes = useStyles(); // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\n\n  useEffect(() => {\n    if (state !== null) pNum = state.pIdx; // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\n\n    BoardService.getBoards(pNum, 10, 10).then(res => {\n      // setNum(res.data.pagingData.currentPageNum);\n      pNum = res.data.pagingData.currentPageNum;\n      setPage(res.data.pagingData);\n      setBoards(res.data.list);\n      console.log(res.data.list);\n      console.log('pNum : ', pNum);\n    });\n  }, [state, pNum]); // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\n  // const listBoard = (pageNum) => {\n  //     console.log(\"listBoard\", pageNum);\n  //\n  //     console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\n  //     BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\n  //         setNum(res.data.pagingData.currentPageNum);\n  //         setPage(res.data.pagingData);\n  //         setBoards(res.data.list);\n  //     });\n  // }\n\n  const handleChange = (event, value) => {\n    // setNum(value);\n    pNum = value;\n    console.log('value : ', value);\n    console.log(paging);\n    history(`/app/board/${value}`, {\n      replace: false,\n      state: {\n        pIdx: pNum\n      }\n    }); // listBoard(value);\n  };\n\n  const getBoardCategory = value => {\n    console.log('getBoardCategory');\n    let name = 'Not Defined';\n\n    switch (value) {\n      case Category.NOTICE.value:\n        name = Category.NOTICE.name;\n        break;\n\n      case Category.FREEBOARD.value:\n        name = Category.FREEBOARD.name;\n        break;\n\n      case Category.STORAGE.value:\n        name = Category.STORAGE.name;\n        break;\n\n      case Category.MARCKET.value:\n        name = Category.MARCKET.name;\n        break;\n\n      default:\n        name = 'Not Defined';\n        break;\n    }\n\n    return name;\n  };\n\n  const getBoardCreateDay = value => {\n    const createDay = new Intl.DateTimeFormat('ko-KR').format(Date.parse(value));\n    return createDay;\n  }; // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\n\n\n  const readBoard = event => {\n    // console.log(\"readBoard event\", idx);\n    event.preventDefault();\n    console.log('###################', event.target.getAttribute('value'));\n    const idx = event.target.getAttribute('value');\n    BoardService.getOneBoard(event.target.getAttribute('value')).then(res => {\n      console.log(res);\n      console.log(`/read-board/${res.data.idx}`);\n      history(`/app/read-board/${idx}`, {\n        replace: true,\n        state: {\n          idx: res.data.idx,\n          board: res.data\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\n  // this.props.history.push('이동할 링크'); -> 일반적\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\n\n\n  const createBoard = event => {\n    event.preventDefault();\n    const pIdx = '_create';\n    history('/app/create-board/_create', {\n      replace: true,\n      state: {\n        idx: pIdx\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn btn-primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(CreateOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 22\n        }, this),\n        onClick: e => createBoard(e),\n        children: [' ', \"\\uAE00 \\uC791\\uC131\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"table\",\n      style: {\n        padding: '0 12px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n          children: [/*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC791\\uC131\\uC790 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC791\\uC131\\uC77C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC870\\uD68C\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC88B\\uC544\\uC694\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: boards.map(board => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.idx, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [' ', getBoardCategory(board.category), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                value: board.idx,\n                onClick: e => readBoard(e),\n                children: board.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.id, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [' ', getBoardCreateDay(board.createtDay), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.viewCnt, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.likes, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, board.idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.root,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Page: \", pNum, /*#__PURE__*/_jsxDEV(PaginationStyle, {\n          count: paging.pageNumCountTotal,\n          page: pNum,\n          onChange: handleChange,\n          value: pNum,\n          name: \"pNum\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListBoardComponent, \"dt5qvc3z7YnbFwRzZnUvxzVhLWI=\", false, function () {\n  return [useNavigate, useLocation, useStyles];\n});\n\n_c = ListBoardComponent;\nexport default ListBoardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBoardComponent\");","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ListBoardComponent.js"],"names":["React","useEffect","useState","useNavigate","useLocation","Button","Box","Table","TableHead","TableBody","TableRow","TableCell","withStyles","makeStyles","Typography","Pagination","CreateOutlinedIcon","BoardService","Category","NOTICE","value","name","FREEBOARD","STORAGE","MARCKET","useStyles","theme","root","marginTop","spacing","margin","PaginationStyle","ul","justifyContent","ListBoardComponent","history","state","pNum","paging","setPage","boards","setBoards","classes","pIdx","getBoards","then","res","data","pagingData","currentPageNum","list","console","log","handleChange","event","replace","getBoardCategory","getBoardCreateDay","createDay","Intl","DateTimeFormat","format","Date","parse","readBoard","preventDefault","target","getAttribute","idx","getOneBoard","board","catch","err","createBoard","e","padding","map","category","title","id","createtDay","viewCnt","likes","pageNumCountTotal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { Button, Box } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport BoardService from '../../service/BoardService';\r\n// import '../../css/ListBoardComponent.css';\r\n\r\nconst Category = {\r\n  NOTICE: { value: 0, name: '공지사항' },\r\n  FREEBOARD: { value: 1, name: '자유게시판' },\r\n  STORAGE: { value: 2, name: '자료실' },\r\n  MARCKET: { value: 3, name: '중고나라' }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    '& > *': {\r\n      margin: theme.spacing(1)\r\n    }\r\n  }\r\n}));\r\n\r\nconst PaginationStyle = withStyles({\r\n  ul: {\r\n    justifyContent: 'center'\r\n  }\r\n})(Pagination);\r\n\r\nconst ListBoardComponent = () => {\r\n  const history = useNavigate();\r\n  const { state } = useLocation();\r\n  let pNum = 1;\r\n  // const [pNum, setNum] = useState(() => {\r\n  //   if (state != null) return state.pIdx;\r\n  //   return 1;\r\n  // });\r\n  const [paging, setPage] = useState({});\r\n  const [boards, setBoards] = useState([]);\r\n  const classes = useStyles();\r\n\r\n  // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n  useEffect(() => {\r\n    if (state !== null) pNum = state.pIdx;\r\n    // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\r\n    BoardService.getBoards(pNum, 10, 10).then((res) => {\r\n      // setNum(res.data.pagingData.currentPageNum);\r\n      pNum = res.data.pagingData.currentPageNum;\r\n      setPage(res.data.pagingData);\r\n      setBoards(res.data.list);\r\n      console.log(res.data.list);\r\n      console.log('pNum : ', pNum);\r\n    });\r\n  }, [state, pNum]);\r\n\r\n  // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n  // const listBoard = (pageNum) => {\r\n  //     console.log(\"listBoard\", pageNum);\r\n  //\r\n  //     console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\r\n  //     BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\r\n  //         setNum(res.data.pagingData.currentPageNum);\r\n  //         setPage(res.data.pagingData);\r\n  //         setBoards(res.data.list);\r\n  //     });\r\n  // }\r\n\r\n  const handleChange = (event, value) => {\r\n    // setNum(value);\r\n    pNum = value;\r\n    console.log('value : ', value);\r\n    console.log(paging);\r\n    history(`/app/board/${value}`, {\r\n      replace: false,\r\n      state: {\r\n        pIdx: pNum\r\n      }\r\n    });\r\n    // listBoard(value);\r\n  };\r\n\r\n  const getBoardCategory = (value) => {\r\n    console.log('getBoardCategory');\r\n    let name = 'Not Defined';\r\n\r\n    switch (value) {\r\n      case Category.NOTICE.value:\r\n        name = Category.NOTICE.name;\r\n        break;\r\n      case Category.FREEBOARD.value:\r\n        name = Category.FREEBOARD.name;\r\n        break;\r\n      case Category.STORAGE.value:\r\n        name = Category.STORAGE.name;\r\n        break;\r\n      case Category.MARCKET.value:\r\n        name = Category.MARCKET.name;\r\n        break;\r\n      default:\r\n        name = 'Not Defined';\r\n        break;\r\n    }\r\n    return name;\r\n  };\r\n\r\n  const getBoardCreateDay = (value) => {\r\n    const createDay = new Intl.DateTimeFormat('ko-KR').format(\r\n      Date.parse(value)\r\n    );\r\n    return createDay;\r\n  };\r\n\r\n  // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n  const readBoard = (event) => {\r\n    // console.log(\"readBoard event\", idx);\r\n    event.preventDefault();\r\n    console.log('###################', event.target.getAttribute('value'));\r\n    const idx = event.target.getAttribute('value');\r\n    BoardService.getOneBoard(event.target.getAttribute('value'))\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(`/read-board/${res.data.idx}`);\r\n        history(`/app/read-board/${idx}`, {\r\n          replace: true,\r\n          state: {\r\n            idx: res.data.idx,\r\n            board: res.data\r\n          }\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n  // this.props.history.push('이동할 링크'); -> 일반적\r\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n  const createBoard = (event) => {\r\n    event.preventDefault();\r\n    const pIdx = '_create';\r\n    history('/app/create-board/_create', {\r\n      replace: true,\r\n      state: { idx: pIdx }\r\n    });\r\n  };\r\n  return (\r\n    <Box>\r\n      <h2 className=\"text-center\">게시판 목록</h2>\r\n      <br />\r\n      <Box className=\"row\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"btn btn-primary\"\r\n          startIcon={<CreateOutlinedIcon />}\r\n          onClick={(e) => createBoard(e)}\r\n        >\r\n          {' '}\r\n          글 작성\r\n        </Button>\r\n      </Box>\r\n      <Box className=\"table\" style={{ padding: '0 12px' }}>\r\n        <Table className=\"table table-striped table-bordered\">\r\n          <colgroup>\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"50%\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n            <col width=\"*\" />\r\n          </colgroup>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"center\">번호</TableCell>\r\n              <TableCell align=\"center\">카테고리 </TableCell>\r\n              <TableCell align=\"center\">제목</TableCell>\r\n              <TableCell align=\"center\">작성자 </TableCell>\r\n              <TableCell align=\"center\">작성일 </TableCell>\r\n              <TableCell align=\"center\">조회수</TableCell>\r\n              <TableCell align=\"center\">좋아요수</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {boards.map((board) => (\r\n              <TableRow key={board.idx}>\r\n                <TableCell align=\"center\"> {board.idx} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {' '}\r\n                  {getBoardCategory(board.category)}{' '}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <a href=\"#\" value={board.idx} onClick={(e) => readBoard(e)}>\r\n                    {board.title}\r\n                  </a>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\"> {board.id} </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {' '}\r\n                  {getBoardCreateDay(board.createtDay)}{' '}\r\n                </TableCell>\r\n                <TableCell align=\"center\"> {board.viewCnt} </TableCell>\r\n                <TableCell align=\"center\"> {board.likes} </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Box>\r\n      <Box className={classes.root}>\r\n        <Typography>\r\n          Page: {pNum}\r\n          <PaginationStyle\r\n            count={paging.pageNumCountTotal}\r\n            page={pNum}\r\n            onChange={handleChange}\r\n            value={pNum}\r\n            name=\"pNum\"\r\n          />\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ListBoardComponent;\r\n"]},"metadata":{},"sourceType":"module"}