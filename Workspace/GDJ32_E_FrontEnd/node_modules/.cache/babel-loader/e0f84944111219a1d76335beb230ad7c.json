{"ast":null,"code":"import _defineProperty from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '../styles/colorManipulator';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  var _extends2;\n\n  var styleProps = props.styleProps;\n  var fullWidth = styleProps.fullWidth,\n      hasClearIcon = styleProps.hasClearIcon,\n      hasPopupIcon = styleProps.hasPopupIcon,\n      inputFocused = styleProps.inputFocused,\n      popupOpen = styleProps.popupOpen,\n      size = styleProps.size;\n  return deepmerge(_extends({}, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon, (_extends2 = {}, _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.tag), _extends({}, styles.tag, styles[\"tagSize\".concat(capitalize(size))])), _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.inputRoot), styles.inputRoot), _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.input), _extends({}, styles.input, inputFocused && styles.inputFocused)), _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.endAdornment), styles.endAdornment), _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.clearIndicator), styles.clearIndicator), _defineProperty(_extends2, \"& .\".concat(autocompleteClasses.popupIndicator), _extends({}, styles.popupIndicator, popupOpen && styles.popupIndicatorOpen)), _extends2)), styles.root || {});\n};\n\nvar overridesResolverPortal = function overridesResolverPortal(props, styles) {\n  var _extends3;\n\n  var styleProps = props.styleProps;\n  return deepmerge(_extends({}, styleProps.disablePortal && styles.popperDisablePortal, (_extends3 = {}, _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.paper), styles.paper), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.listbox), styles.listbox), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.loading), styles.loading), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.noOptions), styles.noOptions), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.option), styles.option), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.groupLabel), styles.groupLabel), _defineProperty(_extends3, \"& .\".concat(autocompleteClasses.groupUl), styles.groupUl), _extends3)), styles.popper || {});\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      disablePortal = styleProps.disablePortal,\n      focused = styleProps.focused,\n      fullWidth = styleProps.fullWidth,\n      hasClearIcon = styleProps.hasClearIcon,\n      hasPopupIcon = styleProps.hasPopupIcon,\n      inputFocused = styleProps.inputFocused,\n      popupOpen = styleProps.popupOpen,\n      size = styleProps.size;\n  var slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', \"tagSize\".concat(capitalize(size), \")\")],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nvar AutocompleteRoot = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function (_ref3) {\n  var _extends4, _MuiOutlinedInputR, _MuiFilledInputRoo, _$concat, _extends5;\n\n  var styleProps = _ref3.styleProps;\n  return _extends((_extends4 = {}, _defineProperty(_extends4, \"&.Mui-focused .\".concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  }), _defineProperty(_extends4, '@media (pointer: fine)', _defineProperty({}, \"&:hover .\".concat(autocompleteClasses.clearIndicator), {\n    visibility: 'visible'\n  })), _extends4), styleProps.fullWidth && {\n    width: '100%'\n  }, (_extends5 = {}, _defineProperty(_extends5, \"& .\".concat(autocompleteClasses.tag), _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, styleProps.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  })), _defineProperty(_extends5, \"& .\".concat(autocompleteClasses.inputRoot), (_$concat = {\n    flexWrap: 'wrap'\n  }, _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4\n  }), _defineProperty(_$concat, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4\n  }), _defineProperty(_$concat, \"& .\".concat(autocompleteClasses.input), {\n    width: 0,\n    minWidth: 30\n  }), _defineProperty(_$concat, '&.MuiInput-root', {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '6px 4px 6px 0px'\n    }\n  }), _defineProperty(_$concat, '&.MuiInput-root.MuiInputBase-sizeSmall', {\n    '& .MuiInput-input': {\n      padding: '2px 4px 3px 0'\n    }\n  }), _defineProperty(_$concat, '&.MuiOutlinedInput-root', (_MuiOutlinedInputR = {\n    padding: 9\n  }, _defineProperty(_MuiOutlinedInputR, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_MuiOutlinedInputR, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_MuiOutlinedInputR, \"& .\".concat(autocompleteClasses.input), {\n    padding: '7.5px 4px 7.5px 6px'\n  }), _defineProperty(_MuiOutlinedInputR, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _MuiOutlinedInputR)), _defineProperty(_$concat, '&.MuiOutlinedInput-root.MuiInputBase-sizeSmall', _defineProperty({\n    padding: 6\n  }, \"& .\".concat(autocompleteClasses.input), {\n    padding: '2.5px 4px 2.5px 6px'\n  })), _defineProperty(_$concat, '&.MuiFilledInput-root', (_MuiFilledInputRoo = {\n    paddingTop: 19,\n    paddingLeft: 8\n  }, _defineProperty(_MuiFilledInputRoo, \".\".concat(autocompleteClasses.hasPopupIcon, \"&, .\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 26 + 4 + 9\n  }), _defineProperty(_MuiFilledInputRoo, \".\".concat(autocompleteClasses.hasPopupIcon, \".\").concat(autocompleteClasses.hasClearIcon, \"&\"), {\n    paddingRight: 52 + 4 + 9\n  }), _defineProperty(_MuiFilledInputRoo, '& .MuiFilledInput-input', {\n    padding: '7px 4px'\n  }), _defineProperty(_MuiFilledInputRoo, \"& .\".concat(autocompleteClasses.endAdornment), {\n    right: 9\n  }), _MuiFilledInputRoo)), _defineProperty(_$concat, '&.MuiFilledInput-root.MuiInputBase-sizeSmall', {\n    paddingBottom: 1,\n    '& .MuiFilledInput-input': {\n      padding: '2.5px 4px'\n    }\n  }), _$concat)), _defineProperty(_extends5, \"& .\".concat(autocompleteClasses.input), _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, styleProps.inputFocused && {\n    opacity: 1\n  })), _extends5));\n});\nvar AutocompleteEndAdornment = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment'\n})({\n  /* Styles applied to the endAdornment element. */\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nvar AutocompleteClearIndicator = experimentalStyled(IconButton, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator'\n})({\n  /* Styles applied to the clear indicator. */\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nvar AutocompletePopupIndicator = experimentalStyled(IconButton, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator'\n})(function (_ref4) {\n  var styleProps = _ref4.styleProps;\n  return _extends({\n    /* Styles applied to the popup indicator. */\n    padding: 2,\n    marginRight: -2\n  }, styleProps.popupOpen && {\n    transform: 'rotate(180deg)'\n  });\n});\nvar AutocompletePopper = experimentalStyled(Popper, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: overridesResolverPortal\n})(function (_ref5) {\n  var theme = _ref5.theme,\n      styleProps = _ref5.styleProps;\n  return _extends({\n    /* Styles applied to the popper element. */\n    zIndex: theme.zIndex.modal\n  }, styleProps.disablePortal && {\n    position: 'absolute'\n  });\n});\nvar AutocompletePaper = experimentalStyled(Paper, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper'\n})(function (_ref6) {\n  var theme = _ref6.theme;\n  return _extends({}, theme.typography.body1, {\n    overflow: 'auto',\n    margin: '4px 0'\n  });\n});\nvar AutocompleteLoading = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Loading'\n})(function (_ref7) {\n  var theme = _ref7.theme;\n  return {\n    /* Styles applied to the loading wrapper. */\n    color: theme.palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteNoOptions = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions'\n})(function (_ref8) {\n  var theme = _ref8.theme;\n  return {\n    /* Styles applied to the no option wrapper. */\n    color: theme.palette.text.secondary,\n    padding: '14px 16px'\n  };\n});\nvar AutocompleteListbox = experimentalStyled('div', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox'\n})(function (_ref9) {\n  var _$concat2;\n\n  var theme = _ref9.theme;\n  return _defineProperty({\n    /* Styles applied to the listbox component. */\n    listStyle: 'none',\n    margin: 0,\n    padding: '8px 0',\n    maxHeight: '40vh',\n    overflow: 'auto'\n  }, \"& .\".concat(autocompleteClasses.option), (_$concat2 = {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16\n  }, _defineProperty(_$concat2, theme.breakpoints.up('sm'), {\n    minHeight: 'auto'\n  }), _defineProperty(_$concat2, '&[data-focus=\"true\"]', {\n    backgroundColor: theme.palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }), _defineProperty(_$concat2, '&[aria-disabled=\"true\"]', {\n    opacity: theme.palette.action.disabledOpacity,\n    pointerEvents: 'none'\n  }), _defineProperty(_$concat2, '&.Mui-focusVisible', {\n    backgroundColor: theme.palette.action.focus\n  }), _defineProperty(_$concat2, '&[aria-selected=\"true\"]', {\n    backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&[data-focus=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: theme.palette.action.selected\n      }\n    },\n    '&.Mui-focusVisible': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }), _$concat2));\n});\nvar AutocompleteGroupLabel = experimentalStyled(ListSubheader, {}, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel'\n})(function (_ref11) {\n  var theme = _ref11.theme;\n  return {\n    /* Styles applied to the group's label elements. */\n    backgroundColor: theme.palette.background.paper,\n    top: -8\n  };\n});\nvar AutocompleteGroupUl = experimentalStyled('ul', {}, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl'\n})(_defineProperty({\n  /* Styles applied to the group's ul elements. */\n  padding: 0\n}, \"& .\".concat(autocompleteClasses.option), {\n  paddingLeft: 24\n}));\nexport { createFilterOptions };\n\nvar _ref = /*#__PURE__*/_jsx(ClearIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(ArrowDropDownIcon, {});\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      className = props.className,\n      _props$clearIcon = props.clearIcon,\n      clearIcon = _props$clearIcon === void 0 ? _ref : _props$clearIcon,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (option) {\n    var _option$label;\n\n    return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n  } : _props$getOptionLabel,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var hasClearIcon = !disableClearable && !disabled && dirty;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  var styleProps = _extends({}, props, {\n    disablePortal: disablePortal,\n    focused: focused,\n    fullWidth: fullWidth,\n    hasClearIcon: hasClearIcon,\n    hasPopupIcon: hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen: popupOpen,\n    size: size\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/_jsx(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/_jsxs(\"li\", {\n      children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n        className: classes.groupLabel,\n        styleProps: styleProps,\n        component: \"div\",\n        children: params.group\n      }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n        className: classes.groupUl,\n        styleProps: styleProps,\n        children: params.children\n      })]\n    }, params.key);\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n\n  var defaultRenderOption = function defaultRenderOption(props2, option) {\n    return /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n      children: getOptionLabel(option)\n    }));\n  };\n\n  var renderOption = renderOptionProp || defaultRenderOption;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      styleProps: styleProps\n    }, getRootProps(other), {\n      children: renderInput({\n        id: id,\n        disabled: disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment: startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            styleProps: styleProps,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              className: classes.clearIndicator,\n              styleProps: styleProps,\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              styleProps: styleProps,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled: disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      styleProps: styleProps,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        styleProps: styleProps,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          styleProps: styleProps,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          styleProps: styleProps,\n          role: \"presentation\",\n          onMouseDown: function onMouseDown(event) {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          styleProps: styleProps\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map(function (option, index) {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map(function (option2, index2) {\n                  return renderListOption(option2, option.index + index2);\n                })\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\r\n   * known as the completion string, appears inline after the input cursor in the textbox.\r\n   * The inline completion string is visually highlighted and has a selected state.\r\n   * @default false\r\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\r\n   * If `true`, the first option is automatically highlighted.\r\n   * @default false\r\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\r\n   * If `true`, the selected option becomes the value of the input\r\n   * when the Autocomplete loses focus unless the user chooses\r\n   * a different option or changes the character string in the input.\r\n   * @default false\r\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\r\n   * Control if the input should be blurred when an option is selected:\r\n   *\r\n   * - `false` the input is not blurred.\r\n   * - `true` the input is always blurred.\r\n   * - `touch` the input is blurred after a touch event.\r\n   * - `mouse` the input is blurred after a mouse event.\r\n   * @default false\r\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\r\n   * Props applied to the [`Chip`](/api/chip/) element.\r\n   */\n  ChipProps: PropTypes.object,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The icon to display in place of the default clear icon.\r\n   * @default <ClearIcon fontSize=\"small\" />\r\n   */\n  clearIcon: PropTypes.node,\n\n  /**\r\n   * If `true`, the input's text is cleared on blur if no value is selected.\r\n   *\r\n   * Set to `true` if you want to help the user enter a new value.\r\n   * Set to `false` if you want to help the user resume his search.\r\n   * @default !props.freeSolo\r\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\r\n   * If `true`, clear all values when the user presses escape and the popup is closed.\r\n   * @default false\r\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\r\n   * Override the default text for the *clear* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Clear'\r\n   */\n  clearText: PropTypes.string,\n\n  /**\r\n   * Override the default text for the *close popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Close'\r\n   */\n  closeText: PropTypes.string,\n\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   * @default props.multiple ? [] : null\r\n   */\n  defaultValue: PropTypes.any,\n\n  /**\r\n   * If `true`, the input can't be cleared.\r\n   * @default false\r\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\r\n   * If `true`, the popup won't close when a value is selected.\r\n   * @default false\r\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\r\n   * If `true`, the component is disabled.\r\n   * @default false\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, will allow focus on disabled items.\r\n   * @default false\r\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\r\n   * If `true`, the list box in the popup will not wrap focus.\r\n   * @default false\r\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\r\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * A filter function that determines the options that are eligible.\r\n   *\r\n   * @param {T[]} options The options to render.\r\n   * @param {object} state The state of the component.\r\n   * @returns {T[]}\r\n   */\n  filterOptions: PropTypes.func,\n\n  /**\r\n   * If `true`, hide the selected options from the list box.\r\n   * @default false\r\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\r\n   * Force the visibility display of the popup icon.\r\n   * @default 'auto'\r\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\r\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\r\n   * @default false\r\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\r\n   * If `true`, the input will take up the full width of its container.\r\n   * @default false\r\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\r\n   * The label to display when the tags are truncated (`limitTags`).\r\n   *\r\n   * @param {number} more The number of truncated tags.\r\n   * @returns {ReactNode}\r\n   * @default (more) => `+${more}`\r\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\r\n   * Used to determine the disabled state for a given option.\r\n   *\r\n   * @param {T} option The option to test.\r\n   * @returns {boolean}\r\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\r\n   * Used to determine the string value for a given option.\r\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\r\n   *\r\n   * @param {T} option\r\n   * @returns {string}\r\n   * @default (option) => option.label ?? option\r\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\r\n   * Used to determine if an option is selected, considering the current value(s).\r\n   * Uses strict equality by default.\r\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\r\n   *\r\n   * @param {T} option The option to test.\r\n   * @param {T} value The value to test against.\r\n   * @returns {boolean}\r\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\r\n   * If provided, the options will be grouped under the returned string.\r\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\r\n   *\r\n   * @param {T} options The options to group.\r\n   * @returns {string}\r\n   */\n  groupBy: PropTypes.func,\n\n  /**\r\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\r\n   * It should move focus to the first option and last option, respectively.\r\n   * @default !props.freeSolo\r\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\r\n   * This prop is used to help implement the accessibility logic.\r\n   * If you don't provide this prop. It falls back to a randomly generated id.\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * If `true`, the highlight can move to the input.\r\n   * @default false\r\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\r\n   * The input value.\r\n   */\n  inputValue: PropTypes.string,\n\n  /**\r\n   * The maximum number of tags that will be visible when not focused.\r\n   * Set `-1` to disable the limit.\r\n   * @default -1\r\n   */\n  limitTags: integerPropType,\n\n  /**\r\n   * The component used to render the listbox.\r\n   * @default 'ul'\r\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the Listbox element.\r\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\r\n   * If `true`, the component is in a loading state.\r\n   * @default false\r\n   */\n  loading: PropTypes.bool,\n\n  /**\r\n   * Text to display when in a loading state.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Loading…'\r\n   */\n  loadingText: PropTypes.node,\n\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   * @default false\r\n   */\n  multiple: PropTypes.bool,\n\n  /**\r\n   * Text to display when there are no options.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'No options'\r\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {T|T[]} value The new value of the component.\r\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\r\n   * @param {string} [details]\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the popup requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"remove-option\"`, `\"blur\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired when the highlight option changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {T} option The highlighted option.\r\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\r\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the input value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} value The new value of the text input.\r\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\r\n   */\n  onInputChange: PropTypes.func,\n\n  /**\r\n   * Callback fired when the popup requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onOpen: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * If `true`, the popup will open on input focus.\r\n   * @default false\r\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\r\n   * Override the default text for the *open popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Open'\r\n   */\n  openText: PropTypes.string,\n\n  /**\r\n   * Array of options.\r\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\r\n   * The component used to render the body of the popup.\r\n   * @default Paper\r\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\r\n   * The component used to position the popup.\r\n   * @default Popper\r\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\r\n   * The icon to display in place of the default popup icon.\r\n   * @default <ArrowDropDownIcon />\r\n   */\n  popupIcon: PropTypes.node,\n\n  /**\r\n   * Render the group.\r\n   *\r\n   * @param {any} option The group to render.\r\n   * @returns {ReactNode}\r\n   */\n  renderGroup: PropTypes.func,\n\n  /**\r\n   * Render the input.\r\n   *\r\n   * @param {object} params\r\n   * @returns {ReactNode}\r\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\r\n   * Render the option, use `getOptionLabel` by default.\r\n   *\r\n   * @param {object} props The props to apply on the li element.\r\n   * @param {T} option The option to render.\r\n   * @param {object} state The state of the component.\r\n   * @returns {ReactNode}\r\n   */\n  renderOption: PropTypes.func,\n\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {T[]} value The `value` provided to the component.\r\n   * @param {function} getTagProps A tag props getter.\r\n   * @returns {ReactNode}\r\n   */\n  renderTags: PropTypes.func,\n\n  /**\r\n   * If `true`, the input's text is selected on focus.\r\n   * It helps the user clear the selected value.\r\n   * @default !props.freeSolo\r\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\r\n   * The size of the component.\r\n   * @default 'medium'\r\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * The value of the autocomplete.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   * You can customize the equality behavior with the `getOptionSelected` prop.\r\n   */\n  value: chainPropTypes(PropTypes.any, function (props) {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', \"However, \".concat(props.value, \" was provided.\")].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/Autocomplete/Autocomplete.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","chainPropTypes","integerPropType","deepmerge","unstable_composeClasses","composeClasses","alpha","Popper","ListSubheader","Paper","IconButton","Chip","ClearIcon","ArrowDropDownIcon","useAutocomplete","createFilterOptions","useThemeProps","experimentalStyled","autocompleteClasses","getAutocompleteUtilityClass","capitalize","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","styleProps","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","tag","inputRoot","input","endAdornment","clearIndicator","popupIndicator","popupIndicatorOpen","root","overridesResolverPortal","disablePortal","popperDisablePortal","paper","listbox","loading","noOptions","option","groupLabel","groupUl","popper","useUtilityClasses","classes","focused","slots","AutocompleteRoot","name","slot","visibility","width","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","right","paddingTop","paddingLeft","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","transform","AutocompletePopper","theme","zIndex","modal","AutocompletePaper","typography","body1","overflow","AutocompleteLoading","color","palette","text","secondary","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focus","primary","main","selectedOpacity","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","background","AutocompleteGroupUl","_ref","fontSize","_ref2","Autocomplete","forwardRef","inProps","ref","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","className","clearIcon","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionLabel","_option$label","label","groupBy","handleHomeEndKeys","includeInputInList","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openOnFocus","openText","PaperComponent","PopperComponent","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","selectOnFocus","other","componentName","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","value","dirty","id","focusedTag","anchorEl","setAnchorEl","inputValue","groupedOptions","startAdornment","length","getCustomizedTagProps","params","map","index","Array","isArray","splice","push","children","defaultRenderGroup","component","group","key","defaultRenderOption","props2","renderListOption","optionProps","Fragment","undefined","InputLabelProps","InputProps","title","inputProps","as","style","clientWidth","role","open","onMouseDown","event","preventDefault","options","option2","index2","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","any","filterOptions","func","getOptionDisabled","getOptionSelected","elementType","onChange","onClose","onHighlightChange","onInputChange","onOpen","array","isRequired","sx","Error","join"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { chainPropTypes, integerPropType, deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport { alpha } from '../styles/colorManipulator';\r\nimport Popper from '../Popper';\r\nimport ListSubheader from '../ListSubheader';\r\nimport Paper from '../Paper';\r\nimport IconButton from '../IconButton';\r\nimport Chip from '../Chip';\r\nimport ClearIcon from '../internal/svg-icons/Close';\r\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\r\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\r\nimport capitalize from '../utils/capitalize';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  const {\r\n    fullWidth,\r\n    hasClearIcon,\r\n    hasPopupIcon,\r\n    inputFocused,\r\n    popupOpen,\r\n    size\r\n  } = styleProps;\r\n  return deepmerge(_extends({}, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon, {\r\n    [`& .${autocompleteClasses.tag}`]: _extends({}, styles.tag, styles[`tagSize${capitalize(size)}`]),\r\n    [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot,\r\n    [`& .${autocompleteClasses.input}`]: _extends({}, styles.input, inputFocused && styles.inputFocused),\r\n    [`& .${autocompleteClasses.endAdornment}`]: styles.endAdornment,\r\n    [`& .${autocompleteClasses.clearIndicator}`]: styles.clearIndicator,\r\n    [`& .${autocompleteClasses.popupIndicator}`]: _extends({}, styles.popupIndicator, popupOpen && styles.popupIndicatorOpen)\r\n  }), styles.root || {});\r\n};\r\n\r\nconst overridesResolverPortal = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, styleProps.disablePortal && styles.popperDisablePortal, {\r\n    [`& .${autocompleteClasses.paper}`]: styles.paper,\r\n    [`& .${autocompleteClasses.listbox}`]: styles.listbox,\r\n    [`& .${autocompleteClasses.loading}`]: styles.loading,\r\n    [`& .${autocompleteClasses.noOptions}`]: styles.noOptions,\r\n    [`& .${autocompleteClasses.option}`]: styles.option,\r\n    [`& .${autocompleteClasses.groupLabel}`]: styles.groupLabel,\r\n    [`& .${autocompleteClasses.groupUl}`]: styles.groupUl\r\n  }), styles.popper || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    disablePortal,\r\n    focused,\r\n    fullWidth,\r\n    hasClearIcon,\r\n    hasPopupIcon,\r\n    inputFocused,\r\n    popupOpen,\r\n    size\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\r\n    inputRoot: ['inputRoot'],\r\n    input: ['input', inputFocused && 'inputFocused'],\r\n    tag: ['tag', `tagSize${capitalize(size)})`],\r\n    endAdornment: ['endAdornment'],\r\n    clearIndicator: ['clearIndicator'],\r\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\r\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\r\n    paper: ['paper'],\r\n    listbox: ['listbox'],\r\n    loading: ['loading'],\r\n    noOptions: ['noOptions'],\r\n    option: ['option'],\r\n    groupLabel: ['groupLabel'],\r\n    groupUl: ['groupUl']\r\n  };\r\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\r\n};\r\n\r\nconst AutocompleteRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the root element. */\r\n  [`&.Mui-focused .${autocompleteClasses.clearIndicator}`]: {\r\n    visibility: 'visible'\r\n  },\r\n\r\n  /* Avoid double tap issue on iOS */\r\n  '@media (pointer: fine)': {\r\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\r\n      visibility: 'visible'\r\n    }\r\n  }\r\n}, styleProps.fullWidth && {\r\n  width: '100%'\r\n}, {\r\n  /* Styles applied to the tag elements, e.g. the chips. */\r\n  [`& .${autocompleteClasses.tag}`]: _extends({\r\n    margin: 3,\r\n    maxWidth: 'calc(100% - 6px)'\r\n  }, styleProps.size === 'small' && {\r\n    margin: 2,\r\n    maxWidth: 'calc(100% - 4px)'\r\n  }),\r\n\r\n  /* Styles applied to the Input element. */\r\n  [`& .${autocompleteClasses.inputRoot}`]: {\r\n    flexWrap: 'wrap',\r\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\r\n      paddingRight: 26 + 4\r\n    },\r\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\r\n      paddingRight: 52 + 4\r\n    },\r\n    [`& .${autocompleteClasses.input}`]: {\r\n      width: 0,\r\n      minWidth: 30\r\n    },\r\n    '&.MuiInput-root': {\r\n      paddingBottom: 1,\r\n      '& .MuiInput-input': {\r\n        padding: '6px 4px 6px 0px'\r\n      }\r\n    },\r\n    '&.MuiInput-root.MuiInputBase-sizeSmall': {\r\n      '& .MuiInput-input': {\r\n        padding: '2px 4px 3px 0'\r\n      }\r\n    },\r\n    '&.MuiOutlinedInput-root': {\r\n      padding: 9,\r\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\r\n        paddingRight: 26 + 4 + 9\r\n      },\r\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\r\n        paddingRight: 52 + 4 + 9\r\n      },\r\n      [`& .${autocompleteClasses.input}`]: {\r\n        padding: '7.5px 4px 7.5px 6px'\r\n      },\r\n      [`& .${autocompleteClasses.endAdornment}`]: {\r\n        right: 9\r\n      }\r\n    },\r\n    '&.MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\r\n      padding: 6,\r\n      [`& .${autocompleteClasses.input}`]: {\r\n        padding: '2.5px 4px 2.5px 6px'\r\n      }\r\n    },\r\n    '&.MuiFilledInput-root': {\r\n      paddingTop: 19,\r\n      paddingLeft: 8,\r\n      [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\r\n        paddingRight: 26 + 4 + 9\r\n      },\r\n      [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\r\n        paddingRight: 52 + 4 + 9\r\n      },\r\n      '& .MuiFilledInput-input': {\r\n        padding: '7px 4px'\r\n      },\r\n      [`& .${autocompleteClasses.endAdornment}`]: {\r\n        right: 9\r\n      }\r\n    },\r\n    '&.MuiFilledInput-root.MuiInputBase-sizeSmall': {\r\n      paddingBottom: 1,\r\n      '& .MuiFilledInput-input': {\r\n        padding: '2.5px 4px'\r\n      }\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the input element. */\r\n  [`& .${autocompleteClasses.input}`]: _extends({\r\n    flexGrow: 1,\r\n    textOverflow: 'ellipsis',\r\n    opacity: 0\r\n  }, styleProps.inputFocused && {\r\n    opacity: 1\r\n  })\r\n}));\r\nconst AutocompleteEndAdornment = experimentalStyled('div', {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'EndAdornment'\r\n})({\r\n  /* Styles applied to the endAdornment element. */\r\n  // We use a position absolute to support wrapping tags.\r\n  position: 'absolute',\r\n  right: 0,\r\n  top: 'calc(50% - 14px)' // Center vertically\r\n\r\n});\r\nconst AutocompleteClearIndicator = experimentalStyled(IconButton, {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'ClearIndicator'\r\n})({\r\n  /* Styles applied to the clear indicator. */\r\n  marginRight: -2,\r\n  padding: 4,\r\n  visibility: 'hidden'\r\n});\r\nconst AutocompletePopupIndicator = experimentalStyled(IconButton, {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'PopupIndicator'\r\n})(({\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the popup indicator. */\r\n  padding: 2,\r\n  marginRight: -2\r\n}, styleProps.popupOpen && {\r\n  transform: 'rotate(180deg)'\r\n}));\r\nconst AutocompletePopper = experimentalStyled(Popper, {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'Popper',\r\n  overridesResolver: overridesResolverPortal\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the popper element. */\r\n  zIndex: theme.zIndex.modal\r\n}, styleProps.disablePortal && {\r\n  position: 'absolute'\r\n}));\r\nconst AutocompletePaper = experimentalStyled(Paper, {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'Paper'\r\n})(({\r\n  theme\r\n}) => _extends({}, theme.typography.body1, {\r\n  overflow: 'auto',\r\n  margin: '4px 0'\r\n}));\r\nconst AutocompleteLoading = experimentalStyled('div', {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'Loading'\r\n})(({\r\n  theme\r\n}) => ({\r\n  /* Styles applied to the loading wrapper. */\r\n  color: theme.palette.text.secondary,\r\n  padding: '14px 16px'\r\n}));\r\nconst AutocompleteNoOptions = experimentalStyled('div', {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'NoOptions'\r\n})(({\r\n  theme\r\n}) => ({\r\n  /* Styles applied to the no option wrapper. */\r\n  color: theme.palette.text.secondary,\r\n  padding: '14px 16px'\r\n}));\r\nconst AutocompleteListbox = experimentalStyled('div', {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'Listbox'\r\n})(({\r\n  theme\r\n}) => ({\r\n  /* Styles applied to the listbox component. */\r\n  listStyle: 'none',\r\n  margin: 0,\r\n  padding: '8px 0',\r\n  maxHeight: '40vh',\r\n  overflow: 'auto',\r\n\r\n  /* Styles applied to the option elements. */\r\n  [`& .${autocompleteClasses.option}`]: {\r\n    minHeight: 48,\r\n    display: 'flex',\r\n    overflow: 'hidden',\r\n    justifyContent: 'flex-start',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    paddingTop: 6,\r\n    boxSizing: 'border-box',\r\n    outline: '0',\r\n    WebkitTapHighlightColor: 'transparent',\r\n    paddingBottom: 6,\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    [theme.breakpoints.up('sm')]: {\r\n      minHeight: 'auto'\r\n    },\r\n    '&[data-focus=\"true\"]': {\r\n      backgroundColor: theme.palette.action.hover,\r\n      // Reset on touch devices, it doesn't add specificity\r\n      '@media (hover: none)': {\r\n        backgroundColor: 'transparent'\r\n      }\r\n    },\r\n    '&[aria-disabled=\"true\"]': {\r\n      opacity: theme.palette.action.disabledOpacity,\r\n      pointerEvents: 'none'\r\n    },\r\n    '&.Mui-focusVisible': {\r\n      backgroundColor: theme.palette.action.focus\r\n    },\r\n    '&[aria-selected=\"true\"]': {\r\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\r\n      '&[data-focus=\"true\"]': {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\r\n        // Reset on touch devices, it doesn't add specificity\r\n        '@media (hover: none)': {\r\n          backgroundColor: theme.palette.action.selected\r\n        }\r\n      },\r\n      '&.Mui-focusVisible': {\r\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\r\n      }\r\n    }\r\n  }\r\n}));\r\nconst AutocompleteGroupLabel = experimentalStyled(ListSubheader, {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'GroupLabel'\r\n})(({\r\n  theme\r\n}) => ({\r\n  /* Styles applied to the group's label elements. */\r\n  backgroundColor: theme.palette.background.paper,\r\n  top: -8\r\n}));\r\nconst AutocompleteGroupUl = experimentalStyled('ul', {}, {\r\n  name: 'MuiAutocomplete',\r\n  slot: 'GroupUl'\r\n})({\r\n  /* Styles applied to the group's ul elements. */\r\n  padding: 0,\r\n  [`& .${autocompleteClasses.option}`]: {\r\n    paddingLeft: 24\r\n  }\r\n});\r\nexport { createFilterOptions };\r\n\r\nvar _ref = /*#__PURE__*/_jsx(ClearIcon, {\r\n  fontSize: \"small\"\r\n});\r\n\r\nvar _ref2 = /*#__PURE__*/_jsx(ArrowDropDownIcon, {});\r\n\r\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiAutocomplete'\r\n  });\r\n  /* eslint-disable @typescript-eslint/no-unused-vars */\r\n\r\n  const {\r\n    autoComplete = false,\r\n    autoHighlight = false,\r\n    autoSelect = false,\r\n    blurOnSelect = false,\r\n    ChipProps,\r\n    className,\r\n    clearIcon = _ref,\r\n    clearOnBlur = !props.freeSolo,\r\n    clearOnEscape = false,\r\n    clearText = 'Clear',\r\n    closeText = 'Close',\r\n    defaultValue = props.multiple ? [] : null,\r\n    disableClearable = false,\r\n    disableCloseOnSelect = false,\r\n    disabled = false,\r\n    disabledItemsFocusable = false,\r\n    disableListWrap = false,\r\n    disablePortal = false,\r\n    filterSelectedOptions = false,\r\n    forcePopupIcon = 'auto',\r\n    freeSolo = false,\r\n    fullWidth = false,\r\n    getLimitTagsText = more => `+${more}`,\r\n    getOptionLabel = option => {\r\n      var _option$label;\r\n\r\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\r\n    },\r\n    groupBy,\r\n    handleHomeEndKeys = !props.freeSolo,\r\n    includeInputInList = false,\r\n    limitTags = -1,\r\n    ListboxComponent = 'ul',\r\n    ListboxProps,\r\n    loading = false,\r\n    loadingText = 'Loading…',\r\n    multiple = false,\r\n    noOptionsText = 'No options',\r\n    openOnFocus = false,\r\n    openText = 'Open',\r\n    PaperComponent = Paper,\r\n    PopperComponent = Popper,\r\n    popupIcon = _ref2,\r\n    renderGroup: renderGroupProp,\r\n    renderInput,\r\n    renderOption: renderOptionProp,\r\n    renderTags,\r\n    selectOnFocus = !props.freeSolo,\r\n    size = 'medium'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\r\n  /* eslint-enable @typescript-eslint/no-unused-vars */\r\n\r\n\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    getInputLabelProps,\r\n    getPopupIndicatorProps,\r\n    getClearProps,\r\n    getTagProps,\r\n    getListboxProps,\r\n    getOptionProps,\r\n    value,\r\n    dirty,\r\n    id,\r\n    popupOpen,\r\n    focused,\r\n    focusedTag,\r\n    anchorEl,\r\n    setAnchorEl,\r\n    inputValue,\r\n    groupedOptions\r\n  } = useAutocomplete(_extends({}, props, {\r\n    componentName: 'Autocomplete'\r\n  }));\r\n  const hasClearIcon = !disableClearable && !disabled && dirty;\r\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\r\n\r\n  const styleProps = _extends({}, props, {\r\n    disablePortal,\r\n    focused,\r\n    fullWidth,\r\n    hasClearIcon,\r\n    hasPopupIcon,\r\n    inputFocused: focusedTag === -1,\r\n    popupOpen,\r\n    size\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  let startAdornment;\r\n\r\n  if (multiple && value.length > 0) {\r\n    const getCustomizedTagProps = params => _extends({\r\n      className: clsx(classes.tag),\r\n      disabled\r\n    }, getTagProps(params));\r\n\r\n    if (renderTags) {\r\n      startAdornment = renderTags(value, getCustomizedTagProps);\r\n    } else {\r\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\r\n        label: getOptionLabel(option),\r\n        size: size\r\n      }, getCustomizedTagProps({\r\n        index\r\n      }), ChipProps)));\r\n    }\r\n  }\r\n\r\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\r\n    const more = startAdornment.length - limitTags;\r\n\r\n    if (!focused && more > 0) {\r\n      startAdornment = startAdornment.splice(0, limitTags);\r\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\r\n        className: classes.tag,\r\n        children: getLimitTagsText(more)\r\n      }, startAdornment.length));\r\n    }\r\n  }\r\n\r\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\r\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\r\n      className: classes.groupLabel,\r\n      styleProps: styleProps,\r\n      component: \"div\",\r\n      children: params.group\r\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\r\n      className: classes.groupUl,\r\n      styleProps: styleProps,\r\n      children: params.children\r\n    })]\r\n  }, params.key);\r\n\r\n  const renderGroup = renderGroupProp || defaultRenderGroup;\r\n\r\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\r\n    children: getOptionLabel(option)\r\n  }));\r\n\r\n  const renderOption = renderOptionProp || defaultRenderOption;\r\n\r\n  const renderListOption = (option, index) => {\r\n    const optionProps = getOptionProps({\r\n      option,\r\n      index\r\n    });\r\n    return renderOption(_extends({}, optionProps, {\r\n      className: classes.option\r\n    }), option, {\r\n      selected: optionProps['aria-selected'],\r\n      inputValue\r\n    });\r\n  };\r\n\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\r\n      ref: ref,\r\n      className: clsx(classes.root, className),\r\n      styleProps: styleProps\r\n    }, getRootProps(other), {\r\n      children: renderInput({\r\n        id,\r\n        disabled,\r\n        fullWidth: true,\r\n        size: size === 'small' ? 'small' : undefined,\r\n        InputLabelProps: getInputLabelProps(),\r\n        InputProps: {\r\n          ref: setAnchorEl,\r\n          className: classes.inputRoot,\r\n          startAdornment,\r\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\r\n            className: classes.endAdornment,\r\n            styleProps: styleProps,\r\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\r\n              \"aria-label\": clearText,\r\n              title: clearText,\r\n              className: classes.clearIndicator,\r\n              styleProps: styleProps,\r\n              children: clearIcon\r\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\r\n              disabled: disabled,\r\n              \"aria-label\": popupOpen ? closeText : openText,\r\n              title: popupOpen ? closeText : openText,\r\n              className: clsx(classes.popupIndicator),\r\n              styleProps: styleProps,\r\n              children: popupIcon\r\n            })) : null]\r\n          })\r\n        },\r\n        inputProps: _extends({\r\n          className: clsx(classes.input),\r\n          disabled\r\n        }, getInputProps())\r\n      })\r\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\r\n      as: PopperComponent,\r\n      className: clsx(classes.popper),\r\n      disablePortal: disablePortal,\r\n      style: {\r\n        width: anchorEl ? anchorEl.clientWidth : null\r\n      },\r\n      styleProps: styleProps,\r\n      role: \"presentation\",\r\n      anchorEl: anchorEl,\r\n      open: true,\r\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\r\n        as: PaperComponent,\r\n        className: classes.paper,\r\n        styleProps: styleProps,\r\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\r\n          className: classes.loading,\r\n          styleProps: styleProps,\r\n          children: loadingText\r\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\r\n          className: classes.noOptions,\r\n          styleProps: styleProps,\r\n          role: \"presentation\",\r\n          onMouseDown: event => {\r\n            // Prevent input blur when interacting with the \"no options\" content\r\n            event.preventDefault();\r\n          },\r\n          children: noOptionsText\r\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\r\n          as: ListboxComponent,\r\n          className: classes.listbox,\r\n          styleProps: styleProps\r\n        }, getListboxProps(), ListboxProps, {\r\n          children: groupedOptions.map((option, index) => {\r\n            if (groupBy) {\r\n              return renderGroup({\r\n                key: option.key,\r\n                group: option.group,\r\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\r\n              });\r\n            }\r\n\r\n            return renderListOption(option, index);\r\n          })\r\n        })) : null]\r\n      })\r\n    }) : null]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\r\n   * known as the completion string, appears inline after the input cursor in the textbox.\r\n   * The inline completion string is visually highlighted and has a selected state.\r\n   * @default false\r\n   */\r\n  autoComplete: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the first option is automatically highlighted.\r\n   * @default false\r\n   */\r\n  autoHighlight: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the selected option becomes the value of the input\r\n   * when the Autocomplete loses focus unless the user chooses\r\n   * a different option or changes the character string in the input.\r\n   * @default false\r\n   */\r\n  autoSelect: PropTypes.bool,\r\n\r\n  /**\r\n   * Control if the input should be blurred when an option is selected:\r\n   *\r\n   * - `false` the input is not blurred.\r\n   * - `true` the input is always blurred.\r\n   * - `touch` the input is blurred after a touch event.\r\n   * - `mouse` the input is blurred after a mouse event.\r\n   * @default false\r\n   */\r\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\r\n\r\n  /**\r\n   * Props applied to the [`Chip`](/api/chip/) element.\r\n   */\r\n  ChipProps: PropTypes.object,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The icon to display in place of the default clear icon.\r\n   * @default <ClearIcon fontSize=\"small\" />\r\n   */\r\n  clearIcon: PropTypes.node,\r\n\r\n  /**\r\n   * If `true`, the input's text is cleared on blur if no value is selected.\r\n   *\r\n   * Set to `true` if you want to help the user enter a new value.\r\n   * Set to `false` if you want to help the user resume his search.\r\n   * @default !props.freeSolo\r\n   */\r\n  clearOnBlur: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, clear all values when the user presses escape and the popup is closed.\r\n   * @default false\r\n   */\r\n  clearOnEscape: PropTypes.bool,\r\n\r\n  /**\r\n   * Override the default text for the *clear* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Clear'\r\n   */\r\n  clearText: PropTypes.string,\r\n\r\n  /**\r\n   * Override the default text for the *close popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Close'\r\n   */\r\n  closeText: PropTypes.string,\r\n\r\n  /**\r\n   * The default value. Use when the component is not controlled.\r\n   * @default props.multiple ? [] : null\r\n   */\r\n  defaultValue: PropTypes.any,\r\n\r\n  /**\r\n   * If `true`, the input can't be cleared.\r\n   * @default false\r\n   */\r\n  disableClearable: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the popup won't close when a value is selected.\r\n   * @default false\r\n   */\r\n  disableCloseOnSelect: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the component is disabled.\r\n   * @default false\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, will allow focus on disabled items.\r\n   * @default false\r\n   */\r\n  disabledItemsFocusable: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the list box in the popup will not wrap focus.\r\n   * @default false\r\n   */\r\n  disableListWrap: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\r\n  disablePortal: PropTypes.bool,\r\n\r\n  /**\r\n   * A filter function that determines the options that are eligible.\r\n   *\r\n   * @param {T[]} options The options to render.\r\n   * @param {object} state The state of the component.\r\n   * @returns {T[]}\r\n   */\r\n  filterOptions: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, hide the selected options from the list box.\r\n   * @default false\r\n   */\r\n  filterSelectedOptions: PropTypes.bool,\r\n\r\n  /**\r\n   * Force the visibility display of the popup icon.\r\n   * @default 'auto'\r\n   */\r\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\r\n\r\n  /**\r\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\r\n   * @default false\r\n   */\r\n  freeSolo: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the input will take up the full width of its container.\r\n   * @default false\r\n   */\r\n  fullWidth: PropTypes.bool,\r\n\r\n  /**\r\n   * The label to display when the tags are truncated (`limitTags`).\r\n   *\r\n   * @param {number} more The number of truncated tags.\r\n   * @returns {ReactNode}\r\n   * @default (more) => `+${more}`\r\n   */\r\n  getLimitTagsText: PropTypes.func,\r\n\r\n  /**\r\n   * Used to determine the disabled state for a given option.\r\n   *\r\n   * @param {T} option The option to test.\r\n   * @returns {boolean}\r\n   */\r\n  getOptionDisabled: PropTypes.func,\r\n\r\n  /**\r\n   * Used to determine the string value for a given option.\r\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\r\n   *\r\n   * @param {T} option\r\n   * @returns {string}\r\n   * @default (option) => option.label ?? option\r\n   */\r\n  getOptionLabel: PropTypes.func,\r\n\r\n  /**\r\n   * Used to determine if an option is selected, considering the current value(s).\r\n   * Uses strict equality by default.\r\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\r\n   *\r\n   * @param {T} option The option to test.\r\n   * @param {T} value The value to test against.\r\n   * @returns {boolean}\r\n   */\r\n  getOptionSelected: PropTypes.func,\r\n\r\n  /**\r\n   * If provided, the options will be grouped under the returned string.\r\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\r\n   *\r\n   * @param {T} options The options to group.\r\n   * @returns {string}\r\n   */\r\n  groupBy: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\r\n   * It should move focus to the first option and last option, respectively.\r\n   * @default !props.freeSolo\r\n   */\r\n  handleHomeEndKeys: PropTypes.bool,\r\n\r\n  /**\r\n   * This prop is used to help implement the accessibility logic.\r\n   * If you don't provide this prop. It falls back to a randomly generated id.\r\n   */\r\n  id: PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the highlight can move to the input.\r\n   * @default false\r\n   */\r\n  includeInputInList: PropTypes.bool,\r\n\r\n  /**\r\n   * The input value.\r\n   */\r\n  inputValue: PropTypes.string,\r\n\r\n  /**\r\n   * The maximum number of tags that will be visible when not focused.\r\n   * Set `-1` to disable the limit.\r\n   * @default -1\r\n   */\r\n  limitTags: integerPropType,\r\n\r\n  /**\r\n   * The component used to render the listbox.\r\n   * @default 'ul'\r\n   */\r\n  ListboxComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the Listbox element.\r\n   */\r\n  ListboxProps: PropTypes.object,\r\n\r\n  /**\r\n   * If `true`, the component is in a loading state.\r\n   * @default false\r\n   */\r\n  loading: PropTypes.bool,\r\n\r\n  /**\r\n   * Text to display when in a loading state.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Loading…'\r\n   */\r\n  loadingText: PropTypes.node,\r\n\r\n  /**\r\n   * If `true`, `value` must be an array and the menu will support multiple selections.\r\n   * @default false\r\n   */\r\n  multiple: PropTypes.bool,\r\n\r\n  /**\r\n   * Text to display when there are no options.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'No options'\r\n   */\r\n  noOptionsText: PropTypes.node,\r\n\r\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {T|T[]} value The new value of the component.\r\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\r\n   * @param {string} [details]\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the popup requests to be closed.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"remove-option\"`, `\"blur\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the highlight option changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {T} option The highlighted option.\r\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\r\n   */\r\n  onHighlightChange: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the input value changes.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} value The new value of the text input.\r\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\r\n   */\r\n  onInputChange: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the popup requests to be opened.\r\n   * Use in controlled mode (see open).\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onOpen: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the popup will open on input focus.\r\n   * @default false\r\n   */\r\n  openOnFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Override the default text for the *open popup* icon button.\r\n   *\r\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\r\n   * @default 'Open'\r\n   */\r\n  openText: PropTypes.string,\r\n\r\n  /**\r\n   * Array of options.\r\n   */\r\n  options: PropTypes.array.isRequired,\r\n\r\n  /**\r\n   * The component used to render the body of the popup.\r\n   * @default Paper\r\n   */\r\n  PaperComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * The component used to position the popup.\r\n   * @default Popper\r\n   */\r\n  PopperComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * The icon to display in place of the default popup icon.\r\n   * @default <ArrowDropDownIcon />\r\n   */\r\n  popupIcon: PropTypes.node,\r\n\r\n  /**\r\n   * Render the group.\r\n   *\r\n   * @param {any} option The group to render.\r\n   * @returns {ReactNode}\r\n   */\r\n  renderGroup: PropTypes.func,\r\n\r\n  /**\r\n   * Render the input.\r\n   *\r\n   * @param {object} params\r\n   * @returns {ReactNode}\r\n   */\r\n  renderInput: PropTypes.func.isRequired,\r\n\r\n  /**\r\n   * Render the option, use `getOptionLabel` by default.\r\n   *\r\n   * @param {object} props The props to apply on the li element.\r\n   * @param {T} option The option to render.\r\n   * @param {object} state The state of the component.\r\n   * @returns {ReactNode}\r\n   */\r\n  renderOption: PropTypes.func,\r\n\r\n  /**\r\n   * Render the selected value.\r\n   *\r\n   * @param {T[]} value The `value` provided to the component.\r\n   * @param {function} getTagProps A tag props getter.\r\n   * @returns {ReactNode}\r\n   */\r\n  renderTags: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the input's text is selected on focus.\r\n   * It helps the user clear the selected value.\r\n   * @default !props.freeSolo\r\n   */\r\n  selectOnFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * The size of the component.\r\n   * @default 'medium'\r\n   */\r\n  size: PropTypes.oneOf(['medium', 'small']),\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * The value of the autocomplete.\r\n   *\r\n   * The value must have reference equality with the option in order to be selected.\r\n   * You can customize the equality behavior with the `getOptionSelected` prop.\r\n   */\r\n  value: chainPropTypes(PropTypes.any, props => {\r\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\r\n      return new Error(['Material-UI: The Autocomplete expects the `value` prop to be an array or undefined.', `However, ${props.value} was provided.`].join('\\n'));\r\n    }\r\n\r\n    return null;\r\n  })\r\n} : void 0;\r\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}