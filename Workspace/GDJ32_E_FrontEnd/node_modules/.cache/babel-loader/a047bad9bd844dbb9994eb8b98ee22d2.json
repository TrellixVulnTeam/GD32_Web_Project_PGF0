{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GDJ32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\board\\\\ListBoardComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Box } from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Pagination from '@material-ui/lab/Pagination';\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\nimport BoardService from '../../service/BoardService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = {\n  NOTICE: {\n    value: 0,\n    name: \"공지사항\"\n  },\n  FREEBOARD: {\n    value: 1,\n    name: \"자유게시판\"\n  },\n  STORAGE: {\n    value: 2,\n    name: \"자료실\"\n  },\n  MARCKET: {\n    value: 3,\n    name: \"중고나라\"\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    },\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  paginationBotton: {\n    justifyContent: \"center\"\n  }\n}));\n\nconst ListBoardComponent = () => {\n  _s();\n\n  const history = useNavigate();\n  const [pNum, setNum] = useState(1);\n  const [paging, setPage] = useState({});\n  const [boards, setBoards] = useState([]);\n  const classes = useStyles(); // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\n\n  useEffect(() => {\n    // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\n    BoardService.getBoards(pNum, 10, 10).then(res => {\n      setNum(res.data.pagingData.currentPageNum);\n      setPage(res.data.pagingData);\n      setBoards(res.data.list);\n      console.log(res.data.list);\n      console.log(\"pNum : \", pNum);\n    });\n  }, [pNum]); // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\n  // const listBoard = (pageNum) => {\n  //     console.log(\"listBoard\", pageNum);\n  // \n  //     console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\n  //     BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\n  //         setNum(res.data.pagingData.currentPageNum);\n  //         setPage(res.data.pagingData);\n  //         setBoards(res.data.list);\n  //     });\n  // }\n\n  const handleChange = (event, value) => {\n    setNum(value);\n    console.log(\"value : \", value);\n    console.log(paging);\n    history(`/app/board/${value}`, {\n      replace: false\n    }); // listBoard(value);\n  };\n\n  const getBoardCategory = value => {\n    console.log(\"getBoardCategory\");\n    let name = \"Not Defined\";\n\n    switch (value) {\n      case Category.NOTICE.value:\n        name = Category.NOTICE.name;\n        break;\n\n      case Category.FREEBOARD.value:\n        name = Category.FREEBOARD.name;\n        break;\n\n      case Category.STORAGE.value:\n        name = Category.STORAGE.name;\n        break;\n\n      case Category.MARCKET.value:\n        name = Category.MARCKET.name;\n        break;\n\n      default:\n        name = \"Not Defined\";\n        break;\n    }\n\n    return name;\n  };\n\n  const getBoardCreateDay = value => {\n    const createDay = new Intl.DateTimeFormat('ko-KR').format(Date.parse(value));\n    return createDay;\n  }; // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\n\n\n  const readBoard = event => {\n    // console.log(\"readBoard event\", idx);\n    event.preventDefault();\n    console.log(\"###################\", event.target.getAttribute('value'));\n    const idx = event.target.getAttribute('value');\n    BoardService.getOneBoard(event.target.getAttribute('value')).then(res => {\n      console.log(res);\n      console.log(`/read-board/${res.data.idx}`);\n      history(`/app/read-board/${idx}`, {\n        replace: true,\n        state: {\n          idx: res.data.idx,\n          board: res.data\n        }\n      });\n    }).catch(err => {\n      console.log(`getBoard err : ${err}`);\n    });\n  }; // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\n  // this.props.history.push('이동할 링크'); -> 일반적\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\n\n\n  const createBoard = event => {\n    event.preventDefault();\n    const pIdx = \"_create\";\n    history(\"/app/create-board/_create\", {\n      replace: true,\n      state: {\n        idx: pIdx\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"btn btn-primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(CreateOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 100\n        }, this),\n        onClick: e => createBoard(e),\n        children: \" \\uAE00 \\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"table\",\n      style: {\n        padding: \"0 12px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n          children: [/*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"50%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n            width: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uBC88\\uD638\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC81C\\uBAA9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC791\\uC131\\uC790 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC791\\uC131\\uC77C \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC870\\uD68C\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"\\uC88B\\uC544\\uC694\\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: boards.map(board => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.idx, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", getBoardCategory(board.category), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"#\",\n                value: board.idx,\n                onClick: e => readBoard(e),\n                children: board.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.id, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", getBoardCreateDay(board.createtDay), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.viewCnt, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: [\" \", board.likes, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 37\n            }, this)]\n          }, board.idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Page: \", pNum]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        className: classes.paginationBotton,\n        count: paging.pageNumCountTotal,\n        page: pNum,\n        onChange: handleChange,\n        value: pNum,\n        name: \"pNum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListBoardComponent, \"W2kN6vo87f7bNsjyP35mYK3tinQ=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c = ListBoardComponent;\nexport default ListBoardComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListBoardComponent\");","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ListBoardComponent.js"],"names":["React","useEffect","useState","useNavigate","Button","Box","Table","TableHead","TableBody","TableRow","TableCell","makeStyles","Typography","Pagination","CreateOutlinedIcon","BoardService","Category","NOTICE","value","name","FREEBOARD","STORAGE","MARCKET","useStyles","theme","root","marginTop","spacing","margin","paginationBotton","justifyContent","ListBoardComponent","history","pNum","setNum","paging","setPage","boards","setBoards","classes","getBoards","then","res","data","pagingData","currentPageNum","list","console","log","handleChange","event","replace","getBoardCategory","getBoardCreateDay","createDay","Intl","DateTimeFormat","format","Date","parse","readBoard","preventDefault","target","getAttribute","idx","getOneBoard","state","board","catch","err","createBoard","pIdx","e","padding","map","category","title","id","createtDay","viewCnt","likes","pageNumCountTotal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n    Button,\r\n    Box,\r\n} from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport CreateOutlinedIcon from '@material-ui/icons/CreateOutlined';\r\nimport BoardService from '../../service/BoardService';\r\n\r\nconst Category = {\r\n        NOTICE: {value: 0, name: \"공지사항\"},\r\n        FREEBOARD: {value: 1, name: \"자유게시판\"},\r\n        STORAGE: {value: 2, name: \"자료실\"},\r\n        MARCKET: {value: 3, name: \"중고나라\"}\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n        },\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n    },\r\n    paginationBotton: {\r\n        justifyContent: \"center\"\r\n    }\r\n}));\r\n\r\nconst ListBoardComponent = () => {    \r\n    const history = useNavigate();\r\n    const [pNum, setNum] = useState(1);\r\n    const [paging, setPage] = useState({});\r\n    const [boards, setBoards] = useState([]);\r\n\r\n    const classes = useStyles();\r\n    \r\n    // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n    useEffect(() => {\r\n        // getBoard호출시 페이지 번호 외에 한페이지에 표시할 게시물 수와 총 페이지 수량을 적어줘야함\r\n        BoardService.getBoards(pNum, 10, 10).then((res) => {\r\n            setNum(res.data.pagingData.currentPageNum);\r\n            setPage(res.data.pagingData);\r\n            setBoards(res.data.list);\r\n            console.log(res.data.list);\r\n            console.log(\"pNum : \", pNum);\r\n        });\r\n    }, [pNum]);\r\n    \r\n    // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n    // const listBoard = (pageNum) => {\r\n    //     console.log(\"listBoard\", pageNum);\r\n// \r\n    //     console.log(\"pageNumCountTotal : \", paging.pageNumCountTotal);\r\n    //     BoardService.getBoards(pageNum, 10, paging.pageNumCountTotal).then((res) => {\r\n    //         setNum(res.data.pagingData.currentPageNum);\r\n    //         setPage(res.data.pagingData);\r\n    //         setBoards(res.data.list);\r\n    //     });\r\n    // }\r\n\r\n    const handleChange = (event, value) => {\r\n        setNum(value);\r\n        console.log(\"value : \", value);\r\n        console.log(paging);\r\n        history(`/app/board/${value}`, {\r\n            replace: false,\r\n        });\r\n        // listBoard(value);\r\n    }\r\n\r\n    const getBoardCategory = (value) => {\r\n        console.log(\"getBoardCategory\");\r\n        let name = \"Not Defined\";\r\n        switch(value) {\r\n            case Category.NOTICE.value:\r\n                name = Category.NOTICE.name;\r\n                break;\r\n            case Category.FREEBOARD.value:\r\n                name = Category.FREEBOARD.name;\r\n                break;\r\n            case Category.STORAGE.value:\r\n                name = Category.STORAGE.name;\r\n                break;\r\n            case Category.MARCKET.value:\r\n                name = Category.MARCKET.name;\r\n                break;\r\n            default:\r\n                name = \"Not Defined\";\r\n                break;\r\n        }\r\n        return name;\r\n    }\r\n\r\n    const getBoardCreateDay = (value) => {\r\n        const createDay = new Intl.DateTimeFormat('ko-KR').format(Date.parse(value));\r\n        return createDay;\r\n    }\r\n\r\n    // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n    const readBoard = (event) => {\r\n        // console.log(\"readBoard event\", idx);\r\n        event.preventDefault();\r\n        console.log(\"###################\", event.target.getAttribute('value'));\r\n        const idx = event.target.getAttribute('value');\r\n        BoardService.getOneBoard(event.target.getAttribute('value'))\r\n            .then(res => {\r\n                console.log(res);\r\n                console.log(`/read-board/${res.data.idx}`);\r\n                history(`/app/read-board/${idx}`, {\r\n                    replace: true,\r\n                    state: {\r\n                        idx: res.data.idx,\r\n                        board: res.data\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(`getBoard err : ${ err }`);\r\n            });\r\n    }\r\n\r\n    // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n    // this.props.history.push('이동할 링크'); -> 일반적\r\n    // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n    // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n    const createBoard = (event) => {\r\n        event.preventDefault();\r\n        const pIdx = \"_create\";\r\n        history(\"/app/create-board/_create\", {\r\n            replace: true,\r\n            state: { idx: pIdx }\r\n        });\r\n    }\r\n    return (\r\n        <Box>\r\n            <h2 className=\"text-center\">게시판 목록</h2>\r\n            <Box className = \"row\">\r\n                <Button variant=\"contained\" color=\"primary\" className=\"btn btn-primary\" startIcon={<CreateOutlinedIcon/>} onClick={(e) => createBoard(e)}> 글 작성</Button>\r\n            </Box>\r\n            <Box className =\"table\" style={{ padding: \"0 12px\" }}>\r\n                <Table className=\"table table-striped table-bordered\">\r\n                    <colgroup>\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"50%\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                    </colgroup>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">번호</TableCell>\r\n                            <TableCell align=\"center\">카테고리 </TableCell>\r\n                            <TableCell align=\"center\">제목</TableCell>\r\n                            <TableCell align=\"center\">작성자 </TableCell>\r\n                            <TableCell align=\"center\">작성일 </TableCell>\r\n                            <TableCell align=\"center\">조회수</TableCell>\r\n                            <TableCell align=\"center\">좋아요수</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {\r\n                            boards.map(\r\n                                board => \r\n                                <TableRow key = {board.idx}>\r\n                                    <TableCell align=\"center\"> {board.idx} </TableCell>\r\n                                    <TableCell align=\"center\"> {getBoardCategory(board.category)} </TableCell>\r\n                                        <TableCell>\r\n                                            <a href=\"#\" value={board.idx} onClick={(e) => readBoard(e)}>\r\n                                                {board.title}\r\n                                            </a>\r\n                                        </TableCell>\r\n                                    <TableCell align=\"center\"> {board.id} </TableCell>\r\n                                    <TableCell align=\"center\"> {getBoardCreateDay(board.createtDay)} </TableCell>\r\n                                    <TableCell align=\"center\"> {board.viewCnt} </TableCell>\r\n                                    <TableCell align=\"center\"> {board.likes} </TableCell>\r\n                                </TableRow>\r\n                            )\r\n                        }\r\n                    </TableBody>\r\n                </Table>\r\n            </Box>\r\n            <Box className={classes.root}>\r\n                <Typography>Page: {pNum}</Typography>\r\n                <Pagination className={classes.paginationBotton} count={paging.pageNumCountTotal} page={pNum} onChange={handleChange} value={pNum} name=\"pNum\"/>\r\n            </Box>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ListBoardComponent;\r\n"]},"metadata":{},"sourceType":"module"}