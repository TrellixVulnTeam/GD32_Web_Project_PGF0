{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GDJ32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\board\\\\ListBoardComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Button } from '@material-ui/core';\nimport BoardService from '../../service/BoardService'; // const createBtn = {\n//     width : \"7rem\",\n//     color: \"#212529\",\n//     background: \"lightgray\",\n//     padding: \".375rem .75rem\",\n//     border: \"1px solid lightgray\",\n//     borderRadius: \".25rem\",\n//     fontSize: \"1rem\",\n//     lineHeight: 1.7\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = {\n  NOTICE: {\n    value: 0,\n    name: \"공지사항\"\n  },\n  FREEBOARD: {\n    value: 1,\n    name: \"자유게시판\"\n  },\n  STORAGE: {\n    value: 2,\n    name: \"자료실\"\n  },\n  MARCKET: {\n    value: 3,\n    name: \"중고나라\"\n  }\n};\n\nclass ListBoardComponent extends Component {\n  constructor(props) {\n    super(props); // this.state에 현재 페이지 번호를 저장하기 위한 pNum파라미터, paging처리를 위한 paging객체 선언\n\n    this.componentDidMount = () => {\n      BoardService.getBoards(this.state.pNum).then(res => {\n        this.setState({\n          pNum: res.data.pagingData.currentPageNum,\n          paging: res.data.pagingData,\n          boards: res.data.list\n        });\n      });\n    };\n\n    this.state = {\n      pNum: 1,\n      paging: {},\n      boards: []\n    }; // #1. 글 작성 버튼 클릭시 동작\n    // this.createBoard = this.createBoard.bind(this);\n\n    this.state = this.state.bind(this);\n  } // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\n\n\n  // # 3.\n  render() {\n    const boardState = this.state;\n    const thisProps = this.props; // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\n\n    const listBoard = pNum => {\n      console.log(`pageNum : ${pNum}`);\n      BoardService.getBoards(pNum).then(res => {\n        console.log(res.data);\n        this.setState({\n          pNum: res.data.pagingData.currentPageNum,\n          paging: res.data.pagingData,\n          boards: res.data.list\n        });\n      });\n    };\n\n    const getBoardCategory = value => {\n      let name = \"Not Defined\";\n\n      switch (value) {\n        case Category.NOTICE.value:\n          name = Category.NOTICE.name;\n          break;\n\n        case Category.FREEBOARD.value:\n          name = Category.FREEBOARD.name;\n          break;\n\n        case Category.STORAGE.value:\n          name = Category.STORAGE.name;\n          break;\n\n        case Category.MARCKET.value:\n          name = Category.MARCKET.name;\n          break;\n\n        default:\n          name = \"Not Defined\";\n          break;\n      }\n\n      return name;\n    };\n\n    const getBoardCreateDay = value => {\n      console.log(`작성일 : ${value}`);\n      return value;\n    }; // 페이지 버튼을 표시하는 함수\n\n\n    const viewPaging = () => {\n      const pageNums = [];\n\n      for (let i = boardState.paging.pageNumStart; i <= boardState.paging.pageNumEnd; i++) {\n        pageNums.push(i);\n      }\n\n      if (Object.keys(pageNums).length > 0) {\n        Object.keys(pageNums).forEach(page => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            className: \"page-item\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"page-link\",\n              onClick: listBoard(page),\n              \"aria-hidden\": \"true\",\n              role: \"button\",\n              tabIndex: \"-1\",\n              children: page\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this)\n          }, page.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this);\n        });\n      } // pageNums.map(page => {\n      //     (\n      //         <li className=\"page-item\" key={page.toString()} >\n      //             <a className=\"page-link\" onClick={listBoard(page)} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">{page}</a>\n      //         </li>\n      //     );\n      // });\n\n    }; // 이전 페이지 이동버튼을 출력하는 함수\n\n\n    const isPagingPrev = () => {\n      if (boardState.paging.prev) {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            onClick: listBoard(boardState.paging.currentPageNum - 1),\n            \"aria-hidden\": \"true\",\n            role: \"button\",\n            tabIndex: \"-1\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this);\n      }\n    }; // 다음 페이지 이동 버튼을 출력하는 함수\n\n\n    const isPagingNext = () => {\n      if (boardState.paging.next) {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            onClick: listBoard(boardState.paging.currentPageNum + 1),\n            \"aria-hidden\": \"true\",\n            role: \"button\",\n            tabIndex: \"-1\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this);\n      }\n    }; // 첫페이지 이동 버튼을 출력하는 함수\n\n\n    const isMoveToFirstPage = () => {\n      if (boardState.pNum !== 1) {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            onClick: listBoard(1),\n            \"aria-hidden\": \"true\",\n            role: \"button\",\n            tabIndex: \"-1\",\n            children: \"Move to First Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this);\n      }\n    }; // 마지막 페이지 이동 버튼을 출력하는 함수\n\n\n    const isMoveToLastPage = () => {\n      if (boardState.pNum !== boardState.paging.pageNumCountTotal) {\n        /*#__PURE__*/\n        _jsxDEV(\"li\", {\n          className: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            onClick: listBoard(boardState.paging.pageNumCountTotal),\n            \"aria-hidden\": \"true\",\n            role: \"button\",\n            tabIndex: \"-1\",\n            children: [\"LastPage(\", boardState.paging.pageNumCountTotal, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this);\n      }\n    }; // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\n    // this.props.history.push('이동할 링크'); -> 일반적\n    // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\n    // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\n\n\n    const createBoard = () => {\n      thisProps.history.push('/create-board/_create');\n    }; // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\n    // readBoard(index){\n\n\n    const readBoard = idx => {\n      // this.props.history.push(`/read-board/${index}` ); // * 인자넘김 방법1\n      // this.props.history.push('/read-board/' + index ); // *인자넘검 방법2\n      thisProps.history.push(`/read-board/${idx}`);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-primary\",\n          onClick: createBoard,\n          children: \" \\uAE00 \\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table\",\n        style: {\n          padding: \"0 12px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n            children: [/*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"5%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uBC88\\uD638\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC81C\\uBAA9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC791\\uC131\\uC790 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC791\\uC131\\uC77C \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC870\\uD68C\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC88B\\uC544\\uC694\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: boardState.boards.map(board =>\n            /*#__PURE__*/\n            // <tr key = {board.index}>\n            _jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.idx, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", getBoardCategory(board.category), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: readBoard(board.idx),\n                  \"aria-hidden\": \"true\",\n                  role: \"button\",\n                  tabIndex: \"-1\",\n                  children: board.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", getBoardCreateDay(board.created_day), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.viewCnt, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.likes, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 41\n              }, this)]\n            }, board.idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"Page navigation example\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination justify-content-center\",\n            children: [isMoveToFirstPage(), isPagingPrev(), viewPaging(), isPagingNext(), isMoveToLastPage()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListBoardComponent;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ListBoardComponent.jsx"],"names":["React","Component","Button","BoardService","Category","NOTICE","value","name","FREEBOARD","STORAGE","MARCKET","ListBoardComponent","constructor","props","componentDidMount","getBoards","state","pNum","then","res","setState","data","pagingData","currentPageNum","paging","boards","list","bind","render","boardState","thisProps","listBoard","console","log","getBoardCategory","getBoardCreateDay","viewPaging","pageNums","i","pageNumStart","pageNumEnd","push","Object","keys","length","forEach","page","toString","isPagingPrev","prev","isPagingNext","next","isMoveToFirstPage","isMoveToLastPage","pageNumCountTotal","createBoard","history","readBoard","idx","padding","map","board","category","title","id","created_day","viewCnt","likes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport BoardService from '../../service/BoardService';\r\n\r\n// const createBtn = {\r\n//     width : \"7rem\",\r\n//     color: \"#212529\",\r\n//     background: \"lightgray\",\r\n//     padding: \".375rem .75rem\",\r\n//     border: \"1px solid lightgray\",\r\n//     borderRadius: \".25rem\",\r\n//     fontSize: \"1rem\",\r\n//     lineHeight: 1.7\r\n// }\r\n\r\nconst Category = {\r\n        NOTICE: {value: 0, name: \"공지사항\"},\r\n        FREEBOARD: {value: 1, name: \"자유게시판\"},\r\n        STORAGE: {value: 2, name: \"자료실\"},\r\n        MARCKET: {value: 3, name: \"중고나라\"}\r\n}\r\n\r\nclass ListBoardComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    // this.state에 현재 페이지 번호를 저장하기 위한 pNum파라미터, paging처리를 위한 paging객체 선언\r\n        this.state = { \r\n            pNum: 1,\r\n            paging: {},\r\n            boards: []\r\n        }\r\n        // #1. 글 작성 버튼 클릭시 동작\r\n        // this.createBoard = this.createBoard.bind(this);\r\n        this.state = this.state.bind(this);\r\n    }\r\n    // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n    componentDidMount = () => {\r\n        BoardService.getBoards(this.state.pNum).then((res) => {\r\n            this.setState({ \r\n                pNum: res.data.pagingData.currentPageNum,\r\n                paging: res.data.pagingData,\r\n                boards: res.data.list});\r\n        });\r\n    }\r\n    \r\n    // # 3.\r\n    render() {\r\n        const boardState = this.state;\r\n        const thisProps = this.props;\r\n\r\n        // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n        const listBoard = (pNum) => {\r\n            console.log(`pageNum : ${pNum}`);\r\n            \r\n            BoardService.getBoards(pNum).then((res) => {\r\n                console.log(res.data);\r\n                this.setState({\r\n                    pNum: res.data.pagingData.currentPageNum,\r\n                    paging: res.data.pagingData,\r\n                    boards: res.data.list});\r\n            });\r\n        }\r\n\r\n        const getBoardCategory = (value) => {\r\n            let name = \"Not Defined\";\r\n\r\n            switch(value) {\r\n                case Category.NOTICE.value:\r\n                    name = Category.NOTICE.name;\r\n                    break;\r\n                case Category.FREEBOARD.value:\r\n                    name = Category.FREEBOARD.name;\r\n                    break;\r\n                case Category.STORAGE.value:\r\n                    name = Category.STORAGE.name;\r\n                    break;\r\n                case Category.MARCKET.value:\r\n                    name = Category.MARCKET.name;\r\n                    break;\r\n                default:\r\n                    name = \"Not Defined\";\r\n                    break;\r\n            }\r\n            return name;\r\n        }\r\n\r\n        const getBoardCreateDay = (value) => {\r\n            console.log(`작성일 : ${value}`);\r\n            return value;\r\n        }\r\n\r\n        // 페이지 버튼을 표시하는 함수\r\n        const viewPaging = () => {\r\n            const pageNums = [];\r\n\r\n            for (let i = boardState.paging.pageNumStart; i <= boardState.paging.pageNumEnd; i++ ) {\r\n                pageNums.push(i);\r\n            }\r\n\r\n            if (Object.keys(pageNums).length > 0) {\r\n                Object.keys(pageNums).forEach((page) => {\r\n                    (\r\n                        <li className=\"page-item\" key={page.toString()} >\r\n                            <a className=\"page-link\" onClick={listBoard(page)} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">{page}</a>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n            // pageNums.map(page => {\r\n            //     (\r\n            //         <li className=\"page-item\" key={page.toString()} >\r\n            //             <a className=\"page-link\" onClick={listBoard(page)} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">{page}</a>\r\n            //         </li>\r\n            //     );\r\n            // });\r\n        }\r\n\r\n        // 이전 페이지 이동버튼을 출력하는 함수\r\n        const isPagingPrev = () => {\r\n            if(boardState.paging.prev) {\r\n                (\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" onClick = {listBoard( (boardState.paging.currentPageNum - 1) )} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">Previous</a>\r\n                    </li>\r\n                );\r\n            }\r\n        }\r\n\r\n        // 다음 페이지 이동 버튼을 출력하는 함수\r\n        const isPagingNext = () => {\r\n            if (boardState.paging.next) {\r\n                (\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" onClick = {listBoard( (boardState.paging.currentPageNum + 1) )} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">Next</a>\r\n                    </li>\r\n                )\r\n            }\r\n        }\r\n\r\n        // 첫페이지 이동 버튼을 출력하는 함수\r\n        const isMoveToFirstPage = () => {\r\n            if (boardState.pNum !== 1) {\r\n                (\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" onClick = {listBoard(1)} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">Move to First Page</a>\r\n                    </li>\r\n                );\r\n            }\r\n        }\r\n\r\n        // 마지막 페이지 이동 버튼을 출력하는 함수\r\n        const isMoveToLastPage = () => {\r\n            if (boardState.pNum !== boardState.paging.pageNumCountTotal) {\r\n                (\r\n                    <li className=\"page-item\">\r\n                        <a className=\"page-link\" onClick={listBoard((boardState.paging.pageNumCountTotal))} aria-hidden=\"true\" role=\"button\" tabIndex=\"-1\">\r\n                            LastPage({boardState.paging.pageNumCountTotal})\r\n                            </a>\r\n                    </li>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n        // this.props.history.push('이동할 링크'); -> 일반적\r\n        // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n        // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n        const createBoard = () => {\r\n            thisProps.history.push('/create-board/_create');\r\n        }\r\n\r\n        // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n        // readBoard(index){\r\n        const readBoard = (idx) => {\r\n            // this.props.history.push(`/read-board/${index}` ); // * 인자넘김 방법1\r\n            // this.props.history.push('/read-board/' + index ); // *인자넘검 방법2\r\n            thisProps.history.push(`/read-board/${idx}`);\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">게시판 목록</h2>\r\n                <div className = \"row\">\r\n                    <Button className=\"btn btn-primary\" \r\n                        onClick={createBoard}> 글 작성</Button>\r\n                </div>\r\n                <div className =\"table\" style={{ padding: \"0 12px\" }}>\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <colgroup>\r\n                        <col width=\"5%\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"50%\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                    </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>번호</th>\r\n                                <th>카테고리 </th>\r\n                                <th>제목</th>\r\n                                <th>작성자 </th>\r\n                                <th>작성일 </th>\r\n                                {/* <th>수정일</th> */}\r\n                                <th>조회수</th>\r\n                                <th>좋아요수</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                boardState.boards.map(\r\n                                    board => \r\n                                    // <tr key = {board.index}>\r\n                                    <tr key = {board.idx}>\r\n                                        {/* <td> {board.index} </td> */}\r\n                                        <td> {board.idx} </td>\r\n\r\n                                        <td> {getBoardCategory(board.category)} </td>\r\n                                        {/* <td> <a onClick = {() => this.readBoard(board.index)}>{board.title}</a></td> */}\r\n                                        <td> <a onClick = {readBoard(board.idx)} aria-hidden=\"true\" role = \"button\" tabIndex=\"-1\">{board.title}</a></td>\r\n                                        <td> {board.id} </td>\r\n                                        <td> {getBoardCreateDay(board.created_day)} </td>\r\n                                        <td> {board.viewCnt} </td>\r\n                                        <td> {board.likes} </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className =\"row\">\r\n                    <nav aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination justify-content-center\">\r\n                            {\r\n                                isMoveToFirstPage()\r\n                            }\r\n                            {\r\n                                isPagingPrev()\r\n                            }\r\n                            {\r\n                                viewPaging()\r\n                            }\r\n                            {\r\n                                isPagingNext()\r\n                            }\r\n                            {\r\n                                isMoveToLastPage()\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListBoardComponent;\r\n"]},"metadata":{},"sourceType":"module"}