{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isHostComponent } from '@material-ui/unstyled';\nimport { deepmerge, elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\nimport ModalUnstyled, { modalUnstyledClasses } from '@material-ui/unstyled/ModalUnstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const modalClasses = modalUnstyledClasses;\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.open && styleProps.exited && styles.hidden), styles.root || {});\n};\n\nconst extendUtilityClasses = styleProps => {\n  return styleProps.classes;\n};\n\nconst ModalRoot = experimentalStyled('div', {}, {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  position: 'fixed',\n  zIndex: theme.zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0\n}, !styleProps.open && styleProps.exited && {\n  visibility: 'hidden'\n}));\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\n\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  var _componentsProps$root;\n\n  const props = useThemeProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n\n  const {\n    BackdropComponent = Backdrop,\n    closeAfterTransition = false,\n    children,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"closeAfterTransition\", \"children\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\"]);\n\n  const [exited, setExited] = React.useState(true);\n  const commonProps = {\n    BackdropComponent,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted,\n    // private\n    onTransitionEnter: () => setExited(false),\n    onTransitionExited: () => setExited(true)\n  };\n\n  const styleProps = _extends({}, props, commonProps, {\n    exited\n  });\n\n  const classes = extendUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(ModalUnstyled, _extends({\n    components: _extends({\n      Root: ModalRoot\n    }, components),\n    componentsProps: {\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\n        styleProps: _extends({}, (_componentsProps$root = componentsProps.root) === null || _componentsProps$root === void 0 ? void 0 : _componentsProps$root.styleProps)\n      })\n    },\n    ref: ref\n  }, other, {\n    classes: classes\n  }, commonProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   * @default Backdrop\r\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\r\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\r\n   * A single child content element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   * @default false\r\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\r\n   * The components used for each slot inside the Modal.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\n  components: PropTypes.shape({\n    Root: PropTypes.elementType\n  }),\n\n  /**\r\n   * The props used for each slot inside the Modal.\r\n   * @default {}\r\n   */\n  componentsProps: PropTypes.object,\n\n  /**\r\n   * An HTML element or function that returns one.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\n  container: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([HTMLElementType, PropTypes.func]),\n\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\r\n   * The `children` will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   * @default false\r\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\r\n   * Disable the scroll lock behavior.\r\n   * @default false\r\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   * @default false\r\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   * @default false\r\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/Modal/Modal.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","isHostComponent","deepmerge","elementAcceptingRef","HTMLElementType","ModalUnstyled","modalUnstyledClasses","experimentalStyled","useThemeProps","Backdrop","jsx","_jsx","modalClasses","overridesResolver","props","styles","styleProps","open","exited","hidden","root","extendUtilityClasses","classes","ModalRoot","name","slot","theme","position","zIndex","modal","right","bottom","top","left","visibility","Modal","forwardRef","inProps","ref","_componentsProps$root","BackdropComponent","closeAfterTransition","children","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","other","setExited","useState","commonProps","onTransitionEnter","onTransitionExited","Root","process","env","NODE_ENV","propTypes","elementType","BackdropProps","object","isRequired","bool","shape","container","oneOfType","func","onBackdropClick","onClose","sx"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { isHostComponent } from '@material-ui/unstyled';\r\nimport { deepmerge, elementAcceptingRef, HTMLElementType } from '@material-ui/utils';\r\nimport ModalUnstyled, { modalUnstyledClasses } from '@material-ui/unstyled/ModalUnstyled';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport Backdrop from '../Backdrop';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nexport const modalClasses = modalUnstyledClasses;\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, !styleProps.open && styleProps.exited && styles.hidden), styles.root || {});\r\n};\r\n\r\nconst extendUtilityClasses = styleProps => {\r\n  return styleProps.classes;\r\n};\r\n\r\nconst ModalRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiModal',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the root element. */\r\n  position: 'fixed',\r\n  zIndex: theme.zIndex.modal,\r\n  right: 0,\r\n  bottom: 0,\r\n  top: 0,\r\n  left: 0\r\n}, !styleProps.open && styleProps.exited && {\r\n  visibility: 'hidden'\r\n}));\r\n/**\r\n * Modal is a lower-level construct that is leveraged by the following components:\r\n *\r\n * - [Dialog](/api/dialog/)\r\n * - [Drawer](/api/drawer/)\r\n * - [Menu](/api/menu/)\r\n * - [Popover](/api/popover/)\r\n *\r\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\r\n * rather than directly using Modal.\r\n *\r\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\r\n */\r\n\r\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\r\n  var _componentsProps$root;\r\n\r\n  const props = useThemeProps({\r\n    name: 'MuiModal',\r\n    props: inProps\r\n  });\r\n\r\n  const {\r\n    BackdropComponent = Backdrop,\r\n    closeAfterTransition = false,\r\n    children,\r\n    components = {},\r\n    componentsProps = {},\r\n    disableAutoFocus = false,\r\n    disableEnforceFocus = false,\r\n    disableEscapeKeyDown = false,\r\n    disablePortal = false,\r\n    disableRestoreFocus = false,\r\n    disableScrollLock = false,\r\n    hideBackdrop = false,\r\n    keepMounted = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"BackdropComponent\", \"closeAfterTransition\", \"children\", \"components\", \"componentsProps\", \"disableAutoFocus\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\"]);\r\n\r\n  const [exited, setExited] = React.useState(true);\r\n  const commonProps = {\r\n    BackdropComponent,\r\n    closeAfterTransition,\r\n    disableAutoFocus,\r\n    disableEnforceFocus,\r\n    disableEscapeKeyDown,\r\n    disablePortal,\r\n    disableRestoreFocus,\r\n    disableScrollLock,\r\n    hideBackdrop,\r\n    keepMounted,\r\n    // private\r\n    onTransitionEnter: () => setExited(false),\r\n    onTransitionExited: () => setExited(true)\r\n  };\r\n\r\n  const styleProps = _extends({}, props, commonProps, {\r\n    exited\r\n  });\r\n\r\n  const classes = extendUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsx(ModalUnstyled, _extends({\r\n    components: _extends({\r\n      Root: ModalRoot\r\n    }, components),\r\n    componentsProps: {\r\n      root: _extends({}, componentsProps.root, (!components.Root || !isHostComponent(components.Root)) && {\r\n        styleProps: _extends({}, (_componentsProps$root = componentsProps.root) === null || _componentsProps$root === void 0 ? void 0 : _componentsProps$root.styleProps)\r\n      })\r\n    },\r\n    ref: ref\r\n  }, other, {\r\n    classes: classes\r\n  }, commonProps, {\r\n    children: children\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * A backdrop component. This prop enables custom backdrop rendering.\r\n   * @default Backdrop\r\n   */\r\n  BackdropComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\r\n   */\r\n  BackdropProps: PropTypes.object,\r\n\r\n  /**\r\n   * A single child content element.\r\n   */\r\n  children: elementAcceptingRef.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * When set to true the Modal waits until a nested Transition is completed before closing.\r\n   * @default false\r\n   */\r\n  closeAfterTransition: PropTypes.bool,\r\n\r\n  /**\r\n   * The components used for each slot inside the Modal.\r\n   * Either a string to use a HTML element or a component.\r\n   * @default {}\r\n   */\r\n  components: PropTypes.shape({\r\n    Root: PropTypes.elementType\r\n  }),\r\n\r\n  /**\r\n   * The props used for each slot inside the Modal.\r\n   * @default {}\r\n   */\r\n  componentsProps: PropTypes.object,\r\n\r\n  /**\r\n   * An HTML element or function that returns one.\r\n   * The `container` will have the portal children appended to it.\r\n   *\r\n   * By default, it uses the body of the top-level document object,\r\n   * so it's simply `document.body` most of the time.\r\n   */\r\n  container: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOfType([HTMLElementType, PropTypes.func]),\r\n\r\n  /**\r\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\r\n   * replace it to the last focused element when it closes.\r\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\r\n  disableAutoFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\r\n   *\r\n   * Generally this should never be set to `true` as it makes the modal less\r\n   * accessible to assistive technologies, like screen readers.\r\n   * @default false\r\n   */\r\n  disableEnforceFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, hitting escape will not fire the `onClose` callback.\r\n   * @default false\r\n   */\r\n  disableEscapeKeyDown: PropTypes.bool,\r\n\r\n  /**\r\n   * The `children` will be under the DOM hierarchy of the parent component.\r\n   * @default false\r\n   */\r\n  disablePortal: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the modal will not restore focus to previously focused element once\r\n   * modal is hidden.\r\n   * @default false\r\n   */\r\n  disableRestoreFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Disable the scroll lock behavior.\r\n   * @default false\r\n   */\r\n  disableScrollLock: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the backdrop is not rendered.\r\n   * @default false\r\n   */\r\n  hideBackdrop: PropTypes.bool,\r\n\r\n  /**\r\n   * Always keep the children in the DOM.\r\n   * This prop can be useful in SEO situation or\r\n   * when you want to maximize the responsiveness of the Modal.\r\n   * @default false\r\n   */\r\n  keepMounted: PropTypes.bool,\r\n\r\n  /**\r\n   * Callback fired when the backdrop is clicked.\r\n   */\r\n  onBackdropClick: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool.isRequired,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}