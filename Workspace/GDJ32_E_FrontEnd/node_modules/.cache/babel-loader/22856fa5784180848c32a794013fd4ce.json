{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType, deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`labelPlacement${capitalize(styleProps.labelPlacement)}`], {\n    [`& .${formControlLabelClasses.label}`]: styles.label\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disabled,\n    labelPlacement\n  } = styleProps;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = experimentalStyled('label', {}, {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  '&.Mui-disabled': {\n    cursor: 'default'\n  }\n}, styleProps.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, styleProps.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, styleProps.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    '&.Mui-disabled': {\n      color: theme.palette.text.disabled\n    }\n  }\n}));\n/**\r\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\r\n * Use this component if you want to display an extra label.\r\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    control,\n    disabled: disabledProp,\n    label,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n\n  const styleProps = _extends({}, props, {\n    disabled,\n    label,\n    labelPlacement\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/_jsx(Typography, {\n      component: \"span\",\n      className: classes.label,\n      children: label\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * If `true`, the component appears selected.\r\n   */\n  checked: PropTypes.bool,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\r\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\r\n   * If `true`, the control is disabled.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\n  inputRef: refType,\n\n  /**\r\n   * The text to be used in an enclosing label element.\r\n   */\n  label: PropTypes.node,\n\n  /**\r\n   * The position of the label.\r\n   * @default 'end'\r\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\r\n   * @ignore\r\n   */\n  name: PropTypes.string,\n\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * The value of the component.\r\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","map":{"version":3,"sources":["C:/Github/GD32_Web_Project/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/FormControlLabel/FormControlLabel.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","refType","deepmerge","unstable_composeClasses","composeClasses","useFormControl","Typography","capitalize","experimentalStyled","useThemeProps","formControlLabelClasses","getFormControlLabelUtilityClasses","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","styleProps","labelPlacement","label","root","useUtilityClasses","classes","disabled","slots","FormControlLabelRoot","name","slot","theme","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","color","palette","text","FormControlLabel","forwardRef","inProps","ref","className","control","disabledProp","other","muiFormControl","controlProps","forEach","key","children","cloneElement","component","process","env","NODE_ENV","propTypes","checked","bool","object","string","element","isRequired","inputRef","node","oneOf","onChange","func","sx","value","any"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType, deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport { useFormControl } from '../FormControl';\r\nimport Typography from '../Typography';\r\nimport capitalize from '../utils/capitalize';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, styles[`labelPlacement${capitalize(styleProps.labelPlacement)}`], {\r\n    [`& .${formControlLabelClasses.label}`]: styles.label\r\n  }), styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    disabled,\r\n    labelPlacement\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`],\r\n    label: ['label', disabled && 'disabled']\r\n  };\r\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\r\n};\r\n\r\nexport const FormControlLabelRoot = experimentalStyled('label', {}, {\r\n  name: 'MuiFormControlLabel',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => _extends({\r\n  display: 'inline-flex',\r\n  alignItems: 'center',\r\n  cursor: 'pointer',\r\n  // For correct alignment with the text.\r\n  verticalAlign: 'middle',\r\n  WebkitTapHighlightColor: 'transparent',\r\n  marginLeft: -11,\r\n  marginRight: 16,\r\n  // used for row presentation of radio/checkbox\r\n  '&.Mui-disabled': {\r\n    cursor: 'default'\r\n  }\r\n}, styleProps.labelPlacement === 'start' && {\r\n  flexDirection: 'row-reverse',\r\n  marginLeft: 16,\r\n  // used for row presentation of radio/checkbox\r\n  marginRight: -11\r\n}, styleProps.labelPlacement === 'top' && {\r\n  flexDirection: 'column-reverse',\r\n  marginLeft: 16\r\n}, styleProps.labelPlacement === 'bottom' && {\r\n  flexDirection: 'column',\r\n  marginLeft: 16\r\n}, {\r\n  [`& .${formControlLabelClasses.label}`]: {\r\n    '&.Mui-disabled': {\r\n      color: theme.palette.text.disabled\r\n    }\r\n  }\r\n}));\r\n/**\r\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\r\n * Use this component if you want to display an extra label.\r\n */\r\n\r\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiFormControlLabel'\r\n  });\r\n\r\n  const {\r\n    className,\r\n    control,\r\n    disabled: disabledProp,\r\n    label,\r\n    labelPlacement = 'end'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"checked\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\r\n\r\n  const muiFormControl = useFormControl();\r\n  let disabled = disabledProp;\r\n\r\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\r\n    disabled = control.props.disabled;\r\n  }\r\n\r\n  if (typeof disabled === 'undefined' && muiFormControl) {\r\n    disabled = muiFormControl.disabled;\r\n  }\r\n\r\n  const controlProps = {\r\n    disabled\r\n  };\r\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\r\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\r\n      controlProps[key] = props[key];\r\n    }\r\n  });\r\n\r\n  const styleProps = _extends({}, props, {\r\n    disabled,\r\n    label,\r\n    labelPlacement\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\r\n    className: clsx(classes.root, className),\r\n    styleProps: styleProps,\r\n    ref: ref\r\n  }, other, {\r\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/_jsx(Typography, {\r\n      component: \"span\",\r\n      className: classes.label,\r\n      children: label\r\n    })]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * If `true`, the component appears selected.\r\n   */\r\n  checked: PropTypes.bool,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\r\n   */\r\n  control: PropTypes.element.isRequired,\r\n\r\n  /**\r\n   * If `true`, the control is disabled.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * Pass a ref to the `input` element.\r\n   */\r\n  inputRef: refType,\r\n\r\n  /**\r\n   * The text to be used in an enclosing label element.\r\n   */\r\n  label: PropTypes.node,\r\n\r\n  /**\r\n   * The position of the label.\r\n   * @default 'end'\r\n   */\r\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * Callback fired when the state is changed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * The value of the component.\r\n   */\r\n  value: PropTypes.any\r\n} : void 0;\r\nexport default FormControlLabel;"]},"metadata":{},"sourceType":"module"}