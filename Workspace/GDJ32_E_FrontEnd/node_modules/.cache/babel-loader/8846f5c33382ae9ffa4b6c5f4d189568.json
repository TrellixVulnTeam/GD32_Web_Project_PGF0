{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '../styles/colorManipulator';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport tooltipClasses, { getTooltipUtilityClass } from './tooltipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.disableInteractive && styles.popperInteractive, styleProps.arrow && styles.popperArrow, {\n    [`& .${tooltipClasses.tooltip}`]: _extends({}, styles.tooltip, styleProps.touch && styles.touch, styleProps.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(styleProps.placement.split('-')[0])}`]),\n    [`& .${tooltipClasses.arrow}`]: styles.arrow\n  }), styles.popper || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableInteractive,\n    arrow,\n    touch,\n    placement\n  } = styleProps;\n  const slots = {\n    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],\n    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],\n    arrow: ['arrow']\n  };\n  return composeClasses(slots, getTooltipUtilityClass, classes);\n};\n\nconst TooltipPopper = experimentalStyled(Popper, {}, {\n  name: 'MuiTooltip',\n  slot: 'Popper',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the Popper element. */\n  zIndex: theme.zIndex.tooltip,\n  pointerEvents: 'none'\n}, !styleProps.disableInteractive && {\n  pointerEvents: 'auto'\n}, styleProps.arrow && {\n  [`&[data-popper-placement*=\"bottom\"] .${tooltipClasses.arrow}`]: {\n    top: 0,\n    left: 0,\n    marginTop: '-0.71em',\n    '&::before': {\n      transformOrigin: '0 100%'\n    }\n  },\n  [`&[data-popper-placement*=\"top\"] .${tooltipClasses.arrow}`]: {\n    bottom: 0,\n    left: 0,\n    marginBottom: '-0.71em',\n    '&::before': {\n      transformOrigin: '100% 0'\n    }\n  },\n  [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: {\n    left: 0,\n    marginLeft: '-0.71em',\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '100% 100%'\n    }\n  },\n  [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: {\n    right: 0,\n    marginRight: '-0.71em',\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '0 0'\n    }\n  }\n}));\nconst TooltipTooltip = experimentalStyled('div', {}, {\n  name: 'MuiTooltip',\n  slot: 'Tooltip'\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  /* Styles applied to the tooltip (label wrapper) element. */\n  backgroundColor: alpha(theme.palette.grey[700], 0.92),\n  borderRadius: theme.shape.borderRadius,\n  color: theme.palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  padding: '4px 8px',\n  fontSize: theme.typography.pxToRem(11),\n  maxWidth: 300,\n  margin: 2,\n  wordWrap: 'break-word',\n  fontWeight: theme.typography.fontWeightMedium\n}, styleProps.arrow && {\n  position: 'relative',\n  margin: 0\n}, styleProps.touch && {\n  padding: '8px 16px',\n  fontSize: theme.typography.pxToRem(14),\n  lineHeight: `${round(16 / 14)}em`,\n  fontWeight: theme.typography.fontWeightRegular\n}, {\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: {\n    transformOrigin: 'right center',\n    marginRight: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginRight: '14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: {\n    transformOrigin: 'left center',\n    marginLeft: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: '14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: {\n    transformOrigin: 'center bottom',\n    marginBottom: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginBottom: '14px'\n    }\n  },\n\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: {\n    transformOrigin: 'center top',\n    marginTop: '24px',\n    [theme.breakpoints.up('sm')]: {\n      marginTop: '14px'\n    }\n  }\n}));\nconst TooltipArrow = experimentalStyled('span', {}, {\n  name: 'MuiTooltip',\n  slot: 'Arrow'\n})(({\n  theme\n}) => ({\n  /* Styles applied to the arrow element. */\n  overflow: 'hidden',\n  position: 'absolute',\n  width: '1em',\n  height: '0.71em'\n  /* = width / sqrt(2) = (length of the hypotenuse) */\n  ,\n  boxSizing: 'border-box',\n  color: alpha(theme.palette.grey[700], 0.9),\n  '&::before': {\n    content: '\"\"',\n    margin: 'auto',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'currentColor',\n    transform: 'rotate(45deg)'\n  }\n}));\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n}\n\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(inProps, ref) {\n  const _useThemeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTooltip'\n  }),\n        {\n    theme\n  } = _useThemeProps,\n        props = _objectWithoutPropertiesLoose(_useThemeProps, [\"theme\", \"isRtl\"]);\n\n  const {\n    arrow = false,\n    children,\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableInteractive: disableInteractiveProp = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps = {},\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableInteractive\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  const prevUserSelect = React.useRef();\n  const stopTouchInteraction = React.useCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n\n    clearTimeout(touchTimer.current);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      stopTouchInteraction();\n    };\n  }, [stopTouchInteraction]);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = useEventCallback(\n  /**\r\n   * @param {React.SyntheticEvent | Event} event\r\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose && open) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      event.persist();\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    stopTouchInteraction();\n    event.persist();\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\n\n    document.body.style.WebkitUserSelect = 'none';\n    touchTimer.current = setTimeout(() => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\r\n     * @param {KeyboardEvent} nativeEvent\r\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n\n  if (describeChild) {\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const popperOptions = React.useMemo(() => {\n    var _PopperProps$popperOp;\n\n    let tooltipModifiers = [{\n      name: 'arrow',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) !== null && _PopperProps$popperOp !== void 0 && _PopperProps$popperOp.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n\n    return _extends({}, PopperProps.popperOptions, {\n      modifiers: tooltipModifiers\n    });\n  }, [arrowRef, PopperProps]);\n\n  const styleProps = _extends({}, props, {\n    arrow,\n    disableInteractive,\n    placement,\n    PopperComponent,\n    touch: ignoreNonTouchEvents.current\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/_jsx(TooltipPopper, _extends({\n      as: PopperComponent,\n      className: classes.popper,\n      placement: placement,\n      anchorEl: followCursor ? {\n        getBoundingClientRect: () => ({\n          top: positionRef.current.y,\n          left: positionRef.current.x,\n          right: positionRef.current.x,\n          bottom: positionRef.current.y,\n          width: 0,\n          height: 0\n        })\n      } : childNode,\n      popperRef: popperRef,\n      open: childNode ? open : false,\n      id: id,\n      transition: true\n    }, interactiveWrapperListeners, PopperProps, {\n      popperOptions: popperOptions,\n      styleProps: styleProps,\n      children: ({\n        TransitionProps: TransitionPropsInner\n      }) => /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        timeout: theme.transitions.duration.shorter\n      }, TransitionPropsInner, TransitionProps, {\n        children: /*#__PURE__*/_jsxs(TooltipTooltip, {\n          className: classes.tooltip,\n          styleProps: styleProps,\n          children: [title, arrow ? /*#__PURE__*/_jsx(TooltipArrow, {\n            className: classes.arrow,\n            ref: setArrowRef,\n            styleProps: styleProps\n          }) : null]\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * If `true`, adds an arrow to the tooltip.\r\n   * @default false\r\n   */\n  arrow: PropTypes.bool,\n\n  /**\r\n   * Tooltip reference element.\r\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * Set to `true` if the `title` acts as an accessible description.\r\n   * By default the `title` acts as an accessible label for the child.\r\n   * @default false\r\n   */\n  describeChild: PropTypes.bool,\n\n  /**\r\n   * Do not respond to focus-visible events.\r\n   * @default false\r\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\r\n   * Do not respond to hover events.\r\n   * @default false\r\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\r\n   * Makes a tooltip not interactive, i.e. it will close when the user\r\n   * hovers over the tooltip before the `leaveDelay` is expired.\r\n   * @default false\r\n   */\n  disableInteractive: PropTypes.bool,\n\n  /**\r\n   * Do not respond to long press touch events.\r\n   * @default false\r\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\r\n   * The number of milliseconds to wait before showing the tooltip.\r\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\r\n   * @default 100\r\n   */\n  enterDelay: PropTypes.number,\n\n  /**\r\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\r\n   * @default 0\r\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\r\n   * The number of milliseconds a user must touch the element before showing the tooltip.\r\n   * @default 700\r\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\r\n   * If `true`, the tooltip follow the cursor over the wrapped element.\r\n   * @default false\r\n   */\n  followCursor: PropTypes.bool,\n\n  /**\r\n   * This prop is used to help implement the accessibility logic.\r\n   * If you don't provide this prop. It falls back to a randomly generated id.\r\n   */\n  id: PropTypes.string,\n\n  /**\r\n   * The number of milliseconds to wait before hiding the tooltip.\r\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\r\n   * @default 0\r\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\r\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\r\n   * @default 1500\r\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * Callback fired when the component requests to be open.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\n  onOpen: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * Tooltip placement.\r\n   * @default 'bottom'\r\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\r\n   * The component used for the popper.\r\n   * @default Popper\r\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the [`Popper`](/api/popper/) element.\r\n   * @default {}\r\n   */\n  PopperProps: PropTypes.object,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * Tooltip title. Zero-length titles string are never displayed.\r\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Grow\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Tooltip;","map":{"version":3,"sources":["C:/Github/GD32_Web_Project/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/Tooltip/Tooltip.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","elementAcceptingRef","unstable_composeClasses","composeClasses","alpha","experimentalStyled","useThemeProps","capitalize","Grow","Popper","useEventCallback","useForkRef","useId","useIsFocusVisible","useControlled","tooltipClasses","getTooltipUtilityClass","jsx","_jsx","jsxs","_jsxs","round","value","Math","overridesResolver","props","styles","styleProps","disableInteractive","popperInteractive","arrow","popperArrow","tooltip","touch","tooltipArrow","placement","split","popper","useUtilityClasses","classes","slots","TooltipPopper","name","slot","theme","zIndex","pointerEvents","top","left","marginTop","transformOrigin","bottom","marginBottom","marginLeft","height","width","right","marginRight","TooltipTooltip","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","maxWidth","margin","wordWrap","fontWeight","fontWeightMedium","position","lineHeight","fontWeightRegular","breakpoints","up","TooltipArrow","overflow","boxSizing","content","display","transform","hystersisOpen","hystersisTimer","testReset","clearTimeout","composeEventHandler","handler","eventHandler","event","Tooltip","forwardRef","inProps","ref","_useThemeProps","children","describeChild","disableFocusListener","disableHoverListener","disableInteractiveProp","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","id","idProp","leaveDelay","leaveTouchDelay","onClose","onOpen","open","openProp","PopperComponent","PopperProps","title","TransitionComponent","TransitionProps","other","childNode","setChildNode","useState","arrowRef","setArrowRef","ignoreNonTouchEvents","useRef","closeTimer","enterTimer","leaveTimer","touchTimer","openState","setOpenState","controlled","default","state","process","env","NODE_ENV","current","isControlled","undefined","useEffect","disabled","tagName","toLowerCase","console","error","join","prevUserSelect","stopTouchInteraction","useCallback","document","body","style","WebkitUserSelect","handleOpen","handleClose","setTimeout","transitions","duration","shortest","handleEnter","type","removeAttribute","persist","handleLeave","isFocusVisibleRef","onBlur","handleBlurVisible","onFocus","handleFocusVisible","focusVisibleRef","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","detectTouchStart","childrenProps","onTouchStart","handleMouseOver","handleMouseLeave","handleTouchStart","handleTouchEnd","onTouchEnd","handleKeyDown","nativeEvent","key","addEventListener","removeEventListener","handleUseRef","handleFocusRef","handleRef","positionRef","x","y","popperRef","handleMouseMove","onMouseMove","clientX","clientY","update","nameOrDescProps","titleIsString","className","getAttribute","interactiveWrapperListeners","onMouseOver","onMouseLeave","popperOptions","useMemo","_PopperProps$popperOp","tooltipModifiers","enabled","Boolean","options","element","modifiers","concat","Fragment","cloneElement","as","anchorEl","getBoundingClientRect","transition","TransitionPropsInner","timeout","shorter","propTypes","bool","isRequired","object","number","string","func","oneOf","elementType","sx","node"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport { alpha } from '../styles/colorManipulator';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport capitalize from '../utils/capitalize';\r\nimport Grow from '../Grow';\r\nimport Popper from '../Popper';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport useForkRef from '../utils/useForkRef';\r\nimport useId from '../utils/useId';\r\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\r\nimport useControlled from '../utils/useControlled';\r\nimport tooltipClasses, { getTooltipUtilityClass } from './tooltipClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\n\r\nfunction round(value) {\r\n  return Math.round(value * 1e5) / 1e5;\r\n}\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, !styleProps.disableInteractive && styles.popperInteractive, styleProps.arrow && styles.popperArrow, {\r\n    [`& .${tooltipClasses.tooltip}`]: _extends({}, styles.tooltip, styleProps.touch && styles.touch, styleProps.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(styleProps.placement.split('-')[0])}`]),\r\n    [`& .${tooltipClasses.arrow}`]: styles.arrow\r\n  }), styles.popper || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    disableInteractive,\r\n    arrow,\r\n    touch,\r\n    placement\r\n  } = styleProps;\r\n  const slots = {\r\n    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],\r\n    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],\r\n    arrow: ['arrow']\r\n  };\r\n  return composeClasses(slots, getTooltipUtilityClass, classes);\r\n};\r\n\r\nconst TooltipPopper = experimentalStyled(Popper, {}, {\r\n  name: 'MuiTooltip',\r\n  slot: 'Popper',\r\n  overridesResolver\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the Popper element. */\r\n  zIndex: theme.zIndex.tooltip,\r\n  pointerEvents: 'none'\r\n}, !styleProps.disableInteractive && {\r\n  pointerEvents: 'auto'\r\n}, styleProps.arrow && {\r\n  [`&[data-popper-placement*=\"bottom\"] .${tooltipClasses.arrow}`]: {\r\n    top: 0,\r\n    left: 0,\r\n    marginTop: '-0.71em',\r\n    '&::before': {\r\n      transformOrigin: '0 100%'\r\n    }\r\n  },\r\n  [`&[data-popper-placement*=\"top\"] .${tooltipClasses.arrow}`]: {\r\n    bottom: 0,\r\n    left: 0,\r\n    marginBottom: '-0.71em',\r\n    '&::before': {\r\n      transformOrigin: '100% 0'\r\n    }\r\n  },\r\n  [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: {\r\n    left: 0,\r\n    marginLeft: '-0.71em',\r\n    height: '1em',\r\n    width: '0.71em',\r\n    '&::before': {\r\n      transformOrigin: '100% 100%'\r\n    }\r\n  },\r\n  [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: {\r\n    right: 0,\r\n    marginRight: '-0.71em',\r\n    height: '1em',\r\n    width: '0.71em',\r\n    '&::before': {\r\n      transformOrigin: '0 0'\r\n    }\r\n  }\r\n}));\r\nconst TooltipTooltip = experimentalStyled('div', {}, {\r\n  name: 'MuiTooltip',\r\n  slot: 'Tooltip'\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => _extends({\r\n  /* Styles applied to the tooltip (label wrapper) element. */\r\n  backgroundColor: alpha(theme.palette.grey[700], 0.92),\r\n  borderRadius: theme.shape.borderRadius,\r\n  color: theme.palette.common.white,\r\n  fontFamily: theme.typography.fontFamily,\r\n  padding: '4px 8px',\r\n  fontSize: theme.typography.pxToRem(11),\r\n  maxWidth: 300,\r\n  margin: 2,\r\n  wordWrap: 'break-word',\r\n  fontWeight: theme.typography.fontWeightMedium\r\n}, styleProps.arrow && {\r\n  position: 'relative',\r\n  margin: 0\r\n}, styleProps.touch && {\r\n  padding: '8px 16px',\r\n  fontSize: theme.typography.pxToRem(14),\r\n  lineHeight: `${round(16 / 14)}em`,\r\n  fontWeight: theme.typography.fontWeightRegular\r\n}, {\r\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\r\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: {\r\n    transformOrigin: 'right center',\r\n    marginRight: '24px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginRight: '14px'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\r\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: {\r\n    transformOrigin: 'left center',\r\n    marginLeft: '24px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: '14px'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\r\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: {\r\n    transformOrigin: 'center bottom',\r\n    marginBottom: '24px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginBottom: '14px'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\r\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: {\r\n    transformOrigin: 'center top',\r\n    marginTop: '24px',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginTop: '14px'\r\n    }\r\n  }\r\n}));\r\nconst TooltipArrow = experimentalStyled('span', {}, {\r\n  name: 'MuiTooltip',\r\n  slot: 'Arrow'\r\n})(({\r\n  theme\r\n}) => ({\r\n  /* Styles applied to the arrow element. */\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  width: '1em',\r\n  height: '0.71em'\r\n  /* = width / sqrt(2) = (length of the hypotenuse) */\r\n  ,\r\n  boxSizing: 'border-box',\r\n  color: alpha(theme.palette.grey[700], 0.9),\r\n  '&::before': {\r\n    content: '\"\"',\r\n    margin: 'auto',\r\n    display: 'block',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'currentColor',\r\n    transform: 'rotate(45deg)'\r\n  }\r\n}));\r\nlet hystersisOpen = false;\r\nlet hystersisTimer = null;\r\nexport function testReset() {\r\n  hystersisOpen = false;\r\n  clearTimeout(hystersisTimer);\r\n}\r\n\r\nfunction composeEventHandler(handler, eventHandler) {\r\n  return event => {\r\n    if (eventHandler) {\r\n      eventHandler(event);\r\n    }\r\n\r\n    handler(event);\r\n  };\r\n}\r\n\r\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(inProps, ref) {\r\n  const _useThemeProps = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiTooltip'\r\n  }),\r\n        {\r\n    theme\r\n  } = _useThemeProps,\r\n        props = _objectWithoutPropertiesLoose(_useThemeProps, [\"theme\", \"isRtl\"]);\r\n\r\n  const {\r\n    arrow = false,\r\n    children,\r\n    describeChild = false,\r\n    disableFocusListener = false,\r\n    disableHoverListener = false,\r\n    disableInteractive: disableInteractiveProp = false,\r\n    disableTouchListener = false,\r\n    enterDelay = 100,\r\n    enterNextDelay = 0,\r\n    enterTouchDelay = 700,\r\n    followCursor = false,\r\n    id: idProp,\r\n    leaveDelay = 0,\r\n    leaveTouchDelay = 1500,\r\n    onClose,\r\n    onOpen,\r\n    open: openProp,\r\n    placement = 'bottom',\r\n    PopperComponent = Popper,\r\n    PopperProps = {},\r\n    title,\r\n    TransitionComponent = Grow,\r\n    TransitionProps\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"arrow\", \"children\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableInteractive\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\r\n\r\n  const [childNode, setChildNode] = React.useState();\r\n  const [arrowRef, setArrowRef] = React.useState(null);\r\n  const ignoreNonTouchEvents = React.useRef(false);\r\n  const disableInteractive = disableInteractiveProp || followCursor;\r\n  const closeTimer = React.useRef();\r\n  const enterTimer = React.useRef();\r\n  const leaveTimer = React.useRef();\r\n  const touchTimer = React.useRef();\r\n  const [openState, setOpenState] = useControlled({\r\n    controlled: openProp,\r\n    default: false,\r\n    name: 'Tooltip',\r\n    state: 'open'\r\n  });\r\n  let open = openState;\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const {\r\n      current: isControlled\r\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\r\n\r\n    React.useEffect(() => {\r\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\r\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\r\n      }\r\n    }, [title, childNode, isControlled]);\r\n  }\r\n\r\n  const id = useId(idProp);\r\n  const prevUserSelect = React.useRef();\r\n  const stopTouchInteraction = React.useCallback(() => {\r\n    if (prevUserSelect.current !== undefined) {\r\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\r\n      prevUserSelect.current = undefined;\r\n    }\r\n\r\n    clearTimeout(touchTimer.current);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearTimeout(closeTimer.current);\r\n      clearTimeout(enterTimer.current);\r\n      clearTimeout(leaveTimer.current);\r\n      stopTouchInteraction();\r\n    };\r\n  }, [stopTouchInteraction]);\r\n\r\n  const handleOpen = event => {\r\n    clearTimeout(hystersisTimer);\r\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\r\n    // We can skip rerendering when the tooltip is already open.\r\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\r\n\r\n    setOpenState(true);\r\n\r\n    if (onOpen && !open) {\r\n      onOpen(event);\r\n    }\r\n  };\r\n\r\n  const handleClose = useEventCallback(\r\n  /**\r\n   * @param {React.SyntheticEvent | Event} event\r\n   */\r\n  event => {\r\n    clearTimeout(hystersisTimer);\r\n    hystersisTimer = setTimeout(() => {\r\n      hystersisOpen = false;\r\n    }, 800 + leaveDelay);\r\n    setOpenState(false);\r\n\r\n    if (onClose && open) {\r\n      onClose(event);\r\n    }\r\n\r\n    clearTimeout(closeTimer.current);\r\n    closeTimer.current = setTimeout(() => {\r\n      ignoreNonTouchEvents.current = false;\r\n    }, theme.transitions.duration.shortest);\r\n  });\r\n\r\n  const handleEnter = event => {\r\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\r\n      return;\r\n    } // Remove the title ahead of time.\r\n    // We don't want to wait for the next render commit.\r\n    // We would risk displaying two tooltips at the same time (native + this one).\r\n\r\n\r\n    if (childNode) {\r\n      childNode.removeAttribute('title');\r\n    }\r\n\r\n    clearTimeout(enterTimer.current);\r\n    clearTimeout(leaveTimer.current);\r\n\r\n    if (enterDelay || hystersisOpen && enterNextDelay) {\r\n      event.persist();\r\n      enterTimer.current = setTimeout(() => {\r\n        handleOpen(event);\r\n      }, hystersisOpen ? enterNextDelay : enterDelay);\r\n    } else {\r\n      handleOpen(event);\r\n    }\r\n  };\r\n\r\n  const handleLeave = event => {\r\n    clearTimeout(enterTimer.current);\r\n    clearTimeout(leaveTimer.current);\r\n    event.persist();\r\n    leaveTimer.current = setTimeout(() => {\r\n      handleClose(event);\r\n    }, leaveDelay);\r\n  };\r\n\r\n  const {\r\n    isFocusVisibleRef,\r\n    onBlur: handleBlurVisible,\r\n    onFocus: handleFocusVisible,\r\n    ref: focusVisibleRef\r\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\r\n  // We just need to re-render the Tooltip if the focus-visible state changes.\r\n\r\n  const [, setChildIsFocusVisible] = React.useState(false);\r\n\r\n  const handleBlur = event => {\r\n    handleBlurVisible(event);\r\n\r\n    if (isFocusVisibleRef.current === false) {\r\n      setChildIsFocusVisible(false);\r\n      handleLeave(event);\r\n    }\r\n  };\r\n\r\n  const handleFocus = event => {\r\n    // Workaround for https://github.com/facebook/react/issues/7769\r\n    // The autoFocus of React might trigger the event before the componentDidMount.\r\n    // We need to account for this eventuality.\r\n    if (!childNode) {\r\n      setChildNode(event.currentTarget);\r\n    }\r\n\r\n    handleFocusVisible(event);\r\n\r\n    if (isFocusVisibleRef.current === true) {\r\n      setChildIsFocusVisible(true);\r\n      handleEnter(event);\r\n    }\r\n  };\r\n\r\n  const detectTouchStart = event => {\r\n    ignoreNonTouchEvents.current = true;\r\n    const childrenProps = children.props;\r\n\r\n    if (childrenProps.onTouchStart) {\r\n      childrenProps.onTouchStart(event);\r\n    }\r\n  };\r\n\r\n  const handleMouseOver = handleEnter;\r\n  const handleMouseLeave = handleLeave;\r\n\r\n  const handleTouchStart = event => {\r\n    detectTouchStart(event);\r\n    clearTimeout(leaveTimer.current);\r\n    clearTimeout(closeTimer.current);\r\n    stopTouchInteraction();\r\n    event.persist();\r\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\r\n\r\n    document.body.style.WebkitUserSelect = 'none';\r\n    touchTimer.current = setTimeout(() => {\r\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\r\n      handleEnter(event);\r\n    }, enterTouchDelay);\r\n  };\r\n\r\n  const handleTouchEnd = event => {\r\n    if (children.props.onTouchEnd) {\r\n      children.props.onTouchEnd(event);\r\n    }\r\n\r\n    clearTimeout(touchTimer.current);\r\n    clearTimeout(leaveTimer.current);\r\n    event.persist();\r\n    leaveTimer.current = setTimeout(() => {\r\n      handleClose(event);\r\n    }, leaveTouchDelay);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      return undefined;\r\n    }\r\n    /**\r\n     * @param {KeyboardEvent} nativeEvent\r\n     */\r\n\r\n\r\n    function handleKeyDown(nativeEvent) {\r\n      // IE11, Edge (prior to using Bink?) use 'Esc'\r\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\r\n        handleClose(nativeEvent);\r\n      }\r\n    }\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handleClose, open]);\r\n  const handleUseRef = useForkRef(setChildNode, ref);\r\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\r\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\r\n\r\n  if (title === '') {\r\n    open = false;\r\n  }\r\n\r\n  const positionRef = React.useRef({\r\n    x: 0,\r\n    y: 0\r\n  });\r\n  const popperRef = React.useRef();\r\n\r\n  const handleMouseMove = event => {\r\n    const childrenProps = children.props;\r\n\r\n    if (childrenProps.onMouseMove) {\r\n      childrenProps.onMouseMove(event);\r\n    }\r\n\r\n    positionRef.current = {\r\n      x: event.clientX,\r\n      y: event.clientY\r\n    };\r\n\r\n    if (popperRef.current) {\r\n      popperRef.current.update();\r\n    }\r\n  };\r\n\r\n  const nameOrDescProps = {};\r\n  const titleIsString = typeof title === 'string';\r\n\r\n  if (describeChild) {\r\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\r\n    nameOrDescProps['aria-describedby'] = open ? id : null;\r\n  } else {\r\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\r\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\r\n  }\r\n\r\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\r\n    className: clsx(other.className, children.props.className),\r\n    onTouchStart: detectTouchStart,\r\n    ref: handleRef\r\n  }, followCursor ? {\r\n    onMouseMove: handleMouseMove\r\n  } : {});\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\r\n\r\n    React.useEffect(() => {\r\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\r\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\r\n      }\r\n    }, [childNode]);\r\n  }\r\n\r\n  const interactiveWrapperListeners = {};\r\n\r\n  if (!disableTouchListener) {\r\n    childrenProps.onTouchStart = handleTouchStart;\r\n    childrenProps.onTouchEnd = handleTouchEnd;\r\n  }\r\n\r\n  if (!disableHoverListener) {\r\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\r\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\r\n\r\n    if (!disableInteractive) {\r\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\r\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\r\n    }\r\n  }\r\n\r\n  if (!disableFocusListener) {\r\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\r\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\r\n\r\n    if (!disableInteractive) {\r\n      interactiveWrapperListeners.onFocus = handleFocus;\r\n      interactiveWrapperListeners.onBlur = handleBlur;\r\n    }\r\n  }\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (children.props.title) {\r\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\r\n    }\r\n  }\r\n\r\n  const popperOptions = React.useMemo(() => {\r\n    var _PopperProps$popperOp;\r\n\r\n    let tooltipModifiers = [{\r\n      name: 'arrow',\r\n      enabled: Boolean(arrowRef),\r\n      options: {\r\n        element: arrowRef,\r\n        padding: 4\r\n      }\r\n    }];\r\n\r\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) !== null && _PopperProps$popperOp !== void 0 && _PopperProps$popperOp.modifiers) {\r\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\r\n    }\r\n\r\n    return _extends({}, PopperProps.popperOptions, {\r\n      modifiers: tooltipModifiers\r\n    });\r\n  }, [arrowRef, PopperProps]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    arrow,\r\n    disableInteractive,\r\n    placement,\r\n    PopperComponent,\r\n    touch: ignoreNonTouchEvents.current\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsxs(React.Fragment, {\r\n    children: [/*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/_jsx(TooltipPopper, _extends({\r\n      as: PopperComponent,\r\n      className: classes.popper,\r\n      placement: placement,\r\n      anchorEl: followCursor ? {\r\n        getBoundingClientRect: () => ({\r\n          top: positionRef.current.y,\r\n          left: positionRef.current.x,\r\n          right: positionRef.current.x,\r\n          bottom: positionRef.current.y,\r\n          width: 0,\r\n          height: 0\r\n        })\r\n      } : childNode,\r\n      popperRef: popperRef,\r\n      open: childNode ? open : false,\r\n      id: id,\r\n      transition: true\r\n    }, interactiveWrapperListeners, PopperProps, {\r\n      popperOptions: popperOptions,\r\n      styleProps: styleProps,\r\n      children: ({\r\n        TransitionProps: TransitionPropsInner\r\n      }) => /*#__PURE__*/_jsx(TransitionComponent, _extends({\r\n        timeout: theme.transitions.duration.shorter\r\n      }, TransitionPropsInner, TransitionProps, {\r\n        children: /*#__PURE__*/_jsxs(TooltipTooltip, {\r\n          className: classes.tooltip,\r\n          styleProps: styleProps,\r\n          children: [title, arrow ? /*#__PURE__*/_jsx(TooltipArrow, {\r\n            className: classes.arrow,\r\n            ref: setArrowRef,\r\n            styleProps: styleProps\r\n          }) : null]\r\n        })\r\n      }))\r\n    }))]\r\n  });\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * If `true`, adds an arrow to the tooltip.\r\n   * @default false\r\n   */\r\n  arrow: PropTypes.bool,\r\n\r\n  /**\r\n   * Tooltip reference element.\r\n   */\r\n  children: elementAcceptingRef.isRequired,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * Set to `true` if the `title` acts as an accessible description.\r\n   * By default the `title` acts as an accessible label for the child.\r\n   * @default false\r\n   */\r\n  describeChild: PropTypes.bool,\r\n\r\n  /**\r\n   * Do not respond to focus-visible events.\r\n   * @default false\r\n   */\r\n  disableFocusListener: PropTypes.bool,\r\n\r\n  /**\r\n   * Do not respond to hover events.\r\n   * @default false\r\n   */\r\n  disableHoverListener: PropTypes.bool,\r\n\r\n  /**\r\n   * Makes a tooltip not interactive, i.e. it will close when the user\r\n   * hovers over the tooltip before the `leaveDelay` is expired.\r\n   * @default false\r\n   */\r\n  disableInteractive: PropTypes.bool,\r\n\r\n  /**\r\n   * Do not respond to long press touch events.\r\n   * @default false\r\n   */\r\n  disableTouchListener: PropTypes.bool,\r\n\r\n  /**\r\n   * The number of milliseconds to wait before showing the tooltip.\r\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\r\n   * @default 100\r\n   */\r\n  enterDelay: PropTypes.number,\r\n\r\n  /**\r\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\r\n   * @default 0\r\n   */\r\n  enterNextDelay: PropTypes.number,\r\n\r\n  /**\r\n   * The number of milliseconds a user must touch the element before showing the tooltip.\r\n   * @default 700\r\n   */\r\n  enterTouchDelay: PropTypes.number,\r\n\r\n  /**\r\n   * If `true`, the tooltip follow the cursor over the wrapped element.\r\n   * @default false\r\n   */\r\n  followCursor: PropTypes.bool,\r\n\r\n  /**\r\n   * This prop is used to help implement the accessibility logic.\r\n   * If you don't provide this prop. It falls back to a randomly generated id.\r\n   */\r\n  id: PropTypes.string,\r\n\r\n  /**\r\n   * The number of milliseconds to wait before hiding the tooltip.\r\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\r\n   * @default 0\r\n   */\r\n  leaveDelay: PropTypes.number,\r\n\r\n  /**\r\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\r\n   * @default 1500\r\n   */\r\n  leaveTouchDelay: PropTypes.number,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be open.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   */\r\n  onOpen: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n\r\n  /**\r\n   * Tooltip placement.\r\n   * @default 'bottom'\r\n   */\r\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\r\n\r\n  /**\r\n   * The component used for the popper.\r\n   * @default Popper\r\n   */\r\n  PopperComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the [`Popper`](/api/popper/) element.\r\n   * @default {}\r\n   */\r\n  PopperProps: PropTypes.object,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * Tooltip title. Zero-length titles string are never displayed.\r\n   */\r\n  title: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .node.isRequired,\r\n\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Grow\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default Tooltip;"]},"metadata":{},"sourceType":"module"}