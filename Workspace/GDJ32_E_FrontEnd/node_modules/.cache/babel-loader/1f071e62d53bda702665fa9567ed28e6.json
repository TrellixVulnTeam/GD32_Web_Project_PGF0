{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    anchorOrigin\n  } = styleProps;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`anchorOrigin${capitalize(styleProps.anchorOrigin.vertical)}${capitalize(styleProps.anchorOrigin.horizontal)}`]), styles.root || {});\n};\n\nconst SnackbarRoot = experimentalStyled('div', {}, {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => {\n  const top1 = {\n    top: 8\n  };\n  const bottom1 = {\n    bottom: 8\n  };\n  const right = {\n    justifyContent: 'flex-end'\n  };\n  const left = {\n    justifyContent: 'flex-start'\n  };\n  const top3 = {\n    top: 24\n  };\n  const bottom3 = {\n    bottom: 24\n  };\n  const right3 = {\n    right: 24\n  };\n  const left3 = {\n    left: 24\n  };\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, styleProps.anchorOrigin.vertical === 'top' ? top1 : bottom1, styleProps.anchorOrigin.horizontal === 'left' && left, styleProps.anchorOrigin.horizontal === 'right' && right, {\n    [theme.breakpoints.up('sm')]: _extends({}, styleProps.anchorOrigin.vertical === 'top' ? top3 : bottom3, styleProps.anchorOrigin.horizontal === 'center' && center, styleProps.anchorOrigin.horizontal === 'left' && left3, styleProps.anchorOrigin.horizontal === 'right' && right3)\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEnter\", \"onExited\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const styleProps = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    }\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      styleProps: styleProps,\n      ref: ref\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\n  action: PropTypes.node,\n\n  /**\r\n   * The anchor of the `Snackbar`.\r\n   * On smaller screens, the component grows to occupy all the available width,\r\n   * the horizontal alignment is ignored.\r\n   * @default { vertical: 'bottom', horizontal: 'left' }\r\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\r\n   * Replace the `SnackbarContent` component.\r\n   */\n  children: PropTypes.element,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * Props applied to the `ClickAwayListener` element.\r\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\r\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\r\n   */\n  ContentProps: PropTypes.object,\n\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\r\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\r\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\r\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\r\n   * features such as autoHideDuration may be canceled.\r\n   */\n  key: () => null,\n\n  /**\r\n   * The message to display.\r\n   */\n  message: PropTypes.node,\n\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\r\n   */\n  onClose: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\r\n   * @ignore\r\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\r\n   * If `true`, the component is shown.\r\n   */\n  open: PropTypes.bool,\n\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Grow\r\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default {\r\n   *   enter: duration.enteringScreen,\r\n   *   exit: duration.leavingScreen,\r\n   * }\r\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   * @default {}\r\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/Snackbar/Snackbar.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","duration","ClickAwayListener","useEventCallback","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","classes","anchorOrigin","slots","root","vertical","horizontal","overridesResolver","props","styles","SnackbarRoot","name","slot","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","display","alignItems","breakpoints","up","Snackbar","forwardRef","inProps","ref","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","onEnter","onExited","other","timerAutoHide","useRef","exited","setExited","useState","handleClose","args","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","node","handleEnter","isAppearing","window","addEventListener","removeEventListener","undefined","onClickAway","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","func","sx","elementType","oneOfType"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport { duration } from '../styles/transitions';\r\nimport ClickAwayListener from '../ClickAwayListener';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport capitalize from '../utils/capitalize';\r\nimport Grow from '../Grow';\r\nimport SnackbarContent from '../SnackbarContent';\r\nimport { getSnackbarUtilityClass } from './snackbarClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    anchorOrigin\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\r\n  };\r\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\r\n};\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    styleProps\r\n  } = props;\r\n  return deepmerge(_extends({}, styles[`anchorOrigin${capitalize(styleProps.anchorOrigin.vertical)}${capitalize(styleProps.anchorOrigin.horizontal)}`]), styles.root || {});\r\n};\r\n\r\nconst SnackbarRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiSnackbar',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => {\r\n  const top1 = {\r\n    top: 8\r\n  };\r\n  const bottom1 = {\r\n    bottom: 8\r\n  };\r\n  const right = {\r\n    justifyContent: 'flex-end'\r\n  };\r\n  const left = {\r\n    justifyContent: 'flex-start'\r\n  };\r\n  const top3 = {\r\n    top: 24\r\n  };\r\n  const bottom3 = {\r\n    bottom: 24\r\n  };\r\n  const right3 = {\r\n    right: 24\r\n  };\r\n  const left3 = {\r\n    left: 24\r\n  };\r\n  const center = {\r\n    left: '50%',\r\n    right: 'auto',\r\n    transform: 'translateX(-50%)'\r\n  };\r\n  return _extends({\r\n    zIndex: theme.zIndex.snackbar,\r\n    position: 'fixed',\r\n    display: 'flex',\r\n    left: 8,\r\n    right: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }, styleProps.anchorOrigin.vertical === 'top' ? top1 : bottom1, styleProps.anchorOrigin.horizontal === 'left' && left, styleProps.anchorOrigin.horizontal === 'right' && right, {\r\n    [theme.breakpoints.up('sm')]: _extends({}, styleProps.anchorOrigin.vertical === 'top' ? top3 : bottom3, styleProps.anchorOrigin.horizontal === 'center' && center, styleProps.anchorOrigin.horizontal === 'left' && left3, styleProps.anchorOrigin.horizontal === 'right' && right3)\r\n  });\r\n});\r\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiSnackbar'\r\n  });\r\n\r\n  const {\r\n    action,\r\n    anchorOrigin: {\r\n      vertical,\r\n      horizontal\r\n    } = {\r\n      vertical: 'bottom',\r\n      horizontal: 'left'\r\n    },\r\n    autoHideDuration = null,\r\n    children,\r\n    className,\r\n    ClickAwayListenerProps,\r\n    ContentProps,\r\n    disableWindowBlurListener = false,\r\n    message,\r\n    onClose,\r\n    onMouseEnter,\r\n    onMouseLeave,\r\n    open,\r\n    resumeHideDuration,\r\n    TransitionComponent = Grow,\r\n    transitionDuration = {\r\n      enter: duration.enteringScreen,\r\n      exit: duration.leavingScreen\r\n    },\r\n    TransitionProps: {\r\n      onEnter,\r\n      onExited\r\n    } = {}\r\n  } = props,\r\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEnter\", \"onExited\"]),\r\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    anchorOrigin: {\r\n      vertical,\r\n      horizontal\r\n    }\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  const timerAutoHide = React.useRef();\r\n  const [exited, setExited] = React.useState(true);\r\n  const handleClose = useEventCallback((...args) => {\r\n    if (onClose) {\r\n      onClose(...args);\r\n    }\r\n  });\r\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\r\n    if (!onClose || autoHideDurationParam == null) {\r\n      return;\r\n    }\r\n\r\n    clearTimeout(timerAutoHide.current);\r\n    timerAutoHide.current = setTimeout(() => {\r\n      handleClose(null, 'timeout');\r\n    }, autoHideDurationParam);\r\n  });\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      setAutoHideTimer(autoHideDuration);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timerAutoHide.current);\r\n    };\r\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\r\n  // or when the user hide the window.\r\n\r\n  const handlePause = () => {\r\n    clearTimeout(timerAutoHide.current);\r\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\r\n  // or when the window is shown back.\r\n\r\n\r\n  const handleResume = React.useCallback(() => {\r\n    if (autoHideDuration != null) {\r\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\r\n    }\r\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\r\n\r\n  const handleMouseEnter = event => {\r\n    if (onMouseEnter) {\r\n      onMouseEnter(event);\r\n    }\r\n\r\n    handlePause();\r\n  };\r\n\r\n  const handleMouseLeave = event => {\r\n    if (onMouseLeave) {\r\n      onMouseLeave(event);\r\n    }\r\n\r\n    handleResume();\r\n  };\r\n\r\n  const handleClickAway = event => {\r\n    if (onClose) {\r\n      onClose(event, 'clickaway');\r\n    }\r\n  };\r\n\r\n  const handleExited = node => {\r\n    setExited(true);\r\n\r\n    if (onExited) {\r\n      onExited(node);\r\n    }\r\n  };\r\n\r\n  const handleEnter = (node, isAppearing) => {\r\n    setExited(false);\r\n\r\n    if (onEnter) {\r\n      onEnter(node, isAppearing);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    // TODO: window global should be refactored here\r\n    if (!disableWindowBlurListener && open) {\r\n      window.addEventListener('focus', handleResume);\r\n      window.addEventListener('blur', handlePause);\r\n      return () => {\r\n        window.removeEventListener('focus', handleResume);\r\n        window.removeEventListener('blur', handlePause);\r\n      };\r\n    }\r\n\r\n    return undefined;\r\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\r\n\r\n  if (!open && exited) {\r\n    return null;\r\n  }\r\n\r\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\r\n    onClickAway: handleClickAway\r\n  }, ClickAwayListenerProps, {\r\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\r\n      className: clsx(classes.root, className),\r\n      onMouseEnter: handleMouseEnter,\r\n      onMouseLeave: handleMouseLeave,\r\n      styleProps: styleProps,\r\n      ref: ref\r\n    }, other, {\r\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\r\n        appear: true,\r\n        in: open,\r\n        timeout: transitionDuration,\r\n        direction: vertical === 'top' ? 'down' : 'up',\r\n        onEnter: handleEnter,\r\n        onExited: handleExited\r\n      }, TransitionProps, {\r\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\r\n          message: message,\r\n          action: action\r\n        }, ContentProps))\r\n      }))\r\n    }))\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The action to display. It renders after the message, at the end of the snackbar.\r\n   */\r\n  action: PropTypes.node,\r\n\r\n  /**\r\n   * The anchor of the `Snackbar`.\r\n   * On smaller screens, the component grows to occupy all the available width,\r\n   * the horizontal alignment is ignored.\r\n   * @default { vertical: 'bottom', horizontal: 'left' }\r\n   */\r\n  anchorOrigin: PropTypes.shape({\r\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\r\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\r\n  }),\r\n\r\n  /**\r\n   * The number of milliseconds to wait before automatically calling the\r\n   * `onClose` function. `onClose` should then set the state of the `open`\r\n   * prop to hide the Snackbar. This behavior is disabled by default with\r\n   * the `null` value.\r\n   * @default null\r\n   */\r\n  autoHideDuration: PropTypes.number,\r\n\r\n  /**\r\n   * Replace the `SnackbarContent` component.\r\n   */\r\n  children: PropTypes.element,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * Props applied to the `ClickAwayListener` element.\r\n   */\r\n  ClickAwayListenerProps: PropTypes.object,\r\n\r\n  /**\r\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\r\n   */\r\n  ContentProps: PropTypes.object,\r\n\r\n  /**\r\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\r\n   * @default false\r\n   */\r\n  disableWindowBlurListener: PropTypes.bool,\r\n\r\n  /**\r\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\r\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\r\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\r\n   * features such as autoHideDuration may be canceled.\r\n   */\r\n  key: () => null,\r\n\r\n  /**\r\n   * The message to display.\r\n   */\r\n  message: PropTypes.node,\r\n\r\n  /**\r\n   * Callback fired when the component requests to be closed.\r\n   * Typically `onClose` is used to set state in the parent component,\r\n   * which is used to control the `Snackbar` `open` prop.\r\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\r\n   * for example ignoring `clickaway`.\r\n   *\r\n   * @param {object} event The event source of the callback.\r\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\r\n   */\r\n  onClose: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseEnter: PropTypes.func,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  onMouseLeave: PropTypes.func,\r\n\r\n  /**\r\n   * If `true`, the component is shown.\r\n   */\r\n  open: PropTypes.bool,\r\n\r\n  /**\r\n   * The number of milliseconds to wait before dismissing after user interaction.\r\n   * If `autoHideDuration` prop isn't specified, it does nothing.\r\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\r\n   * we default to `autoHideDuration / 2` ms.\r\n   */\r\n  resumeHideDuration: PropTypes.number,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * The component used for the transition.\r\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\r\n   * @default Grow\r\n   */\r\n  TransitionComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * The duration for the transition, in milliseconds.\r\n   * You may specify a single timeout for all transitions, or individually with an object.\r\n   * @default {\r\n   *   enter: duration.enteringScreen,\r\n   *   exit: duration.leavingScreen,\r\n   * }\r\n   */\r\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\r\n    appear: PropTypes.number,\r\n    enter: PropTypes.number,\r\n    exit: PropTypes.number\r\n  })]),\r\n\r\n  /**\r\n   * Props applied to the transition element.\r\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\r\n   * @default {}\r\n   */\r\n  TransitionProps: PropTypes.object\r\n} : void 0;\r\nexport default Snackbar;"]},"metadata":{},"sourceType":"module"}