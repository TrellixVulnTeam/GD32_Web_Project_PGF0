{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GDJ32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\components\\\\board\\\\ListBoardComponent.jsx\";\nimport React, { Component } from 'react';\nimport BoardService from '../../service/BoardService'; // const createBtn = {\n//     width : \"7rem\",\n//     color: \"#212529\",\n//     background: \"lightgray\",\n//     padding: \".375rem .75rem\",\n//     border: \"1px solid lightgray\",\n//     borderRadius: \".25rem\",\n//     fontSize: \"1rem\",\n//     lineHeight: 1.7\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Category = {\n  NOTICE: {\n    value: 0,\n    name: \"공지사항\"\n  },\n  FREEBOARD: {\n    value: 1,\n    name: \"자유게시판\"\n  },\n  STORAGE: {\n    value: 2,\n    name: \"자료실\"\n  },\n  MARCKET: {\n    value: 3,\n    name: \"중고나라\"\n  }\n};\n\nclass ListBoardComponent extends Component {\n  constructor(props) {\n    super(props); // this.state에 현재 페이지 번호를 저장하기 위한 p_num파라미터, paging처리를 위한 paging객체 선언\n\n    this.state = {\n      p_num: 1,\n      paging: {},\n      boards: []\n    }; // #1. 글 작성 버튼 클릭시 동작\n\n    this.createBoard = this.createBoard.bind(this);\n  } // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\n\n\n  componentDidMount() {\n    BoardService.getBoards(this.state.p_num).then(res => {\n      this.setState({\n        p_num: res.data.pagingData.currentPageNum,\n        paging: res.data.pagingData,\n        boards: res.data.list\n      });\n    });\n  } // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\n  // this.props.history.push('이동할 링크'); -> 일반적\n  // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\n  // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\n\n\n  createBoard() {\n    this.props.history.push('/create-board/_create');\n  } // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\n  // readBoard(index){\n\n\n  readBoard(idx) {\n    // this.props.history.push(`/read-board/${index}` ); // * 인자넘김 방법1\n    // this.props.history.push('/read-board/' + index ); // *인자넘검 방법2\n    this.props.history.push('/read-board/' + idx);\n  } // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\n\n\n  listBoard(p_num) {\n    console.log(\"pageNum : \" + p_num);\n    BoardService.getBoards(p_num).then(res => {\n      console.log(res.data);\n      this.setState({\n        p_num: res.data.pagingData.currentPageNum,\n        paging: res.data.pagingData,\n        boards: res.data.list\n      });\n    });\n  } // 페이지 버튼을 표시하는 함수\n\n\n  viewPaging() {\n    const pageNums = [];\n\n    for (let i = this.state.paging.pageNumStart; i <= this.state.paging.pageNumEnd; i++) {\n      pageNums.push(i);\n    }\n\n    return pageNums.map(page => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"page-item\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"page-link\",\n        onClick: () => this.listBoard(page),\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, page.toString(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this));\n  } // 이전 페이지 이동버튼을 출력하는 함수\n\n\n  isPagingPrev() {\n    if (this.state.paging.prev) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: () => this.listBoard(this.state.paging.currentPageNum - 1),\n          tabindex: \"-1\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this);\n    }\n  } // 다음 페이지 이동 버튼을 출력하는 함수\n\n\n  isPagingNext() {\n    if (this.state.paging.next) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: () => this.listBoard(this.state.paging.currentPageNum + 1),\n          tabIndex: \"-1\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this);\n    }\n  } // 첫페이지 이동 버튼을 출력하는 함수\n\n\n  isMoveToFirstPage() {\n    if (this.state.p_num != 1) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: () => this.listBoard(1),\n          tabIndex: \"-1\",\n          children: \"Move to First Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this);\n    }\n  } // 마지막 페이지 이동 버튼을 출력하는 함수\n\n\n  isMoveToLastPage() {\n    if (this.state.p_num != this.state.paging.pageNumCountTotal) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          onClick: () => this.listBoard(this.state.paging.pageNumCountTotal),\n          tabIndex: \"-1\",\n          children: [\"LastPage(\", this.state.paging.pageNumCountTotal, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  getBoardCategory(value) {\n    switch (value) {\n      case Category.NOTICE.value:\n        return Category.NOTICE.name;\n\n      case Category.FREEBOARD.value:\n        return Category.FREEBOARD.name;\n\n      case Category.STORAGE.value:\n        return Category.STORAGE.name;\n\n      case Category.MARCKET.value:\n        return Category.MARCKET.name;\n    }\n\n    return \"Not Defined\";\n  }\n\n  getBoardCreateDay(value) {\n    console.log(\"작성일 : \" + value);\n    return value;\n  } // # 3.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"\\uAC8C\\uC2DC\\uD310 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: this.createBoard,\n          children: \" \\uAE00 \\uC791\\uC131\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table\",\n        style: {\n          padding: \"0 12px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-bordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"colgroup\", {\n            children: [/*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"5%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"50%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"col\", {\n              width: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uBC88\\uD638\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC81C\\uBAA9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC791\\uC131\\uC790 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC791\\uC131\\uC77C \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC870\\uD68C\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC88B\\uC544\\uC694\\uC218\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.boards.map(board =>\n            /*#__PURE__*/\n            // <tr key = {board.index}>\n            _jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.idx, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", this.getBoardCategory(board.category), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                  onClick: () => this.readBoard(board.idx),\n                  children: board.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 46\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.id, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", this.getBoardCreateDay(board.created_day), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.viewCnt, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", board.likes, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)]\n            }, board.idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          \"aria-label\": \"Page navigation example\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"pagination justify-content-center\",\n            children: [this.isMoveToFirstPage(), this.isPagingPrev(), this.viewPaging(), this.isPagingNext(), this.isMoveToLastPage()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListBoardComponent;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/board/ListBoardComponent.jsx"],"names":["React","Component","BoardService","Category","NOTICE","value","name","FREEBOARD","STORAGE","MARCKET","ListBoardComponent","constructor","props","state","p_num","paging","boards","createBoard","bind","componentDidMount","getBoards","then","res","setState","data","pagingData","currentPageNum","list","history","push","readBoard","idx","listBoard","console","log","viewPaging","pageNums","i","pageNumStart","pageNumEnd","map","page","toString","isPagingPrev","prev","isPagingNext","next","isMoveToFirstPage","isMoveToLastPage","pageNumCountTotal","getBoardCategory","getBoardCreateDay","render","padding","board","category","title","id","created_day","viewCnt","likes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport BoardService from '../../service/BoardService';\r\n\r\n// const createBtn = {\r\n//     width : \"7rem\",\r\n//     color: \"#212529\",\r\n//     background: \"lightgray\",\r\n//     padding: \".375rem .75rem\",\r\n//     border: \"1px solid lightgray\",\r\n//     borderRadius: \".25rem\",\r\n//     fontSize: \"1rem\",\r\n//     lineHeight: 1.7\r\n// }\r\n\r\nconst Category = {\r\n        NOTICE: {value: 0, name: \"공지사항\"},\r\n        FREEBOARD: {value: 1, name: \"자유게시판\"},\r\n        STORAGE: {value: 2, name: \"자료실\"},\r\n        MARCKET: {value: 3, name: \"중고나라\"}\r\n}\r\n\r\nclass ListBoardComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    // this.state에 현재 페이지 번호를 저장하기 위한 p_num파라미터, paging처리를 위한 paging객체 선언\r\n        this.state = { \r\n            p_num: 1,\r\n            paging: {},\r\n            boards: []\r\n        }\r\n        // #1. 글 작성 버튼 클릭시 동작\r\n        this.createBoard = this.createBoard.bind(this);\r\n\t\t\r\n    }\r\n    // 페이지가 로딩될 때, 글 목록만 가져오던 것을 , 페이징 객체도 같이 가져오도록 수정\r\n    componentDidMount() {\r\n        \r\n        BoardService.getBoards(this.state.p_num).then((res) => {\r\n            this.setState({ \r\n                p_num: res.data.pagingData.currentPageNum,\r\n                paging: res.data.pagingData,\r\n                boards: res.data.list});\r\n        });\r\n    }\r\n\r\n    // # 글 작성 버튼을 클릭시 글 작성 페이지로 이동 (this.props.history.push -> 인자 전달 )\r\n    // this.props.history.push('이동할 링크'); -> 일반적\r\n    // 사용자 토큰 정보나 결제 정보 또는 게시물의 일련번호 등 다음 페이지로 넘어갈 때 파라미터를 가지고 넘어가야할 때 push를 써서 이동할 때는 아래처럼 이용\r\n    // this.props.history.push({pathname:'이동할 링크',state:{detail:전달할 파라미터}})\r\n    createBoard(){\r\n        this.props.history.push('/create-board/_create');\r\n    }\r\n\r\n    // # 글 제목을 클릭 했을 때 글 상세보기 페이지로 이동해주는 함수정의\r\n    // readBoard(index){\r\n    readBoard(idx){\r\n        // this.props.history.push(`/read-board/${index}` ); // * 인자넘김 방법1\r\n        // this.props.history.push('/read-board/' + index ); // *인자넘검 방법2\r\n        this.props.history.push('/read-board/' + idx );\r\n\r\n    }\r\n\r\n    // 지정한 페이지에 해당하는 글목록과 페이지 객체를 가져오는 함수\r\n    listBoard(p_num) {\r\n        console.log(\"pageNum : \" + p_num);\r\n        BoardService.getBoards(p_num).then((res) => {\r\n            console.log(res.data);\r\n            this.setState({\r\n                p_num: res.data.pagingData.currentPageNum,\r\n                paging: res.data.pagingData,\r\n                boards: res.data.list});\r\n        });\r\n    }\r\n\r\n    // 페이지 버튼을 표시하는 함수\r\n    viewPaging() {\r\n        const pageNums = [];\r\n\r\n        for (let i = this.state.paging.pageNumStart; i <= this.state.paging.pageNumEnd; i++ ) {\r\n            pageNums.push(i);\r\n        }\r\n\r\n        return (pageNums.map((page) => \r\n        <li className=\"page-item\" key={page.toString()} >\r\n            <a className=\"page-link\" onClick = {() => this.listBoard(page)}>{page}</a>\r\n        </li>\r\n        ));\r\n    }\r\n\r\n    // 이전 페이지 이동버튼을 출력하는 함수\r\n    isPagingPrev() {\r\n        if(this.state.paging.prev) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {() => this.listBoard( (this.state.paging.currentPageNum - 1) )} tabindex=\"-1\">Previous</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    // 다음 페이지 이동 버튼을 출력하는 함수\r\n    isPagingNext() {\r\n        if (this.state.paging.next) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {() => this.listBoard( (this.state.paging.currentPageNum + 1) )} tabIndex=\"-1\">Next</a>\r\n                </li>\r\n            )\r\n        }\r\n    }\r\n\r\n    // 첫페이지 이동 버튼을 출력하는 함수\r\n    isMoveToFirstPage() {\r\n        if (this.state.p_num != 1) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {() => this.listBoard(1)} tabIndex=\"-1\">Move to First Page</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    // 마지막 페이지 이동 버튼을 출력하는 함수\r\n    isMoveToLastPage() {\r\n        if (this.state.p_num != this.state.paging.pageNumCountTotal) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {() => this.listBoard( (this.state.paging.pageNumCountTotal) )} tabIndex=\"-1\">LastPage({this.state.paging.pageNumCountTotal})</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    getBoardCategory(value){\r\n        switch(value){\r\n            case Category.NOTICE.value:\r\n                return Category.NOTICE.name;\r\n            case Category.FREEBOARD.value:\r\n                return Category.FREEBOARD.name;\r\n            case Category.STORAGE.value:\r\n                return Category.STORAGE.name;\r\n            case Category.MARCKET.value:\r\n                return Category.MARCKET.name;\r\n        }\r\n        return \"Not Defined\";\r\n    }\r\n\r\n    getBoardCreateDay(value){\r\n        console.log(\"작성일 : \" + value);\r\n        return value;\r\n    }\r\n\r\n    // # 3.\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">게시판 목록</h2>\r\n                <div className = \"row\">\r\n                    <button className=\"btn btn-primary\" \r\n                        onClick={this.createBoard}> 글 작성</button>\r\n                </div>\r\n                <div className =\"table\" style={{ padding: \"0 12px\" }}>\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <colgroup>\r\n                        <col width=\"5%\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"50%\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                        <col width=\"*\" />\r\n                    </colgroup>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>번호</th>\r\n                                <th>카테고리 </th>\r\n                                <th>제목</th>\r\n                                <th>작성자 </th>\r\n                                <th>작성일 </th>\r\n                                {/* <th>수정일</th> */}\r\n                                <th>조회수</th>\r\n                                <th>좋아요수</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.boards.map(\r\n                                    board => \r\n                                    // <tr key = {board.index}>\r\n                                    <tr key = {board.idx}>\r\n                                        {/* <td> {board.index} </td> */}\r\n                                        <td> {board.idx} </td>\r\n\r\n                                        <td> {this.getBoardCategory(board.category)} </td>\r\n                                        {/* <td> <a onClick = {() => this.readBoard(board.index)}>{board.title}</a></td> */}\r\n                                        <td> <a onClick = {() => this.readBoard(board.idx)}>{board.title}</a></td>\r\n                                        <td> {board.id} </td>\r\n                                        <td> {this.getBoardCreateDay(board.created_day)} </td>\r\n                                        <td> {board.viewCnt} </td>\r\n                                        <td> {board.likes} </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className =\"row\">\r\n                    <nav aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination justify-content-center\">\r\n                            {\r\n                                this.isMoveToFirstPage()\r\n                            }\r\n                            {\r\n                                this.isPagingPrev()\r\n                            }\r\n                            {\r\n                                this.viewPaging()\r\n                            }\r\n                            {\r\n                                this.isPagingNext()\r\n                            }\r\n                            {\r\n                                this.isMoveToLastPage()\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListBoardComponent;\r\n"]},"metadata":{},"sourceType":"module"}