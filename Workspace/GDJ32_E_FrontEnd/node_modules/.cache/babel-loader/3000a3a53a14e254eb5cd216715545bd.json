{"ast":null,"code":"import _defineProperty from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var overridesResolver = function overridesResolver(_ref, styles) {\n  var styleProps = _ref.styleProps;\n  return deepmerge(_extends({}, styleProps.color === 'secondary' && styles.colorSecondary, styleProps.filled && styles.filled, _defineProperty({}, \"& .\".concat(formLabelClasses.asterisk), _extends({}, styles.asterisk))), styles.root || {});\n};\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      color = styleProps.color,\n      focused = styleProps.focused,\n      disabled = styleProps.disabled,\n      error = styleProps.error,\n      filled = styleProps.filled,\n      required = styleProps.required;\n  var slots = {\n    root: ['root', \"color\".concat(capitalize(color)), disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\n\nexport var FormLabelRoot = experimentalStyled('label', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function (_ref2) {\n  var theme = _ref2.theme,\n      styleProps = _ref2.styleProps;\n  return _extends({\n    color: theme.palette.text.secondary\n  }, theme.typography.body1, {\n    lineHeight: '1.4375em',\n    padding: 0,\n    '&.Mui-focused': {\n      color: theme.palette[styleProps.color].main\n    },\n    '&.Mui-disabled': {\n      color: theme.palette.text.disabled\n    },\n    '&.Mui-error': {\n      color: theme.palette.error.main\n    }\n  });\n});\nvar AsteriskComponent = experimentalStyled('span', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk'\n})(function (_ref3) {\n  var theme = _ref3.theme;\n  return {\n    '&.Mui-error': {\n      color: theme.palette.error.main\n    }\n  };\n});\nvar FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n\n  var children = props.children,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'label' : _props$component,\n      other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n\n  var styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component: component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      styleProps: styleProps,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * If `true`, the label should be displayed in a disabled state.\r\n   */\n  disabled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label is displayed in an error state.\r\n   */\n  error: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label should use filled classes key.\r\n   */\n  filled: PropTypes.bool,\n\n  /**\r\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\r\n   */\n  focused: PropTypes.bool,\n\n  /**\r\n   * If `true`, the label will indicate that the `input` is required.\r\n   */\n  required: PropTypes.bool,\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormLabel;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/FormLabel/FormLabel.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","formControlState","useFormControl","capitalize","useThemeProps","experimentalStyled","formLabelClasses","getFormLabelUtilityClasses","jsxs","_jsxs","overridesResolver","styles","styleProps","color","colorSecondary","filled","asterisk","root","useUtilityClasses","classes","focused","disabled","error","required","slots","FormLabelRoot","name","slot","theme","palette","text","secondary","typography","body1","lineHeight","padding","main","AsteriskComponent","FormLabel","forwardRef","inProps","ref","props","children","className","component","other","muiFormControl","fcs","states","as","process","env","NODE_ENV","propTypes","node","object","string","oneOf","elementType","bool","sx"],"mappings":";AAAA,OAAOA,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,uBAAuB,IAAIC,cAApC,QAA0D,uBAA1D;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,gBAAP,IAA2BC,0BAA3B,QAA6D,oBAA7D;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAE9BC,MAF8B,EAEnB;AAAA,MADZC,UACY,QADZA,UACY;AACZ,SAAOd,SAAS,CAACJ,QAAQ,CAAC,EAAD,EAAKkB,UAAU,CAACC,KAAX,KAAqB,WAArB,IAAoCF,MAAM,CAACG,cAAhD,EAAgEF,UAAU,CAACG,MAAX,IAAqBJ,MAAM,CAACI,MAA5F,mCAChBT,gBAAgB,CAACU,QADD,GACctB,QAAQ,CAAC,EAAD,EAAKiB,MAAM,CAACK,QAAZ,CADtB,EAAT,EAEZL,MAAM,CAACM,IAAP,IAAe,EAFH,CAAhB;AAGD,CANM;;AAQP,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAN,UAAU,EAAI;AAAA,MAEpCO,OAFoC,GASlCP,UATkC,CAEpCO,OAFoC;AAAA,MAGpCN,KAHoC,GASlCD,UATkC,CAGpCC,KAHoC;AAAA,MAIpCO,OAJoC,GASlCR,UATkC,CAIpCQ,OAJoC;AAAA,MAKpCC,QALoC,GASlCT,UATkC,CAKpCS,QALoC;AAAA,MAMpCC,KANoC,GASlCV,UATkC,CAMpCU,KANoC;AAAA,MAOpCP,MAPoC,GASlCH,UATkC,CAOpCG,MAPoC;AAAA,MAQpCQ,QARoC,GASlCX,UATkC,CAQpCW,QARoC;AAUtC,MAAMC,KAAK,GAAG;AACZP,IAAAA,IAAI,EAAE,CAAC,MAAD,iBAAiBd,UAAU,CAACU,KAAD,CAA3B,GAAsCQ,QAAQ,IAAI,UAAlD,EAA8DC,KAAK,IAAI,OAAvE,EAAgFP,MAAM,IAAI,QAA1F,EAAoGK,OAAO,IAAI,SAA/G,EAA0HG,QAAQ,IAAI,UAAtI,CADM;AAEZP,IAAAA,QAAQ,EAAE,CAAC,UAAD,EAAaM,KAAK,IAAI,OAAtB;AAFE,GAAd;AAIA,SAAOtB,cAAc,CAACwB,KAAD,EAAQjB,0BAAR,EAAoCY,OAApC,CAArB;AACD,CAfD;;AAiBA,OAAO,IAAMM,aAAa,GAAGpB,kBAAkB,CAAC,OAAD,EAAU,EAAV,EAAc;AAC3DqB,EAAAA,IAAI,EAAE,cADqD;AAE3DC,EAAAA,IAAI,EAAE,MAFqD;AAG3DjB,EAAAA,iBAAiB,EAAjBA;AAH2D,CAAd,CAAlB,CAI1B;AAAA,MACDkB,KADC,SACDA,KADC;AAAA,MAEDhB,UAFC,SAEDA,UAFC;AAAA,SAGGlB,QAAQ,CAAC;AACbmB,IAAAA,KAAK,EAAEe,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC;AADb,GAAD,EAEXH,KAAK,CAACI,UAAN,CAAiBC,KAFN,EAEa;AACzBC,IAAAA,UAAU,EAAE,UADa;AAEzBC,IAAAA,OAAO,EAAE,CAFgB;AAGzB,qBAAiB;AACftB,MAAAA,KAAK,EAAEe,KAAK,CAACC,OAAN,CAAcjB,UAAU,CAACC,KAAzB,EAAgCuB;AADxB,KAHQ;AAMzB,sBAAkB;AAChBvB,MAAAA,KAAK,EAAEe,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBT;AADV,KANO;AASzB,mBAAe;AACbR,MAAAA,KAAK,EAAEe,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAoBc;AADd;AATU,GAFb,CAHX;AAAA,CAJ0B,CAAtB;AAsBP,IAAMC,iBAAiB,GAAGhC,kBAAkB,CAAC,MAAD,EAAS,EAAT,EAAa;AACvDqB,EAAAA,IAAI,EAAE,cADiD;AAEvDC,EAAAA,IAAI,EAAE;AAFiD,CAAb,CAAlB,CAGvB;AAAA,MACDC,KADC,SACDA,KADC;AAAA,SAEI;AACL,mBAAe;AACbf,MAAAA,KAAK,EAAEe,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAoBc;AADd;AADV,GAFJ;AAAA,CAHuB,CAA1B;AAUA,IAAME,SAAS,GAAG,aAAa3C,KAAK,CAAC4C,UAAN,CAAiB,SAASD,SAAT,CAAmBE,OAAnB,EAA4BC,GAA5B,EAAiC;AAC/E,MAAMC,KAAK,GAAGtC,aAAa,CAAC;AAC1BsC,IAAAA,KAAK,EAAEF,OADmB;AAE1Bd,IAAAA,IAAI,EAAE;AAFoB,GAAD,CAA3B;;AAD+E,MAO7EiB,QAP6E,GAU3ED,KAV2E,CAO7EC,QAP6E;AAAA,MAQ7EC,SAR6E,GAU3EF,KAV2E,CAQ7EE,SAR6E;AAAA,yBAU3EF,KAV2E,CAS7EG,SAT6E;AAAA,MAS7EA,SAT6E,iCASjE,OATiE;AAAA,MAWzEC,KAXyE,GAWjErD,6BAA6B,CAACiD,KAAD,EAAQ,CAAC,UAAD,EAAa,WAAb,EAA0B,OAA1B,EAAmC,WAAnC,EAAgD,UAAhD,EAA4D,OAA5D,EAAqE,QAArE,EAA+E,SAA/E,EAA0F,UAA1F,CAAR,CAXoC;;AAa/E,MAAMK,cAAc,GAAG7C,cAAc,EAArC;AACA,MAAM8C,GAAG,GAAG/C,gBAAgB,CAAC;AAC3ByC,IAAAA,KAAK,EAALA,KAD2B;AAE3BK,IAAAA,cAAc,EAAdA,cAF2B;AAG3BE,IAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,UAAV,EAAsB,SAAtB,EAAiC,UAAjC,EAA6C,OAA7C,EAAsD,QAAtD;AAHmB,GAAD,CAA5B;;AAMA,MAAMrC,UAAU,GAAGlB,QAAQ,CAAC,EAAD,EAAKgD,KAAL,EAAY;AACrC7B,IAAAA,KAAK,EAAEmC,GAAG,CAACnC,KAAJ,IAAa,SADiB;AAErCgC,IAAAA,SAAS,EAATA,SAFqC;AAGrCxB,IAAAA,QAAQ,EAAE2B,GAAG,CAAC3B,QAHuB;AAIrCC,IAAAA,KAAK,EAAE0B,GAAG,CAAC1B,KAJ0B;AAKrCP,IAAAA,MAAM,EAAEiC,GAAG,CAACjC,MALyB;AAMrCK,IAAAA,OAAO,EAAE4B,GAAG,CAAC5B,OANwB;AAOrCG,IAAAA,QAAQ,EAAEyB,GAAG,CAACzB;AAPuB,GAAZ,CAA3B;;AAUA,MAAMJ,OAAO,GAAGD,iBAAiB,CAACN,UAAD,CAAjC;AACA,SAAO,aAAaH,KAAK,CAACgB,aAAD,EAAgB/B,QAAQ,CAAC;AAChDwD,IAAAA,EAAE,EAAEL,SAD4C;AAEhDjC,IAAAA,UAAU,EAAEA,UAFoC;AAGhDgC,IAAAA,SAAS,EAAE/C,IAAI,CAACsB,OAAO,CAACF,IAAT,EAAe2B,SAAf,CAHiC;AAIhDH,IAAAA,GAAG,EAAEA;AAJ2C,GAAD,EAK9CK,KAL8C,EAKvC;AACRH,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWK,GAAG,CAACzB,QAAJ,IAAgB,aAAad,KAAK,CAAC4B,iBAAD,EAAoB;AACzEzB,MAAAA,UAAU,EAAEA,UAD6D;AAEzE,qBAAe,IAF0D;AAGzEgC,MAAAA,SAAS,EAAEzB,OAAO,CAACH,QAHsD;AAIzE2B,MAAAA,QAAQ,EAAE,CAAC,QAAD,EAAW,GAAX;AAJ+D,KAApB,CAA7C;AADF,GALuC,CAAxB,CAAzB;AAaD,CA5C8B,CAA/B;AA6CAQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCf,SAAS,CAACgB;AAClD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEX,EAAAA,QAAQ,EAAE/C,SAAS,CAAC2D,IATpB;;AAWA;AACF;AACA;AACEpC,EAAAA,OAAO,EAAEvB,SAAS,CAAC4D,MAdnB;;AAgBA;AACF;AACA;AACEZ,EAAAA,SAAS,EAAEhD,SAAS,CAAC6D,MAnBrB;;AAqBA;AACF;AACA;AACE5C,EAAAA,KAAK,EAAEjB,SAAS,CAAC8D,KAAV,CAAgB,CAAC,SAAD,EAAY,WAAZ,CAAhB,CAxBP;;AA0BA;AACF;AACA;AACA;AACEb,EAAAA,SAAS,EAAEjD,SAAS,CAAC+D,WA9BrB;;AAgCA;AACF;AACA;AACEtC,EAAAA,QAAQ,EAAEzB,SAAS,CAACgE,IAnCpB;;AAqCA;AACF;AACA;AACEtC,EAAAA,KAAK,EAAE1B,SAAS,CAACgE,IAxCjB;;AA0CA;AACF;AACA;AACE7C,EAAAA,MAAM,EAAEnB,SAAS,CAACgE,IA7ClB;;AA+CA;AACF;AACA;AACExC,EAAAA,OAAO,EAAExB,SAAS,CAACgE,IAlDnB;;AAoDA;AACF;AACA;AACErC,EAAAA,QAAQ,EAAE3B,SAAS,CAACgE,IAvDpB;;AAyDA;AACF;AACA;AACEC,EAAAA,EAAE,EAAEjE,SAAS,CAAC4D;AA5Dd,CAFF,GA+DI,KAAK,CA/DT;AAgEA,eAAelB,SAAf","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport formControlState from '../FormControl/formControlState';\r\nimport useFormControl from '../FormControl/useFormControl';\r\nimport capitalize from '../utils/capitalize';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport const overridesResolver = ({\r\n  styleProps\r\n}, styles) => {\r\n  return deepmerge(_extends({}, styleProps.color === 'secondary' && styles.colorSecondary, styleProps.filled && styles.filled, {\r\n    [`& .${formLabelClasses.asterisk}`]: _extends({}, styles.asterisk)\r\n  }), styles.root || {});\r\n};\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    color,\r\n    focused,\r\n    disabled,\r\n    error,\r\n    filled,\r\n    required\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\r\n    asterisk: ['asterisk', error && 'error']\r\n  };\r\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\r\n};\r\n\r\nexport const FormLabelRoot = experimentalStyled('label', {}, {\r\n  name: 'MuiFormLabel',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  theme,\r\n  styleProps\r\n}) => _extends({\r\n  color: theme.palette.text.secondary\r\n}, theme.typography.body1, {\r\n  lineHeight: '1.4375em',\r\n  padding: 0,\r\n  '&.Mui-focused': {\r\n    color: theme.palette[styleProps.color].main\r\n  },\r\n  '&.Mui-disabled': {\r\n    color: theme.palette.text.disabled\r\n  },\r\n  '&.Mui-error': {\r\n    color: theme.palette.error.main\r\n  }\r\n}));\r\nconst AsteriskComponent = experimentalStyled('span', {}, {\r\n  name: 'MuiFormLabel',\r\n  slot: 'Asterisk'\r\n})(({\r\n  theme\r\n}) => ({\r\n  '&.Mui-error': {\r\n    color: theme.palette.error.main\r\n  }\r\n}));\r\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\r\n  const props = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiFormLabel'\r\n  });\r\n\r\n  const {\r\n    children,\r\n    className,\r\n    component = 'label'\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\r\n\r\n  const muiFormControl = useFormControl();\r\n  const fcs = formControlState({\r\n    props,\r\n    muiFormControl,\r\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\r\n  });\r\n\r\n  const styleProps = _extends({}, props, {\r\n    color: fcs.color || 'primary',\r\n    component,\r\n    disabled: fcs.disabled,\r\n    error: fcs.error,\r\n    filled: fcs.filled,\r\n    focused: fcs.focused,\r\n    required: fcs.required\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\r\n    as: component,\r\n    styleProps: styleProps,\r\n    className: clsx(classes.root, className),\r\n    ref: ref\r\n  }, other, {\r\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\r\n      styleProps: styleProps,\r\n      \"aria-hidden\": true,\r\n      className: classes.asterisk,\r\n      children: [\"\\u2009\", '*']\r\n    })]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The color of the component. It supports those theme colors that make sense for this component.\r\n   */\r\n  color: PropTypes.oneOf(['primary', 'secondary']),\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * If `true`, the label should be displayed in a disabled state.\r\n   */\r\n  disabled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label is displayed in an error state.\r\n   */\r\n  error: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label should use filled classes key.\r\n   */\r\n  filled: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\r\n   */\r\n  focused: PropTypes.bool,\r\n\r\n  /**\r\n   * If `true`, the label will indicate that the `input` is required.\r\n   */\r\n  required: PropTypes.bool,\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object\r\n} : void 0;\r\nexport default FormLabel;"]},"metadata":{},"sourceType":"module"}