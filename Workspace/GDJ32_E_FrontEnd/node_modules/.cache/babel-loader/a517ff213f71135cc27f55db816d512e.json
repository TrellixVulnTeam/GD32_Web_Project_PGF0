{"ast":null,"code":"import _defineProperty from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  var parse = parseFloat(val);\n  return \"\".concat(parse).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\n  var size = styleProps[breakpoint];\n  if (!size) return;\n  var styles = {};\n\n  if (size === true) {\n    // For the auto layouting\n    styles = {\n      flexBasis: 0,\n      flexGrow: 1,\n      maxWidth: '100%'\n    };\n  } else if (size === 'auto') {\n    styles = {\n      flexBasis: 'auto',\n      flexGrow: 0,\n      maxWidth: 'none'\n    };\n  } else {\n    // Keep 7 significant numbers.\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\");\n    var more = {};\n\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\n      var themeSpacing = theme.spacing(styleProps.spacing);\n\n      if (themeSpacing !== '0px') {\n        var fullWidth = \"calc(\".concat(width, \" + \").concat(getOffset(themeSpacing), \")\");\n        more = {\n          flexBasis: fullWidth,\n          maxWidth: fullWidth\n        };\n      }\n    } // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n    styles = _extends({\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    }, more);\n  } // No need for a media query for the first size.\n\n\n  if (theme.breakpoints.values[breakpoint] === 0) {\n    Object.assign(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction generateGap(_ref) {\n  var theme = _ref.theme,\n      styleProps = _ref.styleProps;\n  var container = styleProps.container,\n      spacing = styleProps.spacing;\n  var styles = {};\n\n  if (container && spacing !== 0) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing !== '0px') {\n      styles = _defineProperty({\n        width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n        marginTop: \"-\".concat(getOffset(themeSpacing)),\n        marginLeft: \"-\".concat(getOffset(themeSpacing))\n      }, \"& > .\".concat(gridClasses.item), {\n        paddingTop: getOffset(themeSpacing),\n        paddingLeft: getOffset(themeSpacing)\n      });\n    }\n  }\n\n  return styles;\n}\n\nvar overridesResolver = function overridesResolver(props, styles) {\n  var _props$styleProps = props.styleProps,\n      container = _props$styleProps.container,\n      direction = _props$styleProps.direction,\n      item = _props$styleProps.item,\n      lg = _props$styleProps.lg,\n      md = _props$styleProps.md,\n      sm = _props$styleProps.sm,\n      spacing = _props$styleProps.spacing,\n      wrap = _props$styleProps.wrap,\n      xl = _props$styleProps.xl,\n      xs = _props$styleProps.xs,\n      zeroMinWidth = _props$styleProps.zeroMinWidth;\n  return deepmerge(_extends({}, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[\"spacing-xs-\".concat(String(spacing))], direction !== 'row' && styles[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && styles[\"wrap-xs-\".concat(String(wrap))], xs !== false && styles[\"grid-xs-\".concat(String(xs))], sm !== false && styles[\"grid-sm-\".concat(String(sm))], md !== false && styles[\"grid-md-\".concat(String(md))], lg !== false && styles[\"grid-lg-\".concat(String(lg))], xl !== false && styles[\"grid-xl-\".concat(String(xl))]), styles.root || {});\n}; // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nvar GridRoot = experimentalStyled('div', {}, {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: overridesResolver\n})(function (_ref2) {\n  var styleProps = _ref2.styleProps;\n  return _extends({\n    boxSizing: 'border-box'\n  }, styleProps.container && {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: '100%'\n  }, styleProps.item && {\n    margin: 0 // For instance, it's useful when used with a `figure` element.\n\n  }, styleProps.zeroMinWidth && {\n    minWidth: 0\n  }, styleProps.direction === 'column' && _defineProperty({\n    flexDirection: 'column'\n  }, \"& > .\".concat(gridClasses.item), {\n    maxWidth: 'none'\n  }), styleProps.direction === 'column-reverse' && _defineProperty({\n    flexDirection: 'column-reverse'\n  }, \"& > .\".concat(gridClasses.item), {\n    maxWidth: 'none'\n  }), styleProps.direction === 'row-reverse' && {\n    flexDirection: 'row-reverse'\n  }, styleProps.wrap === 'nowrap' && {\n    flexWrap: 'nowrap'\n  }, styleProps.wrap === 'reverse' && {\n    flexWrap: 'wrap-reverse'\n  });\n}, generateGap, function (_ref5) {\n  var theme = _ref5.theme,\n      styleProps = _ref5.styleProps;\n  return theme.breakpoints.keys.reduce(function (globalStyles, breakpoint) {\n    // Use side effect over immutability for better performance.\n    generateGrid(globalStyles, theme, breakpoint, styleProps);\n    return globalStyles;\n  }, {});\n});\n\nvar useUtilityClasses = function useUtilityClasses(styleProps) {\n  var classes = styleProps.classes,\n      container = styleProps.container,\n      direction = styleProps.direction,\n      item = styleProps.item,\n      lg = styleProps.lg,\n      md = styleProps.md,\n      sm = styleProps.sm,\n      spacing = styleProps.spacing,\n      wrap = styleProps.wrap,\n      xl = styleProps.xl,\n      xs = styleProps.xs,\n      zeroMinWidth = styleProps.zeroMinWidth;\n  var slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && \"spacing-xs-\".concat(String(spacing)), direction !== 'row' && \"direction-xs-\".concat(String(direction)), wrap !== 'wrap' && \"wrap-xs-\".concat(String(wrap)), xs !== false && \"grid-xs-\".concat(String(xs)), sm !== false && \"grid-sm-\".concat(String(sm)), md !== false && \"grid-md-\".concat(String(md)), lg !== false && \"grid-lg-\".concat(String(lg)), xl !== false && \"grid-xl-\".concat(String(xl))]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  var themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  var props = extendSxProp(themeProps);\n\n  var className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var styleProps = _extends({}, props, {\n    container: container,\n    direction: direction,\n    item: item,\n    lg: lg,\n    md: md,\n    sm: sm,\n    spacing: spacing,\n    wrap: wrap,\n    xl: xl,\n    xs: xs,\n    zeroMinWidth: zeroMinWidth\n  });\n\n  var classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(GridRoot, _extends({\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * If `true`, the component will have the flex *container* behavior.\r\n   * You should be wrapping *items* with a *container*.\r\n   * @default false\r\n   */\n  container: PropTypes.bool,\n\n  /**\r\n   * Defines the `flex-direction` style property.\r\n   * It is applied for all screen sizes.\r\n   * @default 'row'\r\n   */\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\n\n  /**\r\n   * If `true`, the component will have the flex *item* behavior.\r\n   * You should be wrapping *items* with a *container*.\r\n   * @default false\r\n   */\n  item: PropTypes.bool,\n\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\r\n   * @default false\r\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\r\n   * @default false\r\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\r\n   * @default false\r\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\r\n   * Defines the space between the type `item` component.\r\n   * It can only be used on a type `container` component.\r\n   * @default 0\r\n   */\n  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\n\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\n  sx: PropTypes.object,\n\n  /**\r\n   * Defines the `flex-wrap` style property.\r\n   * It's applied for all screen sizes.\r\n   * @default 'wrap'\r\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `xl` breakpoint and wider screens.\r\n   * @default false\r\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for all the screen sizes with the lowest priority.\r\n   * @default false\r\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\n\n  /**\r\n   * If `true`, it sets `min-width: 0` on the item.\r\n   * Refer to the limitations section of the documentation to better understand the use case.\r\n   * @default false\r\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/Grid/Grid.js"],"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_extendSxProp","extendSxProp","unstable_composeClasses","composeClasses","requirePropFactory","experimentalStyled","useThemeProps","gridClasses","getGridUtilityClass","jsx","_jsx","getOffset","val","parse","parseFloat","String","replace","generateGrid","globalStyles","theme","breakpoint","styleProps","size","styles","flexBasis","flexGrow","maxWidth","width","Math","round","more","container","item","spacing","themeSpacing","fullWidth","breakpoints","values","Object","assign","up","generateGap","marginTop","marginLeft","paddingTop","paddingLeft","overridesResolver","props","direction","lg","md","sm","wrap","xl","xs","zeroMinWidth","root","GridRoot","name","slot","boxSizing","display","flexWrap","margin","minWidth","flexDirection","keys","reduce","useUtilityClasses","classes","slots","Grid","forwardRef","inProps","ref","themeProps","className","component","other","as","process","env","NODE_ENV","propTypes","children","node","object","string","elementType","bool","oneOf","oneOfType","sx","requireProp"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\n// A grid component using the following libs as inspiration.\r\n//\r\n// For the implementation:\r\n// - https://getbootstrap.com/docs/4.3/layout/grid/\r\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\r\n// - https://github.com/roylee0704/react-flexbox-grid\r\n// - https://material.angularjs.org/latest/layout/introduction\r\n//\r\n// Follow this flexbox Guide to better understand the underlying model:\r\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { deepmerge } from '@material-ui/utils';\r\nimport { unstable_extendSxProp as extendSxProp } from '@material-ui/system';\r\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\r\nimport requirePropFactory from '../utils/requirePropFactory';\r\nimport experimentalStyled from '../styles/experimentalStyled';\r\nimport useThemeProps from '../styles/useThemeProps';\r\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\n\r\nfunction getOffset(val) {\r\n  const parse = parseFloat(val);\r\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\r\n}\r\n\r\nfunction generateGrid(globalStyles, theme, breakpoint, styleProps) {\r\n  const size = styleProps[breakpoint];\r\n  if (!size) return;\r\n  let styles = {};\r\n\r\n  if (size === true) {\r\n    // For the auto layouting\r\n    styles = {\r\n      flexBasis: 0,\r\n      flexGrow: 1,\r\n      maxWidth: '100%'\r\n    };\r\n  } else if (size === 'auto') {\r\n    styles = {\r\n      flexBasis: 'auto',\r\n      flexGrow: 0,\r\n      maxWidth: 'none'\r\n    };\r\n  } else {\r\n    // Keep 7 significant numbers.\r\n    const width = `${Math.round(size / 12 * 10e7) / 10e5}%`;\r\n    let more = {};\r\n\r\n    if (styleProps.container && styleProps.item && styleProps.spacing !== 0) {\r\n      const themeSpacing = theme.spacing(styleProps.spacing);\r\n\r\n      if (themeSpacing !== '0px') {\r\n        const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\r\n        more = {\r\n          flexBasis: fullWidth,\r\n          maxWidth: fullWidth\r\n        };\r\n      }\r\n    } // Close to the bootstrap implementation:\r\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\r\n\r\n\r\n    styles = _extends({\r\n      flexBasis: width,\r\n      flexGrow: 0,\r\n      maxWidth: width\r\n    }, more);\r\n  } // No need for a media query for the first size.\r\n\r\n\r\n  if (theme.breakpoints.values[breakpoint] === 0) {\r\n    Object.assign(globalStyles, styles);\r\n  } else {\r\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\r\n  }\r\n}\r\n\r\nfunction generateGap({\r\n  theme,\r\n  styleProps\r\n}) {\r\n  const {\r\n    container,\r\n    spacing\r\n  } = styleProps;\r\n  let styles = {};\r\n\r\n  if (container && spacing !== 0) {\r\n    const themeSpacing = theme.spacing(spacing);\r\n\r\n    if (themeSpacing !== '0px') {\r\n      styles = {\r\n        width: `calc(100% + ${getOffset(themeSpacing)})`,\r\n        marginTop: `-${getOffset(themeSpacing)}`,\r\n        marginLeft: `-${getOffset(themeSpacing)}`,\r\n        [`& > .${gridClasses.item}`]: {\r\n          paddingTop: getOffset(themeSpacing),\r\n          paddingLeft: getOffset(themeSpacing)\r\n        }\r\n      };\r\n    }\r\n  }\r\n\r\n  return styles;\r\n}\r\n\r\nconst overridesResolver = (props, styles) => {\r\n  const {\r\n    container,\r\n    direction,\r\n    item,\r\n    lg,\r\n    md,\r\n    sm,\r\n    spacing,\r\n    wrap,\r\n    xl,\r\n    xs,\r\n    zeroMinWidth\r\n  } = props.styleProps;\r\n  return deepmerge(_extends({}, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, container && spacing !== 0 && styles[`spacing-xs-${String(spacing)}`], direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], xs !== false && styles[`grid-xs-${String(xs)}`], sm !== false && styles[`grid-sm-${String(sm)}`], md !== false && styles[`grid-md-${String(md)}`], lg !== false && styles[`grid-lg-${String(lg)}`], xl !== false && styles[`grid-xl-${String(xl)}`]), styles.root || {});\r\n}; // Default CSS values\r\n// flex: '0 1 auto',\r\n// flexDirection: 'row',\r\n// alignItems: 'flex-start',\r\n// flexWrap: 'nowrap',\r\n// justifyContent: 'flex-start',\r\n\r\n\r\nconst GridRoot = experimentalStyled('div', {}, {\r\n  name: 'MuiGrid',\r\n  slot: 'Root',\r\n  overridesResolver\r\n})(({\r\n  styleProps\r\n}) => _extends({\r\n  boxSizing: 'border-box'\r\n}, styleProps.container && {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  width: '100%'\r\n}, styleProps.item && {\r\n  margin: 0 // For instance, it's useful when used with a `figure` element.\r\n\r\n}, styleProps.zeroMinWidth && {\r\n  minWidth: 0\r\n}, styleProps.direction === 'column' && {\r\n  flexDirection: 'column',\r\n  [`& > .${gridClasses.item}`]: {\r\n    maxWidth: 'none'\r\n  }\r\n}, styleProps.direction === 'column-reverse' && {\r\n  flexDirection: 'column-reverse',\r\n  [`& > .${gridClasses.item}`]: {\r\n    maxWidth: 'none'\r\n  }\r\n}, styleProps.direction === 'row-reverse' && {\r\n  flexDirection: 'row-reverse'\r\n}, styleProps.wrap === 'nowrap' && {\r\n  flexWrap: 'nowrap'\r\n}, styleProps.wrap === 'reverse' && {\r\n  flexWrap: 'wrap-reverse'\r\n}), generateGap, ({\r\n  theme,\r\n  styleProps\r\n}) => theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\r\n  // Use side effect over immutability for better performance.\r\n  generateGrid(globalStyles, theme, breakpoint, styleProps);\r\n  return globalStyles;\r\n}, {}));\r\n\r\nconst useUtilityClasses = styleProps => {\r\n  const {\r\n    classes,\r\n    container,\r\n    direction,\r\n    item,\r\n    lg,\r\n    md,\r\n    sm,\r\n    spacing,\r\n    wrap,\r\n    xl,\r\n    xs,\r\n    zeroMinWidth\r\n  } = styleProps;\r\n  const slots = {\r\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', container && spacing !== 0 && `spacing-xs-${String(spacing)}`, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, xs !== false && `grid-xs-${String(xs)}`, sm !== false && `grid-sm-${String(sm)}`, md !== false && `grid-md-${String(md)}`, lg !== false && `grid-lg-${String(lg)}`, xl !== false && `grid-xl-${String(xl)}`]\r\n  };\r\n  return composeClasses(slots, getGridUtilityClass, classes);\r\n};\r\n\r\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\r\n  const themeProps = useThemeProps({\r\n    props: inProps,\r\n    name: 'MuiGrid'\r\n  });\r\n  const props = extendSxProp(themeProps);\r\n\r\n  const {\r\n    className,\r\n    component = 'div',\r\n    container = false,\r\n    direction = 'row',\r\n    item = false,\r\n    lg = false,\r\n    md = false,\r\n    sm = false,\r\n    spacing = 0,\r\n    wrap = 'wrap',\r\n    xl = false,\r\n    xs = false,\r\n    zeroMinWidth = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"component\", \"container\", \"direction\", \"item\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\r\n\r\n  const styleProps = _extends({}, props, {\r\n    container,\r\n    direction,\r\n    item,\r\n    lg,\r\n    md,\r\n    sm,\r\n    spacing,\r\n    wrap,\r\n    xl,\r\n    xs,\r\n    zeroMinWidth\r\n  });\r\n\r\n  const classes = useUtilityClasses(styleProps);\r\n  return /*#__PURE__*/_jsx(GridRoot, _extends({\r\n    styleProps: styleProps,\r\n    className: clsx(classes.root, className),\r\n    as: component,\r\n    ref: ref\r\n  }, other));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * If `true`, the component will have the flex *container* behavior.\r\n   * You should be wrapping *items* with a *container*.\r\n   * @default false\r\n   */\r\n  container: PropTypes.bool,\r\n\r\n  /**\r\n   * Defines the `flex-direction` style property.\r\n   * It is applied for all screen sizes.\r\n   * @default 'row'\r\n   */\r\n  direction: PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']),\r\n\r\n  /**\r\n   * If `true`, the component will have the flex *item* behavior.\r\n   * You should be wrapping *items* with a *container*.\r\n   * @default false\r\n   */\r\n  item: PropTypes.bool,\r\n\r\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\r\n   * @default false\r\n   */\r\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\r\n\r\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\r\n   * @default false\r\n   */\r\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\r\n\r\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\r\n   * @default false\r\n   */\r\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\r\n\r\n  /**\r\n   * Defines the space between the type `item` component.\r\n   * It can only be used on a type `container` component.\r\n   * @default 0\r\n   */\r\n  spacing: PropTypes.oneOf([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]),\r\n\r\n  /**\r\n   * The system prop that allows defining system overrides as well as additional CSS styles.\r\n   */\r\n  sx: PropTypes.object,\r\n\r\n  /**\r\n   * Defines the `flex-wrap` style property.\r\n   * It's applied for all screen sizes.\r\n   * @default 'wrap'\r\n   */\r\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\r\n\r\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for the `xl` breakpoint and wider screens.\r\n   * @default false\r\n   */\r\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\r\n\r\n  /**\r\n   * Defines the number of grids the component is going to use.\r\n   * It's applied for all the screen sizes with the lowest priority.\r\n   * @default false\r\n   */\r\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]), PropTypes.bool]),\r\n\r\n  /**\r\n   * If `true`, it sets `min-width: 0` on the item.\r\n   * Refer to the limitations section of the documentation to better understand the use case.\r\n   * @default false\r\n   */\r\n  zeroMinWidth: PropTypes.bool\r\n} : void 0;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\r\n\r\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\r\n    direction: requireProp('container'),\r\n    lg: requireProp('item'),\r\n    md: requireProp('item'),\r\n    sm: requireProp('item'),\r\n    spacing: requireProp('container'),\r\n    wrap: requireProp('container'),\r\n    xs: requireProp('item'),\r\n    zeroMinWidth: requireProp('item')\r\n  });\r\n}\r\n\r\nexport default Grid;"]},"metadata":{},"sourceType":"module"}