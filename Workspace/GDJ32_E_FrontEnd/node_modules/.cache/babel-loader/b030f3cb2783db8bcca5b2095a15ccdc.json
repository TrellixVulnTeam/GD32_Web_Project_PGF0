{"ast":null,"code":"import _objectSpread from\"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import{useState}from'react';import{Link as RouterLink}from'react-router-dom';import{AppBar,Badge,Box,Hidden,IconButton,Toolbar}from'@material-ui/core';import MenuIcon from'@material-ui/icons/Menu';import NotificationsIcon from'@material-ui/icons/NotificationsOutlined';// import InputIcon from '@material-ui/icons/Input';\nimport{BiCalendar}from'react-icons/bi';import Logo from'./Logo';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DashboardNavbar=function DashboardNavbar(_ref){var onMobileNavOpen=_ref.onMobileNavOpen,rest=_objectWithoutProperties(_ref,[\"onMobileNavOpen\"]);var _useState=useState([]),_useState2=_slicedToArray(_useState,1),notifications=_useState2[0];return/*#__PURE__*/_jsx(AppBar,_objectSpread(_objectSpread({elevation:0},rest),{},{children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(RouterLink,{to:\"/\",children:/*#__PURE__*/_jsx(Logo,{})}),/*#__PURE__*/_jsx(Box,{sx:{flexGrow:1}}),/*#__PURE__*/_jsx(Hidden,{lgDown:true,children:/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",children:/*#__PURE__*/_jsx(Badge,{badgeContent:notifications.length,color:\"primary\",variant:\"dot\",children:/*#__PURE__*/_jsx(NotificationsIcon,{})})})}),/*#__PURE__*/_jsx(Hidden,{children:/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",children:/*#__PURE__*/_jsx(BiCalendar,{})})}),/*#__PURE__*/_jsx(Hidden,{children:/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:onMobileNavOpen,children:/*#__PURE__*/_jsx(MenuIcon,{})})})]})}));};export default DashboardNavbar;","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/components/DashboardNavbar.js"],"names":["useState","Link","RouterLink","AppBar","Badge","Box","Hidden","IconButton","Toolbar","MenuIcon","NotificationsIcon","BiCalendar","Logo","DashboardNavbar","onMobileNavOpen","rest","notifications","flexGrow","length"],"mappings":"6hBAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,IAAI,GAAIC,CAAAA,UAAjB,KAAmC,kBAAnC,CAEA,OACEC,MADF,CAEEC,KAFF,CAGEC,GAHF,CAIEC,MAJF,CAKEC,UALF,CAMEC,OANF,KAOO,mBAPP,CAQA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,0CAA9B,CACA;AACA,OAASC,UAAT,KAA2B,gBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAkC,IAA/BC,CAAAA,eAA+B,MAA/BA,eAA+B,CAAXC,IAAW,kEAChCf,QAAQ,CAAC,EAAD,CADwB,wCACjDgB,aADiD,eAGxD,mBACE,KAAC,MAAD,8BAAQ,SAAS,CAAE,CAAnB,EAA0BD,IAA1B,4BACE,MAAC,OAAD,yBACE,KAAC,UAAD,EAAY,EAAE,CAAC,GAAf,uBACE,KAAC,IAAD,IADF,EADF,cAIE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEE,QAAQ,CAAE,CAAZ,CAAT,EAJF,cAKE,KAAC,MAAD,EAAQ,MAAM,KAAd,uBACE,KAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,uBACE,KAAC,KAAD,EACE,YAAY,CAAED,aAAa,CAACE,MAD9B,CAEE,KAAK,CAAC,SAFR,CAGE,OAAO,CAAC,KAHV,uBAKE,KAAC,iBAAD,IALF,EADF,EADF,EALF,cAmBE,KAAC,MAAD,wBACE,KAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,uBACE,KAAC,UAAD,IADF,EADF,EAnBF,cAwBE,KAAC,MAAD,wBACE,KAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,CAA4B,OAAO,CAAEJ,eAArC,uBACE,KAAC,QAAD,IADF,EADF,EAxBF,GADF,GADF,CAkCD,CArCD,CA2CA,cAAeD,CAAAA,eAAf","sourcesContent":["import { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\n// import InputIcon from '@material-ui/icons/Input';\r\nimport { BiCalendar } from 'react-icons/bi';\r\nimport Logo from './Logo';\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar elevation={0} {...rest}>\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box sx={{ flexGrow: 1 }} />\r\n        <Hidden lgDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          {/* <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton> */}\r\n        </Hidden>\r\n        <Hidden>\r\n          <IconButton color=\"inherit\">\r\n            <BiCalendar />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden>\r\n          <IconButton color=\"inherit\" onClick={onMobileNavOpen}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nDashboardNavbar.propTypes = {\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default DashboardNavbar;\r\n"]},"metadata":{},"sourceType":"module"}