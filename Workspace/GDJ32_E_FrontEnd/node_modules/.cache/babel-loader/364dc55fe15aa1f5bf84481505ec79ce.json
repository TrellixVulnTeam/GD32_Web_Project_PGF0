{"ast":null,"code":"var _jsxFileName = \"C:\\\\GitHub\\\\GD32_E_WebProject\\\\Workspace\\\\GDJ32_E_FrontEnd\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport React, { useState, useEffect } from 'react';\nimport customAxios from './customAxios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const routing = useRoutes(routes); // IP주소 변수 선언\n\n  const [ip, setIp] = useState(''); // IP주소 값을 설정합니다.\n\n  function callback(data) {\n    setIp(data);\n  } // 첫번째 렌더링을 다 마친 후 실행합니다.\n\n\n  useEffect(() => {\n    // 클라이언트의 IP주소를 알아내는 백엔드의 함수를 호출합니다.\n    customAxios('/ip', callback);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), routing]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"TtIhPTxDyNCP5kRC56J/R+Z9UPk=\", false, function () {\n  return [useRoutes];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/GitHub/GD32_E_WebProject/Workspace/GDJ32_E_FrontEnd/src/App.js"],"names":["useRoutes","ThemeProvider","GlobalStyles","theme","routes","React","useState","useEffect","customAxios","App","routing","ip","setIp","callback","data"],"mappings":";;;AAAA,OAAO,6CAAP;AACA,SAASA,SAAT,QAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,oBAAP;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAGV,SAAS,CAACI,MAAD,CAAzB,CADgB,CAGhB;;AACA,QAAM,CAACO,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B,CAJgB,CAMhB;;AACA,WAASO,QAAT,CAAkBC,IAAlB,EAAwB;AACtBF,IAAAA,KAAK,CAACE,IAAD,CAAL;AACD,GATe,CAWhB;;;AACAP,EAAAA,SAAS,CACP,MAAM;AACJ;AACAC,IAAAA,WAAW,CAAC,KAAD,EAAQK,QAAR,CAAX;AACD,GAJM,EAIJ,EAJI,CAAT;AAOA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEV,KAAtB;AAAA,4BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGO,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD;;GAAMD,G;UACYT,S;;;KADZS,G;AA2BN,eAAeA,GAAf","sourcesContent":["import 'react-perfect-scrollbar/dist/css/styles.css';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport React, { useState, useEffect } from 'react';\nimport customAxios from './customAxios';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  // IP주소 변수 선언\n  const [ip, setIp] = useState('');\n\n  // IP주소 값을 설정합니다.\n  function callback(data) {\n    setIp(data);\n  }\n\n  // 첫번째 렌더링을 다 마친 후 실행합니다.\n  useEffect(\n    () => {\n      // 클라이언트의 IP주소를 알아내는 백엔드의 함수를 호출합니다.\n      customAxios('/ip', callback);\n    }, []\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}