{"ast":null,"code":"import _slicedToArray from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport debounce from '../utils/debounce';\nimport ownerWindow from '../utils/ownerWindow';\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\nimport animate from '../internal/animate';\nimport ScrollbarSize from './ScrollbarSize';\nimport withStyles from '../styles/withStyles';\nimport TabIndicator from './TabIndicator';\nimport TabScrollButton from '../TabScrollButton';\nimport useEventCallback from '../utils/useEventCallback';\nimport useTheme from '../styles/useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      overflow: 'hidden',\n      minHeight: 48,\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      display: 'flex'\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element. */\n    flexContainer: {\n      display: 'flex'\n    },\n\n    /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\n    flexContainerVertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\n    centered: {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the tablist element. */\n    scroller: {\n      position: 'relative',\n      display: 'inline-block',\n      flex: '1 1 auto',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\n    fixed: {\n      overflowX: 'hidden',\n      width: '100%'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`. */\n    scrollableX: {\n      overflowX: 'auto',\n      overflowY: 'hidden'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`. */\n    scrollableY: {\n      overflowY: 'auto',\n      overflowX: 'hidden'\n    },\n\n    /* Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`. */\n    hideScrollbar: {\n      // Hide dimensionless scrollbar on MacOS\n      scrollbarWidth: 'none',\n      // Firefox\n      '&::-webkit-scrollbar': {\n        display: 'none' // Safari + Chrome\n\n      }\n    },\n\n    /* Styles applied to the ScrollButtonComponent component. */\n    scrollButtons: {},\n\n    /* Styles applied to the ScrollButtonComponent component if `allowScrollButtonsMobile={true}`. */\n    scrollButtonsHideMobile: _defineProperty({}, theme.breakpoints.down('sm'), {\n      display: 'none'\n    }),\n\n    /* Styles applied to the TabIndicator component. */\n    indicator: {}\n  };\n};\nvar Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\n  var ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      action = props.action,\n      _props$centered = props.centered,\n      centered = _props$centered === void 0 ? false : _props$centered,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$allowScrollBut = props.allowScrollButtonsMobile,\n      allowScrollButtonsMobile = _props$allowScrollBut === void 0 ? false : _props$allowScrollBut,\n      _props$indicatorColor = props.indicatorColor,\n      indicatorColor = _props$indicatorColor === void 0 ? 'primary' : _props$indicatorColor,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$ScrollButtonCo = props.ScrollButtonComponent,\n      ScrollButtonComponent = _props$ScrollButtonCo === void 0 ? TabScrollButton : _props$ScrollButtonCo,\n      _props$scrollButtons = props.scrollButtons,\n      scrollButtons = _props$scrollButtons === void 0 ? 'auto' : _props$scrollButtons,\n      selectionFollowsFocus = props.selectionFollowsFocus,\n      _props$TabIndicatorPr = props.TabIndicatorProps,\n      TabIndicatorProps = _props$TabIndicatorPr === void 0 ? {} : _props$TabIndicatorPr,\n      TabScrollButtonProps = props.TabScrollButtonProps,\n      _props$textColor = props.textColor,\n      textColor = _props$textColor === void 0 ? 'primary' : _props$textColor,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      _props$visibleScrollb = props.visibleScrollbar,\n      visibleScrollbar = _props$visibleScrollb === void 0 ? false : _props$visibleScrollb,\n      other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\n\n  var theme = useTheme();\n  var scrollable = variant === 'scrollable';\n  var isRtl = theme.direction === 'rtl';\n  var vertical = orientation === 'vertical';\n  var scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\n  var start = vertical ? 'top' : 'left';\n  var end = vertical ? 'bottom' : 'right';\n  var clientSize = vertical ? 'clientHeight' : 'clientWidth';\n  var size = vertical ? 'height' : 'width';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (centered && scrollable) {\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\n    }\n  }\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      indicatorStyle = _React$useState4[0],\n      setIndicatorStyle = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    start: false,\n    end: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      displayScroll = _React$useState6[0],\n      setDisplayScroll = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    overflow: 'hidden',\n    scrollbarWidth: 0\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      scrollerStyle = _React$useState8[0],\n      setScrollerStyle = _React$useState8[1];\n\n  var valueToIndex = new Map();\n  var tabsRef = React.useRef(null);\n  var tabListRef = React.useRef(null);\n\n  var getTabsMeta = function getTabsMeta() {\n    var tabsNode = tabsRef.current;\n    var tabsMeta;\n\n    if (tabsNode) {\n      var rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\n\n      tabsMeta = {\n        clientWidth: tabsNode.clientWidth,\n        scrollLeft: tabsNode.scrollLeft,\n        scrollTop: tabsNode.scrollTop,\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\n        scrollWidth: tabsNode.scrollWidth,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right\n      };\n    }\n\n    var tabMeta;\n\n    if (tabsNode && value !== false) {\n      var _children = tabListRef.current.children;\n\n      if (_children.length > 0) {\n        var tab = _children[valueToIndex.get(value)];\n\n        if (process.env.NODE_ENV !== 'production') {\n          if (!tab) {\n            console.error([\"Material-UI: The value provided to the Tabs component is invalid.\", \"None of the Tabs' children match with `\".concat(value, \"`.\"), valueToIndex.keys ? \"You can provide one of the following values: \".concat(Array.from(valueToIndex.keys()).join(', '), \".\") : null].join('\\n'));\n          }\n        }\n\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\n      }\n    }\n\n    return {\n      tabsMeta: tabsMeta,\n      tabMeta: tabMeta\n    };\n  };\n\n  var updateIndicatorState = useEventCallback(function () {\n    var _newIndicatorStyle;\n\n    var _getTabsMeta = getTabsMeta(),\n        tabsMeta = _getTabsMeta.tabsMeta,\n        tabMeta = _getTabsMeta.tabMeta;\n\n    var startValue = 0;\n\n    if (tabMeta && tabsMeta) {\n      if (vertical) {\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\n      } else {\n        var correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\n        startValue = tabMeta.left - tabsMeta.left + correction;\n      }\n    }\n\n    var newIndicatorStyle = (_newIndicatorStyle = {}, _defineProperty(_newIndicatorStyle, start, startValue), _defineProperty(_newIndicatorStyle, size, tabMeta ? tabMeta[size] : 0), _newIndicatorStyle); // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\n      setIndicatorStyle(newIndicatorStyle);\n    } else {\n      var dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\n      var dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\n\n      if (dStart >= 1 || dSize >= 1) {\n        setIndicatorStyle(newIndicatorStyle);\n      }\n    }\n  });\n\n  var scroll = function scroll(scrollValue) {\n    animate(scrollStart, tabsRef.current, scrollValue);\n  };\n\n  var moveTabsScroll = function moveTabsScroll(delta) {\n    var scrollValue = tabsRef.current[scrollStart];\n\n    if (vertical) {\n      scrollValue += delta;\n    } else {\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\n\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\n    }\n\n    scroll(scrollValue);\n  };\n\n  var getScrollSize = function getScrollSize() {\n    var containerSize = tabsRef.current[clientSize];\n    var totalSize = 0;\n    var children = Array.from(tabListRef.current.children);\n\n    for (var i = 0; i < children.length; i += 1) {\n      var tab = children[i];\n\n      if (totalSize + tab[clientSize] > containerSize) {\n        break;\n      }\n\n      totalSize += tab[clientSize];\n    }\n\n    return totalSize;\n  };\n\n  var handleStartScrollClick = function handleStartScrollClick() {\n    moveTabsScroll(-1 * getScrollSize());\n  };\n\n  var handleEndScrollClick = function handleEndScrollClick() {\n    moveTabsScroll(getScrollSize());\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\n  // with CSS improves.\n\n\n  var handleScrollbarSizeChange = React.useCallback(function (scrollbarWidth) {\n    setScrollerStyle({\n      overflow: null,\n      scrollbarWidth: scrollbarWidth\n    });\n  }, []);\n\n  var getConditionalElements = function getConditionalElements() {\n    var conditionalElements = {};\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(ScrollbarSize, {\n      onChange: handleScrollbarSizeChange,\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\n    }) : null;\n    var scrollButtonsActive = displayScroll.start || displayScroll.end;\n    var showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'right' : 'left',\n      onClick: handleStartScrollClick,\n      disabled: !displayScroll.start,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\n      orientation: orientation,\n      direction: isRtl ? 'left' : 'right',\n      onClick: handleEndScrollClick,\n      disabled: !displayScroll.end,\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\n    }, TabScrollButtonProps)) : null;\n    return conditionalElements;\n  };\n\n  var scrollSelectedIntoView = useEventCallback(function () {\n    var _getTabsMeta2 = getTabsMeta(),\n        tabsMeta = _getTabsMeta2.tabsMeta,\n        tabMeta = _getTabsMeta2.tabMeta;\n\n    if (!tabMeta || !tabsMeta) {\n      return;\n    }\n\n    if (tabMeta[start] < tabsMeta[start]) {\n      // left side of button is out of view\n      var nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\n      scroll(nextScrollStart);\n    } else if (tabMeta[end] > tabsMeta[end]) {\n      // right side of button is out of view\n      var _nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\n\n      scroll(_nextScrollStart);\n    }\n  });\n  var updateScrollButtonState = useEventCallback(function () {\n    if (scrollable && scrollButtons !== false) {\n      var _tabsRef$current = tabsRef.current,\n          scrollTop = _tabsRef$current.scrollTop,\n          scrollHeight = _tabsRef$current.scrollHeight,\n          clientHeight = _tabsRef$current.clientHeight,\n          scrollWidth = _tabsRef$current.scrollWidth,\n          clientWidth = _tabsRef$current.clientWidth;\n      var showStartScroll;\n      var showEndScroll;\n\n      if (vertical) {\n        showStartScroll = scrollTop > 1;\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\n      } else {\n        var scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\n\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\n      }\n\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\n        setDisplayScroll({\n          start: showStartScroll,\n          end: showEndScroll\n        });\n      }\n    }\n  });\n  React.useEffect(function () {\n    var handleResize = debounce(function () {\n      updateIndicatorState();\n      updateScrollButtonState();\n    });\n    var win = ownerWindow(tabsRef.current);\n    win.addEventListener('resize', handleResize);\n    return function () {\n      handleResize.clear();\n      win.removeEventListener('resize', handleResize);\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n  var handleTabsScroll = React.useMemo(function () {\n    return debounce(function () {\n      updateScrollButtonState();\n    });\n  }, [updateScrollButtonState]);\n  React.useEffect(function () {\n    return function () {\n      handleTabsScroll.clear();\n    };\n  }, [handleTabsScroll]);\n  React.useEffect(function () {\n    setMounted(true);\n  }, []);\n  React.useEffect(function () {\n    updateIndicatorState();\n    updateScrollButtonState();\n  });\n  React.useEffect(function () {\n    scrollSelectedIntoView();\n  }, [scrollSelectedIntoView, indicatorStyle]);\n  React.useImperativeHandle(action, function () {\n    return {\n      updateIndicator: updateIndicatorState,\n      updateScrollButtons: updateScrollButtonState\n    };\n  }, [updateIndicatorState, updateScrollButtonState]);\n\n  var indicator = /*#__PURE__*/_jsx(TabIndicator, _extends({\n    className: classes.indicator,\n    orientation: orientation,\n    color: indicatorColor\n  }, TabIndicatorProps, {\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\n  }));\n\n  var childIndex = 0;\n  var children = React.Children.map(childrenProp, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    var childValue = child.props.value === undefined ? childIndex : child.props.value;\n    valueToIndex.set(childValue, childIndex);\n    var selected = childValue === value;\n    childIndex += 1;\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      fullWidth: variant === 'fullWidth',\n      indicator: selected && !mounted && indicator,\n      selected: selected,\n      selectionFollowsFocus: selectionFollowsFocus,\n      onChange: onChange,\n      textColor: textColor,\n      value: childValue\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\n      tabIndex: 0\n    } : {}));\n  });\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var target = event.target; // Keyboard navigation assumes that [role=\"tab\"] are siblings\n    // though we might warn in the future about nested, interactive elements\n    // as a a11y violation\n\n    var role = target.getAttribute('role');\n\n    if (role !== 'tab') {\n      return;\n    }\n\n    var newFocusTarget = null;\n    var previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\n    var nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\n\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\n      // swap previousItemKey with nextItemKey\n      previousItemKey = 'ArrowRight';\n      nextItemKey = 'ArrowLeft';\n    }\n\n    switch (event.key) {\n      case previousItemKey:\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\n        break;\n\n      case nextItemKey:\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\n        break;\n\n      case 'Home':\n        newFocusTarget = tabListRef.current.firstChild;\n        break;\n\n      case 'End':\n        newFocusTarget = tabListRef.current.lastChild;\n        break;\n\n      default:\n        break;\n    }\n\n    if (newFocusTarget !== null) {\n      newFocusTarget.focus();\n      event.preventDefault();\n    }\n  };\n\n  var conditionalElements = getConditionalElements();\n  return /*#__PURE__*/_jsxs(Component, _extends({\n    className: clsx(classes.root, className, vertical && classes.vertical),\n    ref: ref\n  }, other, {\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(\"div\", {\n      className: clsx(classes.scroller, scrollable ? [vertical ? classes.scrollableY : classes.scrollableX, !visibleScrollbar && classes.hideScrollbar] : classes.fixed),\n      style: _defineProperty({\n        overflow: scrollerStyle.overflow\n      }, vertical ? \"margin\".concat(isRtl ? 'Left' : 'Right') : 'marginBottom', visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth),\n      ref: tabsRef,\n      onScroll: handleTabsScroll,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        \"aria-label\": ariaLabel,\n        \"aria-labelledby\": ariaLabelledBy,\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\n        className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\n        onKeyDown: handleKeyDown,\n        ref: tabListRef,\n        role: \"tablist\",\n        children: children\n      }), mounted && indicator]\n    }), conditionalElements.scrollButtonEnd]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * Callback fired when the component mounts.\r\n   * This is useful when you want to trigger an action programmatically.\r\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\r\n   *\r\n   * @param {object} actions This object contains all possible actions\r\n   * that can be triggered programmatically.\r\n   */\n  action: refType,\n\n  /**\r\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\r\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\r\n   * @default false\r\n   */\n  allowScrollButtonsMobile: PropTypes.bool,\n\n  /**\r\n   * The label for the Tabs as a string.\r\n   */\n  'aria-label': PropTypes.string,\n\n  /**\r\n   * An id or list of ids separated by a space that label the Tabs.\r\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\r\n   * If `true`, the tabs are centered.\r\n   * This prop is intended for large views.\r\n   * @default false\r\n   */\n  centered: PropTypes.bool,\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes.elementType,\n\n  /**\r\n   * Determines the color of the indicator.\r\n   * @default 'primary'\r\n   */\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\r\n   * @param {any} value We default to the index of the child (number)\r\n   */\n  onChange: PropTypes.func,\n\n  /**\r\n   * The component orientation (layout flow direction).\r\n   * @default 'horizontal'\r\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\r\n   * The component used to render the scroll buttons.\r\n   * @default TabScrollButton\r\n   */\n  ScrollButtonComponent: PropTypes.elementType,\n\n  /**\r\n   * Determine behavior of scroll buttons when tabs are set to scroll:\r\n   *\r\n   * - `auto` will only present them when not all the items are visible.\r\n   * - `true` will always present them.\r\n   * - `false` will never present them.\r\n   *\r\n   * By default the scroll buttons are hidden on mobile.\r\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\r\n   * @default 'auto'\r\n   */\n  scrollButtons: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOf(['auto', false, true]),\n\n  /**\r\n   * If `true` the selected tab changes on focus. Otherwise it only\r\n   * changes on activation.\r\n   */\n  selectionFollowsFocus: PropTypes.bool,\n\n  /**\r\n   * Props applied to the tab indicator element.\r\n   * @default  {}\r\n   */\n  TabIndicatorProps: PropTypes.object,\n\n  /**\r\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\r\n   */\n  TabScrollButtonProps: PropTypes.object,\n\n  /**\r\n   * Determines the color of the `Tab`.\r\n   * @default 'primary'\r\n   */\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\r\n   * The value of the currently selected `Tab`.\r\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\r\n   */\n  value: PropTypes.any,\n\n  /**\r\n   * Determines additional display behavior of the tabs:\r\n   *\r\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\r\n   *  scrolling (or swiping) of the tab bar.\r\n   *  -`fullWidth` will make the tabs grow to use all the available space,\r\n   *  which should be used for small views, like on mobile.\r\n   *  - `standard` will render the default state.\r\n   * @default 'standard'\r\n   */\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\n\n  /**\r\n   * If `true`, the scrollbar is visible. It can be useful when displaying\r\n   * a long vertical list of tabs.\r\n   * @default false\r\n   */\n  visibleScrollbar: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTabs'\n})(Tabs);","map":{"version":3,"sources":["C:/GitHub/GDJ32_E_WebProject/Workspace/GDJ32_E_FrontEnd/node_modules/@material-ui/core/Tabs/Tabs.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","isFragment","PropTypes","clsx","refType","debounce","ownerWindow","getNormalizedScrollLeft","detectScrollType","animate","ScrollbarSize","withStyles","TabIndicator","TabScrollButton","useEventCallback","useTheme","jsx","_jsx","jsxs","_jsxs","styles","theme","root","overflow","minHeight","WebkitOverflowScrolling","display","vertical","flexDirection","flexContainer","flexContainerVertical","centered","justifyContent","scroller","position","flex","whiteSpace","fixed","overflowX","width","scrollableX","overflowY","scrollableY","hideScrollbar","scrollbarWidth","scrollButtons","scrollButtonsHideMobile","breakpoints","down","indicator","Tabs","forwardRef","props","ref","ariaLabel","ariaLabelledBy","action","childrenProp","children","classes","className","component","Component","allowScrollButtonsMobile","indicatorColor","onChange","orientation","ScrollButtonComponent","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar","other","scrollable","isRtl","direction","scrollStart","start","end","clientSize","size","process","env","NODE_ENV","console","error","useState","mounted","setMounted","indicatorStyle","setIndicatorStyle","displayScroll","setDisplayScroll","scrollerStyle","setScrollerStyle","valueToIndex","Map","tabsRef","useRef","tabListRef","getTabsMeta","tabsNode","current","tabsMeta","rect","getBoundingClientRect","clientWidth","scrollLeft","scrollTop","scrollLeftNormalized","scrollWidth","top","bottom","left","right","tabMeta","length","tab","get","keys","Array","from","join","updateIndicatorState","startValue","correction","newIndicatorStyle","isNaN","dStart","Math","abs","dSize","scroll","scrollValue","moveTabsScroll","delta","getScrollSize","containerSize","totalSize","i","handleStartScrollClick","handleEndScrollClick","handleScrollbarSizeChange","useCallback","getConditionalElements","conditionalElements","scrollbarSizeListener","scrollButtonsActive","showScrollButtons","scrollButtonStart","onClick","disabled","scrollButtonEnd","scrollSelectedIntoView","nextScrollStart","updateScrollButtonState","scrollHeight","clientHeight","showStartScroll","showEndScroll","useEffect","handleResize","win","addEventListener","clear","removeEventListener","handleTabsScroll","useMemo","useImperativeHandle","updateIndicator","updateScrollButtons","color","style","childIndex","Children","map","child","isValidElement","childValue","undefined","set","selected","cloneElement","fullWidth","tabIndex","handleKeyDown","event","target","role","getAttribute","newFocusTarget","previousItemKey","nextItemKey","key","previousElementSibling","lastChild","nextElementSibling","firstChild","focus","preventDefault","onScroll","onKeyDown","propTypes","bool","string","node","object","elementType","oneOf","func","any","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nimport * as React from 'react';\r\nimport { isFragment } from 'react-is';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { refType } from '@material-ui/utils';\r\nimport debounce from '../utils/debounce';\r\nimport ownerWindow from '../utils/ownerWindow';\r\nimport { getNormalizedScrollLeft, detectScrollType } from '../utils/scrollLeft';\r\nimport animate from '../internal/animate';\r\nimport ScrollbarSize from './ScrollbarSize';\r\nimport withStyles from '../styles/withStyles';\r\nimport TabIndicator from './TabIndicator';\r\nimport TabScrollButton from '../TabScrollButton';\r\nimport useEventCallback from '../utils/useEventCallback';\r\nimport useTheme from '../styles/useTheme';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\r\nexport const styles = theme => ({\r\n  /* Styles applied to the root element. */\r\n  root: {\r\n    overflow: 'hidden',\r\n    minHeight: 48,\r\n    WebkitOverflowScrolling: 'touch',\r\n    // Add iOS momentum scrolling.\r\n    display: 'flex'\r\n  },\r\n\r\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\r\n  vertical: {\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  /* Styles applied to the flex container element. */\r\n  flexContainer: {\r\n    display: 'flex'\r\n  },\r\n\r\n  /* Styles applied to the flex container element if `orientation=\"vertical\"`. */\r\n  flexContainerVertical: {\r\n    flexDirection: 'column'\r\n  },\r\n\r\n  /* Styles applied to the flex container element if `centered={true}` & `!variant=\"scrollable\"`. */\r\n  centered: {\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  /* Styles applied to the tablist element. */\r\n  scroller: {\r\n    position: 'relative',\r\n    display: 'inline-block',\r\n    flex: '1 1 auto',\r\n    whiteSpace: 'nowrap'\r\n  },\r\n\r\n  /* Styles applied to the tablist element if `!variant=\"scrollable\"`\b\b\b. */\r\n  fixed: {\r\n    overflowX: 'hidden',\r\n    width: '100%'\r\n  },\r\n\r\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"horizontal\"`. */\r\n  scrollableX: {\r\n    overflowX: 'auto',\r\n    overflowY: 'hidden'\r\n  },\r\n\r\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `orientation=\"vertical\"`. */\r\n  scrollableY: {\r\n    overflowY: 'auto',\r\n    overflowX: 'hidden'\r\n  },\r\n\r\n  /* Styles applied to the tablist element if `variant=\"scrollable\"` and `visibleScrollbar={false}`. */\r\n  hideScrollbar: {\r\n    // Hide dimensionless scrollbar on MacOS\r\n    scrollbarWidth: 'none',\r\n    // Firefox\r\n    '&::-webkit-scrollbar': {\r\n      display: 'none' // Safari + Chrome\r\n\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the ScrollButtonComponent component. */\r\n  scrollButtons: {},\r\n\r\n  /* Styles applied to the ScrollButtonComponent component if `allowScrollButtonsMobile={true}`. */\r\n  scrollButtonsHideMobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n\r\n  /* Styles applied to the TabIndicator component. */\r\n  indicator: {}\r\n});\r\nconst Tabs = /*#__PURE__*/React.forwardRef(function Tabs(props, ref) {\r\n  const {\r\n    'aria-label': ariaLabel,\r\n    'aria-labelledby': ariaLabelledBy,\r\n    action,\r\n    centered = false,\r\n    children: childrenProp,\r\n    classes,\r\n    className,\r\n    component: Component = 'div',\r\n    allowScrollButtonsMobile = false,\r\n    indicatorColor = 'primary',\r\n    onChange,\r\n    orientation = 'horizontal',\r\n    ScrollButtonComponent = TabScrollButton,\r\n    scrollButtons = 'auto',\r\n    selectionFollowsFocus,\r\n    TabIndicatorProps = {},\r\n    TabScrollButtonProps,\r\n    textColor = 'primary',\r\n    value,\r\n    variant = 'standard',\r\n    visibleScrollbar = false\r\n  } = props,\r\n        other = _objectWithoutPropertiesLoose(props, [\"aria-label\", \"aria-labelledby\", \"action\", \"centered\", \"children\", \"classes\", \"className\", \"component\", \"allowScrollButtonsMobile\", \"indicatorColor\", \"onChange\", \"orientation\", \"ScrollButtonComponent\", \"scrollButtons\", \"selectionFollowsFocus\", \"TabIndicatorProps\", \"TabScrollButtonProps\", \"textColor\", \"value\", \"variant\", \"visibleScrollbar\"]);\r\n\r\n  const theme = useTheme();\r\n  const scrollable = variant === 'scrollable';\r\n  const isRtl = theme.direction === 'rtl';\r\n  const vertical = orientation === 'vertical';\r\n  const scrollStart = vertical ? 'scrollTop' : 'scrollLeft';\r\n  const start = vertical ? 'top' : 'left';\r\n  const end = vertical ? 'bottom' : 'right';\r\n  const clientSize = vertical ? 'clientHeight' : 'clientWidth';\r\n  const size = vertical ? 'height' : 'width';\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    if (centered && scrollable) {\r\n      console.error('Material-UI: You can not use the `centered={true}` and `variant=\"scrollable\"` properties ' + 'at the same time on a `Tabs` component.');\r\n    }\r\n  }\r\n\r\n  const [mounted, setMounted] = React.useState(false);\r\n  const [indicatorStyle, setIndicatorStyle] = React.useState({});\r\n  const [displayScroll, setDisplayScroll] = React.useState({\r\n    start: false,\r\n    end: false\r\n  });\r\n  const [scrollerStyle, setScrollerStyle] = React.useState({\r\n    overflow: 'hidden',\r\n    scrollbarWidth: 0\r\n  });\r\n  const valueToIndex = new Map();\r\n  const tabsRef = React.useRef(null);\r\n  const tabListRef = React.useRef(null);\r\n\r\n  const getTabsMeta = () => {\r\n    const tabsNode = tabsRef.current;\r\n    let tabsMeta;\r\n\r\n    if (tabsNode) {\r\n      const rect = tabsNode.getBoundingClientRect(); // create a new object with ClientRect class props + scrollLeft\r\n\r\n      tabsMeta = {\r\n        clientWidth: tabsNode.clientWidth,\r\n        scrollLeft: tabsNode.scrollLeft,\r\n        scrollTop: tabsNode.scrollTop,\r\n        scrollLeftNormalized: getNormalizedScrollLeft(tabsNode, theme.direction),\r\n        scrollWidth: tabsNode.scrollWidth,\r\n        top: rect.top,\r\n        bottom: rect.bottom,\r\n        left: rect.left,\r\n        right: rect.right\r\n      };\r\n    }\r\n\r\n    let tabMeta;\r\n\r\n    if (tabsNode && value !== false) {\r\n      const children = tabListRef.current.children;\r\n\r\n      if (children.length > 0) {\r\n        const tab = children[valueToIndex.get(value)];\r\n\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (!tab) {\r\n            console.error([`Material-UI: The value provided to the Tabs component is invalid.`, `None of the Tabs' children match with \\`${value}\\`.`, valueToIndex.keys ? `You can provide one of the following values: ${Array.from(valueToIndex.keys()).join(', ')}.` : null].join('\\n'));\r\n          }\r\n        }\r\n\r\n        tabMeta = tab ? tab.getBoundingClientRect() : null;\r\n      }\r\n    }\r\n\r\n    return {\r\n      tabsMeta,\r\n      tabMeta\r\n    };\r\n  };\r\n\r\n  const updateIndicatorState = useEventCallback(() => {\r\n    const {\r\n      tabsMeta,\r\n      tabMeta\r\n    } = getTabsMeta();\r\n    let startValue = 0;\r\n\r\n    if (tabMeta && tabsMeta) {\r\n      if (vertical) {\r\n        startValue = tabMeta.top - tabsMeta.top + tabsMeta.scrollTop;\r\n      } else {\r\n        const correction = isRtl ? tabsMeta.scrollLeftNormalized + tabsMeta.clientWidth - tabsMeta.scrollWidth : tabsMeta.scrollLeft;\r\n        startValue = tabMeta.left - tabsMeta.left + correction;\r\n      }\r\n    }\r\n\r\n    const newIndicatorStyle = {\r\n      [start]: startValue,\r\n      // May be wrong until the font is loaded.\r\n      [size]: tabMeta ? tabMeta[size] : 0\r\n    }; // IE11 support, replace with Number.isNaN\r\n    // eslint-disable-next-line no-restricted-globals\r\n\r\n    if (isNaN(indicatorStyle[start]) || isNaN(indicatorStyle[size])) {\r\n      setIndicatorStyle(newIndicatorStyle);\r\n    } else {\r\n      const dStart = Math.abs(indicatorStyle[start] - newIndicatorStyle[start]);\r\n      const dSize = Math.abs(indicatorStyle[size] - newIndicatorStyle[size]);\r\n\r\n      if (dStart >= 1 || dSize >= 1) {\r\n        setIndicatorStyle(newIndicatorStyle);\r\n      }\r\n    }\r\n  });\r\n\r\n  const scroll = scrollValue => {\r\n    animate(scrollStart, tabsRef.current, scrollValue);\r\n  };\r\n\r\n  const moveTabsScroll = delta => {\r\n    let scrollValue = tabsRef.current[scrollStart];\r\n\r\n    if (vertical) {\r\n      scrollValue += delta;\r\n    } else {\r\n      scrollValue += delta * (isRtl ? -1 : 1); // Fix for Edge\r\n\r\n      scrollValue *= isRtl && detectScrollType() === 'reverse' ? -1 : 1;\r\n    }\r\n\r\n    scroll(scrollValue);\r\n  };\r\n\r\n  const getScrollSize = () => {\r\n    const containerSize = tabsRef.current[clientSize];\r\n    let totalSize = 0;\r\n    const children = Array.from(tabListRef.current.children);\r\n\r\n    for (let i = 0; i < children.length; i += 1) {\r\n      const tab = children[i];\r\n\r\n      if (totalSize + tab[clientSize] > containerSize) {\r\n        break;\r\n      }\r\n\r\n      totalSize += tab[clientSize];\r\n    }\r\n\r\n    return totalSize;\r\n  };\r\n\r\n  const handleStartScrollClick = () => {\r\n    moveTabsScroll(-1 * getScrollSize());\r\n  };\r\n\r\n  const handleEndScrollClick = () => {\r\n    moveTabsScroll(getScrollSize());\r\n  }; // TODO Remove <ScrollbarSize /> as browser support for hidding the scrollbar\r\n  // with CSS improves.\r\n\r\n\r\n  const handleScrollbarSizeChange = React.useCallback(scrollbarWidth => {\r\n    setScrollerStyle({\r\n      overflow: null,\r\n      scrollbarWidth\r\n    });\r\n  }, []);\r\n\r\n  const getConditionalElements = () => {\r\n    const conditionalElements = {};\r\n    conditionalElements.scrollbarSizeListener = scrollable ? /*#__PURE__*/_jsx(ScrollbarSize, {\r\n      onChange: handleScrollbarSizeChange,\r\n      className: clsx(classes.scrollableX, classes.hideScrollbar)\r\n    }) : null;\r\n    const scrollButtonsActive = displayScroll.start || displayScroll.end;\r\n    const showScrollButtons = scrollable && (scrollButtons === 'auto' && scrollButtonsActive || scrollButtons === true);\r\n    conditionalElements.scrollButtonStart = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\r\n      orientation: orientation,\r\n      direction: isRtl ? 'right' : 'left',\r\n      onClick: handleStartScrollClick,\r\n      disabled: !displayScroll.start,\r\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\r\n    }, TabScrollButtonProps)) : null;\r\n    conditionalElements.scrollButtonEnd = showScrollButtons ? /*#__PURE__*/_jsx(ScrollButtonComponent, _extends({\r\n      orientation: orientation,\r\n      direction: isRtl ? 'left' : 'right',\r\n      onClick: handleEndScrollClick,\r\n      disabled: !displayScroll.end,\r\n      className: clsx(classes.scrollButtons, !allowScrollButtonsMobile && classes.scrollButtonsHideMobile)\r\n    }, TabScrollButtonProps)) : null;\r\n    return conditionalElements;\r\n  };\r\n\r\n  const scrollSelectedIntoView = useEventCallback(() => {\r\n    const {\r\n      tabsMeta,\r\n      tabMeta\r\n    } = getTabsMeta();\r\n\r\n    if (!tabMeta || !tabsMeta) {\r\n      return;\r\n    }\r\n\r\n    if (tabMeta[start] < tabsMeta[start]) {\r\n      // left side of button is out of view\r\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[start] - tabsMeta[start]);\r\n      scroll(nextScrollStart);\r\n    } else if (tabMeta[end] > tabsMeta[end]) {\r\n      // right side of button is out of view\r\n      const nextScrollStart = tabsMeta[scrollStart] + (tabMeta[end] - tabsMeta[end]);\r\n      scroll(nextScrollStart);\r\n    }\r\n  });\r\n  const updateScrollButtonState = useEventCallback(() => {\r\n    if (scrollable && scrollButtons !== false) {\r\n      const {\r\n        scrollTop,\r\n        scrollHeight,\r\n        clientHeight,\r\n        scrollWidth,\r\n        clientWidth\r\n      } = tabsRef.current;\r\n      let showStartScroll;\r\n      let showEndScroll;\r\n\r\n      if (vertical) {\r\n        showStartScroll = scrollTop > 1;\r\n        showEndScroll = scrollTop < scrollHeight - clientHeight - 1;\r\n      } else {\r\n        const scrollLeft = getNormalizedScrollLeft(tabsRef.current, theme.direction); // use 1 for the potential rounding error with browser zooms.\r\n\r\n        showStartScroll = isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\r\n        showEndScroll = !isRtl ? scrollLeft < scrollWidth - clientWidth - 1 : scrollLeft > 1;\r\n      }\r\n\r\n      if (showStartScroll !== displayScroll.start || showEndScroll !== displayScroll.end) {\r\n        setDisplayScroll({\r\n          start: showStartScroll,\r\n          end: showEndScroll\r\n        });\r\n      }\r\n    }\r\n  });\r\n  React.useEffect(() => {\r\n    const handleResize = debounce(() => {\r\n      updateIndicatorState();\r\n      updateScrollButtonState();\r\n    });\r\n    const win = ownerWindow(tabsRef.current);\r\n    win.addEventListener('resize', handleResize);\r\n    return () => {\r\n      handleResize.clear();\r\n      win.removeEventListener('resize', handleResize);\r\n    };\r\n  }, [updateIndicatorState, updateScrollButtonState]);\r\n  const handleTabsScroll = React.useMemo(() => debounce(() => {\r\n    updateScrollButtonState();\r\n  }), [updateScrollButtonState]);\r\n  React.useEffect(() => {\r\n    return () => {\r\n      handleTabsScroll.clear();\r\n    };\r\n  }, [handleTabsScroll]);\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n  React.useEffect(() => {\r\n    updateIndicatorState();\r\n    updateScrollButtonState();\r\n  });\r\n  React.useEffect(() => {\r\n    scrollSelectedIntoView();\r\n  }, [scrollSelectedIntoView, indicatorStyle]);\r\n  React.useImperativeHandle(action, () => ({\r\n    updateIndicator: updateIndicatorState,\r\n    updateScrollButtons: updateScrollButtonState\r\n  }), [updateIndicatorState, updateScrollButtonState]);\r\n\r\n  const indicator = /*#__PURE__*/_jsx(TabIndicator, _extends({\r\n    className: classes.indicator,\r\n    orientation: orientation,\r\n    color: indicatorColor\r\n  }, TabIndicatorProps, {\r\n    style: _extends({}, indicatorStyle, TabIndicatorProps.style)\r\n  }));\r\n\r\n  let childIndex = 0;\r\n  const children = React.Children.map(childrenProp, child => {\r\n    if (! /*#__PURE__*/React.isValidElement(child)) {\r\n      return null;\r\n    }\r\n\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      if (isFragment(child)) {\r\n        console.error([\"Material-UI: The Tabs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\r\n      }\r\n    }\r\n\r\n    const childValue = child.props.value === undefined ? childIndex : child.props.value;\r\n    valueToIndex.set(childValue, childIndex);\r\n    const selected = childValue === value;\r\n    childIndex += 1;\r\n    return /*#__PURE__*/React.cloneElement(child, _extends({\r\n      fullWidth: variant === 'fullWidth',\r\n      indicator: selected && !mounted && indicator,\r\n      selected,\r\n      selectionFollowsFocus,\r\n      onChange,\r\n      textColor,\r\n      value: childValue\r\n    }, childIndex === 1 && value === false && !child.props.tabIndex ? {\r\n      tabIndex: 0\r\n    } : {}));\r\n  });\r\n\r\n  const handleKeyDown = event => {\r\n    const {\r\n      target\r\n    } = event; // Keyboard navigation assumes that [role=\"tab\"] are siblings\r\n    // though we might warn in the future about nested, interactive elements\r\n    // as a a11y violation\r\n\r\n    const role = target.getAttribute('role');\r\n\r\n    if (role !== 'tab') {\r\n      return;\r\n    }\r\n\r\n    let newFocusTarget = null;\r\n    let previousItemKey = orientation !== \"vertical\" ? 'ArrowLeft' : 'ArrowUp';\r\n    let nextItemKey = orientation !== \"vertical\" ? 'ArrowRight' : 'ArrowDown';\r\n\r\n    if (orientation !== \"vertical\" && theme.direction === 'rtl') {\r\n      // swap previousItemKey with nextItemKey\r\n      previousItemKey = 'ArrowRight';\r\n      nextItemKey = 'ArrowLeft';\r\n    }\r\n\r\n    switch (event.key) {\r\n      case previousItemKey:\r\n        newFocusTarget = target.previousElementSibling || tabListRef.current.lastChild;\r\n        break;\r\n\r\n      case nextItemKey:\r\n        newFocusTarget = target.nextElementSibling || tabListRef.current.firstChild;\r\n        break;\r\n\r\n      case 'Home':\r\n        newFocusTarget = tabListRef.current.firstChild;\r\n        break;\r\n\r\n      case 'End':\r\n        newFocusTarget = tabListRef.current.lastChild;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (newFocusTarget !== null) {\r\n      newFocusTarget.focus();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const conditionalElements = getConditionalElements();\r\n  return /*#__PURE__*/_jsxs(Component, _extends({\r\n    className: clsx(classes.root, className, vertical && classes.vertical),\r\n    ref: ref\r\n  }, other, {\r\n    children: [conditionalElements.scrollButtonStart, conditionalElements.scrollbarSizeListener, /*#__PURE__*/_jsxs(\"div\", {\r\n      className: clsx(classes.scroller, scrollable ? [vertical ? classes.scrollableY : classes.scrollableX, !visibleScrollbar && classes.hideScrollbar] : classes.fixed),\r\n      style: {\r\n        overflow: scrollerStyle.overflow,\r\n        [vertical ? `margin${isRtl ? 'Left' : 'Right'}` : 'marginBottom']: visibleScrollbar ? undefined : -scrollerStyle.scrollbarWidth\r\n      },\r\n      ref: tabsRef,\r\n      onScroll: handleTabsScroll,\r\n      children: [/*#__PURE__*/_jsx(\"div\", {\r\n        \"aria-label\": ariaLabel,\r\n        \"aria-labelledby\": ariaLabelledBy,\r\n        \"aria-orientation\": orientation === 'vertical' ? 'vertical' : null,\r\n        className: clsx(classes.flexContainer, vertical && classes.flexContainerVertical, centered && !scrollable && classes.centered),\r\n        onKeyDown: handleKeyDown,\r\n        ref: tabListRef,\r\n        role: \"tablist\",\r\n        children: children\r\n      }), mounted && indicator]\r\n    }), conditionalElements.scrollButtonEnd]\r\n  }));\r\n});\r\nprocess.env.NODE_ENV !== \"production\" ? Tabs.propTypes\r\n/* remove-proptypes */\r\n= {\r\n  // ----------------------------- Warning --------------------------------\r\n  // | These PropTypes are generated from the TypeScript type definitions |\r\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\r\n  // ----------------------------------------------------------------------\r\n\r\n  /**\r\n   * Callback fired when the component mounts.\r\n   * This is useful when you want to trigger an action programmatically.\r\n   * It supports two actions: `updateIndicator()` and `updateScrollButtons()`\r\n   *\r\n   * @param {object} actions This object contains all possible actions\r\n   * that can be triggered programmatically.\r\n   */\r\n  action: refType,\r\n\r\n  /**\r\n   * If `true`, the scroll buttons aren't forced hidden on mobile.\r\n   * By default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.\r\n   * @default false\r\n   */\r\n  allowScrollButtonsMobile: PropTypes.bool,\r\n\r\n  /**\r\n   * The label for the Tabs as a string.\r\n   */\r\n  'aria-label': PropTypes.string,\r\n\r\n  /**\r\n   * An id or list of ids separated by a space that label the Tabs.\r\n   */\r\n  'aria-labelledby': PropTypes.string,\r\n\r\n  /**\r\n   * If `true`, the tabs are centered.\r\n   * This prop is intended for large views.\r\n   * @default false\r\n   */\r\n  centered: PropTypes.bool,\r\n\r\n  /**\r\n   * The content of the component.\r\n   */\r\n  children: PropTypes.node,\r\n\r\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   */\r\n  classes: PropTypes.object,\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  className: PropTypes.string,\r\n\r\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\r\n  component: PropTypes.elementType,\r\n\r\n  /**\r\n   * Determines the color of the indicator.\r\n   * @default 'primary'\r\n   */\r\n  indicatorColor: PropTypes.oneOf(['primary', 'secondary']),\r\n\r\n  /**\r\n   * Callback fired when the value changes.\r\n   *\r\n   * @param {object} event The event source of the callback. **Warning**: This is a generic event not a change event.\r\n   * @param {any} value We default to the index of the child (number)\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * The component orientation (layout flow direction).\r\n   * @default 'horizontal'\r\n   */\r\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\r\n\r\n  /**\r\n   * The component used to render the scroll buttons.\r\n   * @default TabScrollButton\r\n   */\r\n  ScrollButtonComponent: PropTypes.elementType,\r\n\r\n  /**\r\n   * Determine behavior of scroll buttons when tabs are set to scroll:\r\n   *\r\n   * - `auto` will only present them when not all the items are visible.\r\n   * - `true` will always present them.\r\n   * - `false` will never present them.\r\n   *\r\n   * By default the scroll buttons are hidden on mobile.\r\n   * This behavior can be disabled with `allowScrollButtonsMobile`.\r\n   * @default 'auto'\r\n   */\r\n  scrollButtons: PropTypes\r\n  /* @typescript-to-proptypes-ignore */\r\n  .oneOf(['auto', false, true]),\r\n\r\n  /**\r\n   * If `true` the selected tab changes on focus. Otherwise it only\r\n   * changes on activation.\r\n   */\r\n  selectionFollowsFocus: PropTypes.bool,\r\n\r\n  /**\r\n   * Props applied to the tab indicator element.\r\n   * @default  {}\r\n   */\r\n  TabIndicatorProps: PropTypes.object,\r\n\r\n  /**\r\n   * Props applied to the [`TabScrollButton`](/api/tab-scroll-button/) element.\r\n   */\r\n  TabScrollButtonProps: PropTypes.object,\r\n\r\n  /**\r\n   * Determines the color of the `Tab`.\r\n   * @default 'primary'\r\n   */\r\n  textColor: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\r\n\r\n  /**\r\n   * The value of the currently selected `Tab`.\r\n   * If you don't want any selected `Tab`, you can set this prop to `false`.\r\n   */\r\n  value: PropTypes.any,\r\n\r\n  /**\r\n   * Determines additional display behavior of the tabs:\r\n   *\r\n   *  - `scrollable` will invoke scrolling properties and allow for horizontally\r\n   *  scrolling (or swiping) of the tab bar.\r\n   *  -`fullWidth` will make the tabs grow to use all the available space,\r\n   *  which should be used for small views, like on mobile.\r\n   *  - `standard` will render the default state.\r\n   * @default 'standard'\r\n   */\r\n  variant: PropTypes.oneOf(['fullWidth', 'scrollable', 'standard']),\r\n\r\n  /**\r\n   * If `true`, the scrollbar is visible. It can be useful when displaying\r\n   * a long vertical list of tabs.\r\n   * @default false\r\n   */\r\n  visibleScrollbar: PropTypes.bool\r\n} : void 0;\r\nexport default withStyles(styles, {\r\n  name: 'MuiTabs'\r\n})(Tabs);"]},"metadata":{},"sourceType":"module"}