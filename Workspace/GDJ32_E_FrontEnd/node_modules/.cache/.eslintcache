[{"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\index.js":"1","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\App.js":"2","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\serviceWorker.js":"3","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\routes.js":"4","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\mixins\\chartjs.js":"5","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\GlobalStyles.js":"6","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\theme\\index.js":"7","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\MainLayout.js":"8","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\DashboardLayout.js":"9","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\board\\CreateBoardComponent.js":"10","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\logout.js":"11","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Board.js":"12","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Settings.js":"13","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Login.js":"14","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\board\\ReadBoardComponent.js":"15","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\ProductList.js":"16","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\NotFound.js":"17","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Mypage.js":"18","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\TimeManagement.js":"19","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Register.js":"20","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Calendar.js":"21","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Home.js":"22","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\theme\\typography.js":"23","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\MainNavbar.js":"24","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\DashboardNavbar.js":"25","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\DashboardSidebar.js":"26","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\service\\ApiService.js":"27","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\calendar-data\\tasks.js":"28","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\home\\MyRoom.js":"29","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\Logo.js":"30","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\NavItem.js":"31","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\service\\BoardService.js":"32","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\ApiService.js":"33","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\mypage\\MypageProfile.js":"34","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\mypage\\MypageProfileDetails.js":"35","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\theme\\shadows.js":"36","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\__mocks__\\products.js":"37","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\product\\ProductCard.js":"38","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\product\\ProductListToolbar.js":"39","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\icons\\Facebook.js":"40","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\icons\\Google.js":"41","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\settings\\SettingsNotifications.js":"42","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\settings\\SettingsPassword.js":"43","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\board\\ListBoardComponent.js":"44"},{"size":305,"mtime":1623783697735,"results":"45","hashOfConfig":"46"},{"size":513,"mtime":1623783697641,"results":"47","hashOfConfig":"46"},{"size":5089,"mtime":1623783697777,"results":"48","hashOfConfig":"46"},{"size":2020,"mtime":1623783697770,"results":"49","hashOfConfig":"46"},{"size":5820,"mtime":1623783697736,"results":"50","hashOfConfig":"46"},{"size":709,"mtime":1623783697659,"results":"51","hashOfConfig":"46"},{"size":487,"mtime":1623784116889,"results":"52","hashOfConfig":"46"},{"size":1075,"mtime":1623783697663,"results":"53","hashOfConfig":"46"},{"size":1630,"mtime":1623783697653,"results":"54","hashOfConfig":"46"},{"size":7351,"mtime":1623783697683,"results":"55","hashOfConfig":"46"},{"size":518,"mtime":1623786704052,"results":"56","hashOfConfig":"46"},{"size":534,"mtime":1623783697740,"results":"57","hashOfConfig":"46"},{"size":714,"mtime":1623783697762,"results":"58","hashOfConfig":"46"},{"size":7382,"mtime":1623790195711,"results":"59","hashOfConfig":"46"},{"size":6472,"mtime":1623783697693,"results":"60","hashOfConfig":"46"},{"size":1415,"mtime":1623783697757,"results":"61","hashOfConfig":"46"},{"size":1630,"mtime":1623783697755,"results":"62","hashOfConfig":"46"},{"size":999,"mtime":1623783697752,"results":"63","hashOfConfig":"46"},{"size":5924,"mtime":1623783697764,"results":"64","hashOfConfig":"46"},{"size":9913,"mtime":1623783697758,"results":"65","hashOfConfig":"46"},{"size":10576,"mtime":1623783697742,"results":"66","hashOfConfig":"46"},{"size":988,"mtime":1623784105500,"results":"67","hashOfConfig":"46"},{"size":579,"mtime":1623783697784,"results":"68","hashOfConfig":"46"},{"size":388,"mtime":1623783697664,"results":"69","hashOfConfig":"46"},{"size":1684,"mtime":1623783697655,"results":"70","hashOfConfig":"46"},{"size":5532,"mtime":1623790294731,"results":"71","hashOfConfig":"46"},{"size":720,"mtime":1623783697773,"results":"72","hashOfConfig":"46"},{"size":6339,"mtime":1623783697649,"results":"73","hashOfConfig":"46"},{"size":658,"mtime":1623784096706,"results":"74","hashOfConfig":"46"},{"size":131,"mtime":1623783697661,"results":"75","hashOfConfig":"46"},{"size":1296,"mtime":1623783697666,"results":"76","hashOfConfig":"46"},{"size":1425,"mtime":1623783697775,"results":"77","hashOfConfig":"46"},{"size":2444,"mtime":1623783697638,"results":"78","hashOfConfig":"46"},{"size":2016,"mtime":1623789081113,"results":"79","hashOfConfig":"46"},{"size":5990,"mtime":1623790930098,"results":"80","hashOfConfig":"46"},{"size":1645,"mtime":1623783697782,"results":"81","hashOfConfig":"46"},{"size":1742,"mtime":1623783697645,"results":"82","hashOfConfig":"46"},{"size":2274,"mtime":1623783697717,"results":"83","hashOfConfig":"46"},{"size":1347,"mtime":1623783697719,"results":"84","hashOfConfig":"46"},{"size":780,"mtime":1623783697731,"results":"85","hashOfConfig":"46"},{"size":1526,"mtime":1623783697733,"results":"86","hashOfConfig":"46"},{"size":3169,"mtime":1623783697721,"results":"87","hashOfConfig":"46"},{"size":1598,"mtime":1623783697723,"results":"88","hashOfConfig":"46"},{"size":7909,"mtime":1623784084903,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w9m7s1",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\index.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\App.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\serviceWorker.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\routes.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\mixins\\chartjs.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\GlobalStyles.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\theme\\index.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\MainLayout.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\DashboardLayout.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\board\\CreateBoardComponent.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\logout.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Board.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Settings.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Login.js",["181"],"import { Link as RouterLink } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport FacebookIcon from 'src/icons/Facebook';\r\nimport GoogleIcon from 'src/icons/Google';\r\nimport ApiService from 'src/ApiService';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst initialValues = {\r\n  id: '',\r\n  password: ''\r\n}\r\n\r\nconst errMassage = {\r\n  hidden: false,\r\n  Massage: '회원 정보가 잘못 입력되었습니다. 다시 입력해 주세요'\r\n}\r\n\r\nconst Login = () => {\r\n  // const navigate = useNavigate();\r\n\r\n  function loginUser(user) {\r\n    ApiService.loginUser(user)\r\n      .then(res => {\r\n        console.log(\"res\");\r\n        console.log(res.statusText);\r\n        console.log(res.data.accessToken);\r\n        cookies.set(\"accessToken\", res.data.accessToken);\r\n        cookies.set(\"tokenType\", res.data.tokenType)\r\n        console.log(res.data)\r\n        console.log(cookies.get(\"accessToken\"));\r\n        console.log(res.data.name)\r\n        cookies.set(\"memberIndex\", encodeURIComponent(res.data.memberIndex));\r\n        cookies.set(\"id\", encodeURIComponent(res.data.id));\r\n        cookies.set(\"name\", encodeURIComponent(res.data.name));\r\n        cookies.set(\"phone\", encodeURIComponent(res.data.phone));\r\n        cookies.set(\"zipcode\", encodeURIComponent(res.data.zipcode));\r\n        cookies.set(\"address\", encodeURIComponent(res.data.address));\r\n        cookies.set(\"addressDetail\", encodeURIComponent(res.data.address_detail));\r\n        cookies.set(\"birthday\", encodeURIComponent(res.data.birthday));\r\n        cookies.set(\"email\", (res.data.email), \"UTF-8\");\r\n        console.log((cookies.get(\"email\")))\r\n\r\n        window.location.replace(\"/\")\r\n        // navigate('/', { replace: true });\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(\"login err : \", err);\r\n        alert(\"회원정보가 잘못되었습니다.\");\r\n        errMassage.hidden = false;\r\n        cookies.remove(\"userId\");\r\n        window.location.assign(\"/login\")\r\n        // navigate('/', { replace: true });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login | Material Kit</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{ initialValues }}\r\n            validationSchema={Yup.object().shape({\r\n              id: Yup.string().max(255).required('아이디를 입력해 주세요'),\r\n              password: Yup.string().max(255).required('비밀번호를 입력해 주세요')\r\n            })}\r\n            onSubmit={(values) => {\r\n              // navigate('/app/dashboard', { replace: true });\r\n              console.log(values);\r\n              loginUser(values);\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    로그인\r\n                  </Typography>\r\n                </Box>\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      fullWidth\r\n                      startIcon={<FacebookIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      페이스북 계정으로 로그인\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Button\r\n                      fullWidth\r\n                      startIcon={<GoogleIcon />}\r\n                      onClick={handleSubmit}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      구글 계정으로 로그인\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box\r\n                  sx={{\r\n                    pb: 1,\r\n                    pt: 3\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    혹은 일반 아이디로 로그인\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.id && errors.id)}\r\n                  fullWidth\r\n                  helperText={touched.id && errors.id}\r\n                  label=\"아이디\"\r\n                  margin=\"normal\"\r\n                  name=\"id\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={values.id}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"비밀번호\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    로그인\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  hidden={errMassage.hidden}\r\n                  color=\"red\"\r\n                  value={errMassage.Massage} />\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  아직 계정이 없습니까?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    회원 가입\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\board\\ReadBoardComponent.js",["182","183","184"],"import {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    // Container,\r\n    Grid,\r\n    // Link,\r\n    TextField,\r\n    Divider,\r\n    CardContent,\r\n    CardHeader,\r\n    Typography\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport BoardService from '../../service/BoardService';\r\n\r\nconst ReadBoardComponent = () => {\r\n    const history = useNavigate();\r\n    const { state } = useLocation();\r\n    // const { pIdx, pBoard } = state;\r\n    const pIdx = state.idx;\r\n    const pBoard = state.board;\r\n\r\n    // # 2. 페이지가 로딩될때 api와 통신하여 글 객체를 가져온다\r\n    // useEffect(() => {\r\n    //     BoardService.getOneBoard(idx).then(res => {\r\n    //         setIdx(res.data.getIdx);\r\n    //         setBoard(res.data);\r\n    //         console.log(idx);\r\n    //         console.log(board);\r\n    //         console.log(res);\r\n    //     });\r\n    // }, []);\r\n\r\n    // # 3. 파라미터 값에 따라 페이지에 표시할 내용을 변경 / 게시판 타입별로 표시를 다르게 하기\r\n    const returnBoardType = (categoryNo) => {\r\n        let category = null;\r\n        if (categoryNo === 0) {\r\n            category = \"공지사항\";\r\n\r\n        } else if (categoryNo === 1) {\r\n            category = \"자유게시판\";\r\n\r\n        } else if (categoryNo === 2) {\r\n            category = \"자료실\";\r\n\r\n        } else {\r\n            category = \"사고팝니다\";\r\n        }\r\n\r\n        return (\r\n            <Typography\r\n                variant=\"h4\"\r\n                gutterBottom>\r\n                카테고리 : {category}\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    const returnDate = (cTime) => {\r\n        console.log(\"생성일 : \", { cTime });\r\n        // https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat (date format 링크)\r\n        console.log(new Intl.DateTimeFormat('ko-KR').format(cTime));\r\n        return (\r\n            <div className=\"row\">\r\n                <h3>생성일 : [ {new Intl.DateTimeFormat('ko-KR').format(cTime)} ] </h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    // # 4. 글 목록으로 이동하는 함수를 정의 \r\n    const goToList = () => {\r\n        history('/app/board/1', { replace: true });\r\n    }\r\n\r\n    const goToUpdate = (event) => {\r\n        event.preventDefault();\r\n        // this.props.history.push(`/create-board/${this.state.index}`);\r\n        history(`/app/create-board/${pIdx}`, {\r\n            replace: true,\r\n            state: {\r\n                idx: pIdx,\r\n                board: pBoard\r\n            }\r\n        });\r\n    }\r\n\r\n    const deleteView = async function () {\r\n        if (window.confirm(\"정말로 글을 삭제하시겠습니까?\")) {\r\n            // BoardService.deleteBoard(this.state.index).then( res => {\r\n            BoardService.deleteBoard(pIdx).then(res => {\r\n                console.log(\"delete result => \", JSON.stringify(res));\r\n                if (res.status === 200) {\r\n                    history('/app/board/1');\r\n                } else {\r\n                    alert(\"글 삭제가 실패했습니다.\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const textFieldStyle = {\r\n        marginTop: 8,\r\n        width: '80%',\r\n        height: \"550px  \"\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Box>\r\n            <Card>\r\n                <CardHeader\r\n                    variant=\"h2\"\r\n                    subheader=\"게시글 보기\"\r\n                    title=\"게시글\"\r\n                />\r\n                <Divider />\r\n                <CardContent>\r\n                    <Grid >\r\n                        <Typography\r\n                            variant=\"h3\"\r\n                            marginBottom=\"25px\"\r\n                        >\r\n                            제목 : {pBoard.title}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid\r\n                        marginBottom=\"50px\">\r\n                        <Typography\r\n                            marginBottom=\"25px\"\r\n                            marginRight=\"350px\"\r\n                            align=\"right\">\r\n                            {returnBoardType(pBoard.category)}\r\n                        </Typography>\r\n                        <TextField\r\n                            defaultValue={pBoard.content}\r\n                            label=\"내용\"\r\n                            InputProps={{\r\n                                readOnly: true,\r\n                            }}\r\n                            size=\"medium\"\r\n                            margin=\"normal\"\r\n                            multiline=\"true\"\r\n                            rows=\"20\"\r\n                            rowsMax=\"20\"\r\n                            style={textFieldStyle}\r\n                        />\r\n                    </Grid>\r\n                    <Grid\r\n                        marginRight=\"300px\"\r\n                        marginBottom=\"50px\">\r\n                        <Typography\r\n                            align=\"right\">\r\n                            {returnDate(pBoard.createdTime, pBoard.updatedTime)}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid\r\n                        marginRight=\"300px\"\r\n                        align=\"right\">\r\n                        <Button\r\n                            onClick={goToList}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            글 목록으로 이동\r\n                        </Button>\r\n                        <Button\r\n                            onClick={goToUpdate}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            글 수정\r\n                        </Button>\r\n                        <Button\r\n                            onClick={() => deleteView()}\r\n                            style={{ marginLeft: \"10px\" }}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            글 삭제\r\n                        </Button>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card >\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ReadBoardComponent;","D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\ProductList.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\NotFound.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Mypage.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\TimeManagement.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Register.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Calendar.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\pages\\Home.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\theme\\typography.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\MainNavbar.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\DashboardNavbar.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\DashboardSidebar.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\service\\ApiService.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\calendar-data\\tasks.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\home\\MyRoom.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\Logo.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\NavItem.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\service\\BoardService.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\ApiService.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\mypage\\MypageProfile.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\mypage\\MypageProfileDetails.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\theme\\shadows.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\__mocks__\\products.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\product\\ProductCard.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\product\\ProductListToolbar.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\icons\\Facebook.js",[],["185","186","187","188","189"],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\icons\\Google.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\settings\\SettingsNotifications.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\settings\\SettingsPassword.js",[],"D:\\gits\\GDJ_32\\SubBranch\\Workspace\\GDJ32_E_FrontEnd\\src\\components\\board\\ListBoardComponent.js",[],{"ruleId":"190","severity":1,"message":"191","line":62,"column":9,"nodeType":"192","messageId":"193","endLine":62,"endColumn":32},{"ruleId":"194","severity":1,"message":"195","line":89,"column":24,"nodeType":"196","messageId":"197","endLine":89,"endColumn":39},{"ruleId":"190","severity":1,"message":"198","line":90,"column":13,"nodeType":"192","messageId":"193","endLine":90,"endColumn":47},{"ruleId":"190","severity":1,"message":"191","line":97,"column":21,"nodeType":"192","messageId":"193","endLine":97,"endColumn":43},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},"no-alert","Unexpected alert.","CallExpression","unexpected","func-names","Unexpected unnamed async function.","FunctionExpression","unnamed","Unexpected confirm.","lines-around-directive",["209"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"padding-line-between-statements"]